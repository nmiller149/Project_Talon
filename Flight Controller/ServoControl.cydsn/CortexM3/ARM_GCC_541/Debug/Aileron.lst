ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Aileron.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Aileron_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Aileron_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Aileron_Enable, %function
  25              	Aileron_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\Aileron.c"
   1:Generated_Source\PSoC5/Aileron.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Aileron.c **** * File Name: Aileron.c
   3:Generated_Source\PSoC5/Aileron.c **** * Version 3.30
   4:Generated_Source\PSoC5/Aileron.c **** *
   5:Generated_Source\PSoC5/Aileron.c **** * Description:
   6:Generated_Source\PSoC5/Aileron.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/Aileron.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/Aileron.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/Aileron.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/Aileron.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/Aileron.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/Aileron.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/Aileron.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/Aileron.c **** *
  15:Generated_Source\PSoC5/Aileron.c **** * Note:
  16:Generated_Source\PSoC5/Aileron.c **** *
  17:Generated_Source\PSoC5/Aileron.c **** *******************************************************************************
  18:Generated_Source\PSoC5/Aileron.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Aileron.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Aileron.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Aileron.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Aileron.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Aileron.c **** 
  24:Generated_Source\PSoC5/Aileron.c **** #include "Aileron.h"
  25:Generated_Source\PSoC5/Aileron.c **** 
  26:Generated_Source\PSoC5/Aileron.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/Aileron.c **** #ifdef Aileron_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/Aileron.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/Aileron.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/Aileron.c **** #endif /* Aileron_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 2


  31:Generated_Source\PSoC5/Aileron.c **** 
  32:Generated_Source\PSoC5/Aileron.c **** uint8 Aileron_initVar = 0u;
  33:Generated_Source\PSoC5/Aileron.c **** 
  34:Generated_Source\PSoC5/Aileron.c **** 
  35:Generated_Source\PSoC5/Aileron.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/Aileron.c **** * Function Name: Aileron_Start
  37:Generated_Source\PSoC5/Aileron.c **** ********************************************************************************
  38:Generated_Source\PSoC5/Aileron.c **** *
  39:Generated_Source\PSoC5/Aileron.c **** * Summary:
  40:Generated_Source\PSoC5/Aileron.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/Aileron.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/Aileron.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/Aileron.c **** *
  44:Generated_Source\PSoC5/Aileron.c **** * Parameters:
  45:Generated_Source\PSoC5/Aileron.c **** *  None
  46:Generated_Source\PSoC5/Aileron.c **** *
  47:Generated_Source\PSoC5/Aileron.c **** * Return:
  48:Generated_Source\PSoC5/Aileron.c **** *  None
  49:Generated_Source\PSoC5/Aileron.c **** *
  50:Generated_Source\PSoC5/Aileron.c **** * Global variables:
  51:Generated_Source\PSoC5/Aileron.c **** *  Aileron_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/Aileron.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/Aileron.c **** *
  54:Generated_Source\PSoC5/Aileron.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/Aileron.c **** void Aileron_Start(void) 
  56:Generated_Source\PSoC5/Aileron.c **** {
  57:Generated_Source\PSoC5/Aileron.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/Aileron.c ****     if(Aileron_initVar == 0u)
  59:Generated_Source\PSoC5/Aileron.c ****     {
  60:Generated_Source\PSoC5/Aileron.c ****         Aileron_Init();
  61:Generated_Source\PSoC5/Aileron.c ****         Aileron_initVar = 1u;
  62:Generated_Source\PSoC5/Aileron.c ****     }
  63:Generated_Source\PSoC5/Aileron.c ****     Aileron_Enable();
  64:Generated_Source\PSoC5/Aileron.c **** 
  65:Generated_Source\PSoC5/Aileron.c **** }
  66:Generated_Source\PSoC5/Aileron.c **** 
  67:Generated_Source\PSoC5/Aileron.c **** 
  68:Generated_Source\PSoC5/Aileron.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/Aileron.c **** * Function Name: Aileron_Init
  70:Generated_Source\PSoC5/Aileron.c **** ********************************************************************************
  71:Generated_Source\PSoC5/Aileron.c **** *
  72:Generated_Source\PSoC5/Aileron.c **** * Summary:
  73:Generated_Source\PSoC5/Aileron.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/Aileron.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/Aileron.c **** *  Aileron_Start().
  76:Generated_Source\PSoC5/Aileron.c **** *
  77:Generated_Source\PSoC5/Aileron.c **** * Parameters:
  78:Generated_Source\PSoC5/Aileron.c **** *  None
  79:Generated_Source\PSoC5/Aileron.c **** *
  80:Generated_Source\PSoC5/Aileron.c **** * Return:
  81:Generated_Source\PSoC5/Aileron.c **** *  None
  82:Generated_Source\PSoC5/Aileron.c **** *
  83:Generated_Source\PSoC5/Aileron.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/Aileron.c **** void Aileron_Init(void) 
  85:Generated_Source\PSoC5/Aileron.c **** {
  86:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_UsingFixedFunction || Aileron_UseControl)
  87:Generated_Source\PSoC5/Aileron.c ****         uint8 ctrl;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 3


  88:Generated_Source\PSoC5/Aileron.c ****     #endif /* (Aileron_UsingFixedFunction || Aileron_UseControl) */
  89:Generated_Source\PSoC5/Aileron.c **** 
  90:Generated_Source\PSoC5/Aileron.c ****     #if(!Aileron_UsingFixedFunction)
  91:Generated_Source\PSoC5/Aileron.c ****         #if(Aileron_UseStatus)
  92:Generated_Source\PSoC5/Aileron.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/Aileron.c ****             uint8 Aileron_interruptState;
  94:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_UseStatus) */
  95:Generated_Source\PSoC5/Aileron.c ****     #endif /* (!Aileron_UsingFixedFunction) */
  96:Generated_Source\PSoC5/Aileron.c **** 
  97:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_UsingFixedFunction)
  98:Generated_Source\PSoC5/Aileron.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/Aileron.c ****         Aileron_CONTROL |= Aileron_CFG0_MODE;
 100:Generated_Source\PSoC5/Aileron.c ****         #if (Aileron_DeadBand2_4)
 101:Generated_Source\PSoC5/Aileron.c ****             Aileron_CONTROL |= Aileron_CFG0_DB;
 102:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_DeadBand2_4) */
 103:Generated_Source\PSoC5/Aileron.c **** 
 104:Generated_Source\PSoC5/Aileron.c ****         ctrl = Aileron_CONTROL3 & ((uint8 )(~Aileron_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/Aileron.c ****         Aileron_CONTROL3 = ctrl | Aileron_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/Aileron.c **** 
 107:Generated_Source\PSoC5/Aileron.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/Aileron.c ****         Aileron_RT1 &= ((uint8)(~Aileron_RT1_MASK));
 109:Generated_Source\PSoC5/Aileron.c ****         Aileron_RT1 |= Aileron_SYNC;
 110:Generated_Source\PSoC5/Aileron.c **** 
 111:Generated_Source\PSoC5/Aileron.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/Aileron.c ****         Aileron_RT1 &= ((uint8)(~Aileron_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/Aileron.c ****         Aileron_RT1 |= Aileron_SYNCDSI_EN;
 114:Generated_Source\PSoC5/Aileron.c **** 
 115:Generated_Source\PSoC5/Aileron.c ****     #elif (Aileron_UseControl)
 116:Generated_Source\PSoC5/Aileron.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/Aileron.c ****         ctrl = Aileron_CONTROL & ((uint8)(~Aileron_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/Aileron.c ****                 ((uint8)(~Aileron_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/Aileron.c ****         Aileron_CONTROL = ctrl | Aileron_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/Aileron.c ****                                    Aileron_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/Aileron.c ****     #endif /* (Aileron_UsingFixedFunction) */
 122:Generated_Source\PSoC5/Aileron.c **** 
 123:Generated_Source\PSoC5/Aileron.c ****     #if (!Aileron_UsingFixedFunction)
 124:Generated_Source\PSoC5/Aileron.c ****         #if (Aileron_Resolution == 8)
 125:Generated_Source\PSoC5/Aileron.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/Aileron.c ****             Aileron_AUX_CONTROLDP0 |= (Aileron_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/Aileron.c ****         #else /* (Aileron_Resolution == 16)*/
 128:Generated_Source\PSoC5/Aileron.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/Aileron.c ****             Aileron_AUX_CONTROLDP0 |= (Aileron_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/Aileron.c ****             Aileron_AUX_CONTROLDP1 |= (Aileron_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_Resolution == 8) */
 132:Generated_Source\PSoC5/Aileron.c **** 
 133:Generated_Source\PSoC5/Aileron.c ****         Aileron_WriteCounter(Aileron_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/Aileron.c ****     #endif /* (!Aileron_UsingFixedFunction) */
 135:Generated_Source\PSoC5/Aileron.c **** 
 136:Generated_Source\PSoC5/Aileron.c ****     Aileron_WritePeriod(Aileron_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/Aileron.c **** 
 138:Generated_Source\PSoC5/Aileron.c ****         #if (Aileron_UseOneCompareMode)
 139:Generated_Source\PSoC5/Aileron.c ****             Aileron_WriteCompare(Aileron_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/Aileron.c ****         #else
 141:Generated_Source\PSoC5/Aileron.c ****             Aileron_WriteCompare1(Aileron_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/Aileron.c ****             Aileron_WriteCompare2(Aileron_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_UseOneCompareMode) */
 144:Generated_Source\PSoC5/Aileron.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 4


 145:Generated_Source\PSoC5/Aileron.c ****         #if (Aileron_KillModeMinTime)
 146:Generated_Source\PSoC5/Aileron.c ****             Aileron_WriteKillTime(Aileron_MinimumKillTime);
 147:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_KillModeMinTime) */
 148:Generated_Source\PSoC5/Aileron.c **** 
 149:Generated_Source\PSoC5/Aileron.c ****         #if (Aileron_DeadBandUsed)
 150:Generated_Source\PSoC5/Aileron.c ****             Aileron_WriteDeadTime(Aileron_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_DeadBandUsed) */
 152:Generated_Source\PSoC5/Aileron.c **** 
 153:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_UseStatus || Aileron_UsingFixedFunction)
 154:Generated_Source\PSoC5/Aileron.c ****         Aileron_SetInterruptMode(Aileron_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/Aileron.c ****     #endif /* (Aileron_UseStatus || Aileron_UsingFixedFunction) */
 156:Generated_Source\PSoC5/Aileron.c **** 
 157:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_UsingFixedFunction)
 158:Generated_Source\PSoC5/Aileron.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/Aileron.c ****         Aileron_GLOBAL_ENABLE |= Aileron_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/Aileron.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/Aileron.c ****         Aileron_CONTROL2 |= Aileron_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/Aileron.c ****     #else
 163:Generated_Source\PSoC5/Aileron.c ****         #if(Aileron_UseStatus)
 164:Generated_Source\PSoC5/Aileron.c **** 
 165:Generated_Source\PSoC5/Aileron.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/Aileron.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/Aileron.c ****             Aileron_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/Aileron.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/Aileron.c ****             Aileron_STATUS_AUX_CTRL |= Aileron_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/Aileron.c **** 
 171:Generated_Source\PSoC5/Aileron.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/Aileron.c ****             CyExitCriticalSection(Aileron_interruptState);
 173:Generated_Source\PSoC5/Aileron.c **** 
 174:Generated_Source\PSoC5/Aileron.c ****             /* Clear the FIFO to enable the Aileron_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/Aileron.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/Aileron.c ****             Aileron_ClearFIFO();
 177:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_UseStatus) */
 178:Generated_Source\PSoC5/Aileron.c ****     #endif /* (Aileron_UsingFixedFunction) */
 179:Generated_Source\PSoC5/Aileron.c **** }
 180:Generated_Source\PSoC5/Aileron.c **** 
 181:Generated_Source\PSoC5/Aileron.c **** 
 182:Generated_Source\PSoC5/Aileron.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/Aileron.c **** * Function Name: Aileron_Enable
 184:Generated_Source\PSoC5/Aileron.c **** ********************************************************************************
 185:Generated_Source\PSoC5/Aileron.c **** *
 186:Generated_Source\PSoC5/Aileron.c **** * Summary:
 187:Generated_Source\PSoC5/Aileron.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/Aileron.c **** *
 189:Generated_Source\PSoC5/Aileron.c **** * Parameters:
 190:Generated_Source\PSoC5/Aileron.c **** *  None
 191:Generated_Source\PSoC5/Aileron.c **** *
 192:Generated_Source\PSoC5/Aileron.c **** * Return:
 193:Generated_Source\PSoC5/Aileron.c **** *  None
 194:Generated_Source\PSoC5/Aileron.c **** *
 195:Generated_Source\PSoC5/Aileron.c **** * Side Effects:
 196:Generated_Source\PSoC5/Aileron.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/Aileron.c **** *
 198:Generated_Source\PSoC5/Aileron.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/Aileron.c **** void Aileron_Enable(void) 
 200:Generated_Source\PSoC5/Aileron.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/Aileron.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_UsingFixedFunction)
 203:Generated_Source\PSoC5/Aileron.c ****         Aileron_GLOBAL_ENABLE |= Aileron_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/Aileron.c ****         Aileron_GLOBAL_STBY_ENABLE |= Aileron_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/Aileron.c ****     #endif /* (Aileron_UsingFixedFunction) */
 206:Generated_Source\PSoC5/Aileron.c **** 
 207:Generated_Source\PSoC5/Aileron.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_UseControl || Aileron_UsingFixedFunction)
 209:Generated_Source\PSoC5/Aileron.c ****         Aileron_CONTROL |= Aileron_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 78650040 		.word	1073767800
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	Aileron_Enable, .-Aileron_Enable
  46              		.section	.text.Aileron_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	Aileron_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Aileron_Stop, %function
  52              	Aileron_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/Aileron.c ****     #endif /* (Aileron_UseControl || Aileron_UsingFixedFunction) */
 211:Generated_Source\PSoC5/Aileron.c **** }
 212:Generated_Source\PSoC5/Aileron.c **** 
 213:Generated_Source\PSoC5/Aileron.c **** 
 214:Generated_Source\PSoC5/Aileron.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/Aileron.c **** * Function Name: Aileron_Stop
 216:Generated_Source\PSoC5/Aileron.c **** ********************************************************************************
 217:Generated_Source\PSoC5/Aileron.c **** *
 218:Generated_Source\PSoC5/Aileron.c **** * Summary:
 219:Generated_Source\PSoC5/Aileron.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/Aileron.c **** *  interrupts.
 221:Generated_Source\PSoC5/Aileron.c **** *
 222:Generated_Source\PSoC5/Aileron.c **** * Parameters:
 223:Generated_Source\PSoC5/Aileron.c **** *  None
 224:Generated_Source\PSoC5/Aileron.c **** *
 225:Generated_Source\PSoC5/Aileron.c **** * Return:
 226:Generated_Source\PSoC5/Aileron.c **** *  None
 227:Generated_Source\PSoC5/Aileron.c **** *
 228:Generated_Source\PSoC5/Aileron.c **** * Side Effects:
 229:Generated_Source\PSoC5/Aileron.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/Aileron.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/Aileron.c **** *
 232:Generated_Source\PSoC5/Aileron.c **** *******************************************************************************/
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 6


 233:Generated_Source\PSoC5/Aileron.c **** void Aileron_Stop(void) 
 234:Generated_Source\PSoC5/Aileron.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_UseControl || Aileron_UsingFixedFunction)
 236:Generated_Source\PSoC5/Aileron.c ****         Aileron_CONTROL &= ((uint8)(~Aileron_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 78650040 		.word	1073767800
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	Aileron_Stop, .-Aileron_Stop
  72              		.section	.text.Aileron_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	Aileron_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	Aileron_WriteCounter, %function
  78              	Aileron_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/Aileron.c ****     #endif /* (Aileron_UseControl || Aileron_UsingFixedFunction) */
 238:Generated_Source\PSoC5/Aileron.c **** 
 239:Generated_Source\PSoC5/Aileron.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_UsingFixedFunction)
 241:Generated_Source\PSoC5/Aileron.c ****         Aileron_GLOBAL_ENABLE &= ((uint8)(~Aileron_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/Aileron.c ****         Aileron_GLOBAL_STBY_ENABLE &= ((uint8)(~Aileron_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/Aileron.c ****     #endif /* (Aileron_UsingFixedFunction) */
 244:Generated_Source\PSoC5/Aileron.c **** }
 245:Generated_Source\PSoC5/Aileron.c **** 
 246:Generated_Source\PSoC5/Aileron.c **** #if (Aileron_UseOneCompareMode)
 247:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_CompareMode1SW)
 248:Generated_Source\PSoC5/Aileron.c **** 
 249:Generated_Source\PSoC5/Aileron.c **** 
 250:Generated_Source\PSoC5/Aileron.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/Aileron.c ****         * Function Name: Aileron_SetCompareMode
 252:Generated_Source\PSoC5/Aileron.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/Aileron.c ****         *
 254:Generated_Source\PSoC5/Aileron.c ****         * Summary:
 255:Generated_Source\PSoC5/Aileron.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/Aileron.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/Aileron.c ****         *
 258:Generated_Source\PSoC5/Aileron.c ****         * Parameters:
 259:Generated_Source\PSoC5/Aileron.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/Aileron.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/Aileron.c ****         *
 262:Generated_Source\PSoC5/Aileron.c ****         * Return:
 263:Generated_Source\PSoC5/Aileron.c ****         *  None
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 7


 264:Generated_Source\PSoC5/Aileron.c ****         *
 265:Generated_Source\PSoC5/Aileron.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/Aileron.c ****         void Aileron_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/Aileron.c ****         {
 268:Generated_Source\PSoC5/Aileron.c ****             #if(Aileron_UsingFixedFunction)
 269:Generated_Source\PSoC5/Aileron.c **** 
 270:Generated_Source\PSoC5/Aileron.c ****                 #if(0 != Aileron_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/Aileron.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << Aileron_CTRL_CMPMODE1_
 272:Generated_Source\PSoC5/Aileron.c ****                 #else
 273:Generated_Source\PSoC5/Aileron.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/Aileron.c ****                 #endif /* (0 != Aileron_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/Aileron.c **** 
 276:Generated_Source\PSoC5/Aileron.c ****                 Aileron_CONTROL3 &= ((uint8)(~Aileron_CTRL_CMPMODE1_MASK)); /*Clear Existing Data *
 277:Generated_Source\PSoC5/Aileron.c ****                 Aileron_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/Aileron.c **** 
 279:Generated_Source\PSoC5/Aileron.c ****             #elif (Aileron_UseControl)
 280:Generated_Source\PSoC5/Aileron.c **** 
 281:Generated_Source\PSoC5/Aileron.c ****                 #if(0 != Aileron_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/Aileron.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << Aileron_CTRL_CMPMODE1
 283:Generated_Source\PSoC5/Aileron.c ****                                                 Aileron_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/Aileron.c ****                 #else
 285:Generated_Source\PSoC5/Aileron.c ****                     uint8 comparemode1masked = comparemode & Aileron_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/Aileron.c ****                 #endif /* (0 != Aileron_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/Aileron.c **** 
 288:Generated_Source\PSoC5/Aileron.c ****                 #if(0 != Aileron_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/Aileron.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << Aileron_CTRL_CMPMODE2
 290:Generated_Source\PSoC5/Aileron.c ****                                                Aileron_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/Aileron.c ****                 #else
 292:Generated_Source\PSoC5/Aileron.c ****                     uint8 comparemode2masked = comparemode & Aileron_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/Aileron.c ****                 #endif /* (0 != Aileron_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/Aileron.c **** 
 295:Generated_Source\PSoC5/Aileron.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/Aileron.c ****                 Aileron_CONTROL &= ((uint8)(~(Aileron_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/Aileron.c ****                                             Aileron_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/Aileron.c ****                 Aileron_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/Aileron.c **** 
 300:Generated_Source\PSoC5/Aileron.c ****             #else
 301:Generated_Source\PSoC5/Aileron.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/Aileron.c ****             #endif /* (Aileron_UsingFixedFunction) */
 303:Generated_Source\PSoC5/Aileron.c ****         }
 304:Generated_Source\PSoC5/Aileron.c ****     #endif /* Aileron_CompareMode1SW */
 305:Generated_Source\PSoC5/Aileron.c **** 
 306:Generated_Source\PSoC5/Aileron.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/Aileron.c **** 
 308:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_CompareMode1SW)
 309:Generated_Source\PSoC5/Aileron.c **** 
 310:Generated_Source\PSoC5/Aileron.c **** 
 311:Generated_Source\PSoC5/Aileron.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/Aileron.c ****         * Function Name: Aileron_SetCompareMode1
 313:Generated_Source\PSoC5/Aileron.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/Aileron.c ****         *
 315:Generated_Source\PSoC5/Aileron.c ****         * Summary:
 316:Generated_Source\PSoC5/Aileron.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/Aileron.c ****         *
 318:Generated_Source\PSoC5/Aileron.c ****         * Parameters:
 319:Generated_Source\PSoC5/Aileron.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/Aileron.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 8


 321:Generated_Source\PSoC5/Aileron.c ****         *
 322:Generated_Source\PSoC5/Aileron.c ****         * Return:
 323:Generated_Source\PSoC5/Aileron.c ****         *  None
 324:Generated_Source\PSoC5/Aileron.c ****         *
 325:Generated_Source\PSoC5/Aileron.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/Aileron.c ****         void Aileron_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/Aileron.c ****         {
 328:Generated_Source\PSoC5/Aileron.c ****             #if(0 != Aileron_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/Aileron.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << Aileron_CTRL_CMPMODE1_SHIF
 330:Generated_Source\PSoC5/Aileron.c ****                                            Aileron_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/Aileron.c ****             #else
 332:Generated_Source\PSoC5/Aileron.c ****                 uint8 comparemodemasked = comparemode & Aileron_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/Aileron.c ****             #endif /* (0 != Aileron_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/Aileron.c **** 
 335:Generated_Source\PSoC5/Aileron.c ****             #if (Aileron_UseControl)
 336:Generated_Source\PSoC5/Aileron.c ****                 Aileron_CONTROL &= ((uint8)(~Aileron_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/Aileron.c ****                 Aileron_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/Aileron.c ****             #endif /* (Aileron_UseControl) */
 339:Generated_Source\PSoC5/Aileron.c ****         }
 340:Generated_Source\PSoC5/Aileron.c ****     #endif /* Aileron_CompareMode1SW */
 341:Generated_Source\PSoC5/Aileron.c **** 
 342:Generated_Source\PSoC5/Aileron.c **** #if (Aileron_CompareMode2SW)
 343:Generated_Source\PSoC5/Aileron.c **** 
 344:Generated_Source\PSoC5/Aileron.c **** 
 345:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_SetCompareMode2
 347:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/Aileron.c ****     *
 349:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 350:Generated_Source\PSoC5/Aileron.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/Aileron.c ****     *
 352:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 353:Generated_Source\PSoC5/Aileron.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/Aileron.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/Aileron.c ****     *
 356:Generated_Source\PSoC5/Aileron.c ****     * Return:
 357:Generated_Source\PSoC5/Aileron.c ****     *  None
 358:Generated_Source\PSoC5/Aileron.c ****     *
 359:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/Aileron.c ****     void Aileron_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/Aileron.c ****     {
 362:Generated_Source\PSoC5/Aileron.c **** 
 363:Generated_Source\PSoC5/Aileron.c ****         #if(0 != Aileron_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/Aileron.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << Aileron_CTRL_CMPMODE2_SHIFT)) 
 365:Generated_Source\PSoC5/Aileron.c ****                                                  Aileron_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/Aileron.c ****         #else
 367:Generated_Source\PSoC5/Aileron.c ****             uint8 comparemodemasked = comparemode & Aileron_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/Aileron.c ****         #endif /* (0 != Aileron_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/Aileron.c **** 
 370:Generated_Source\PSoC5/Aileron.c ****         #if (Aileron_UseControl)
 371:Generated_Source\PSoC5/Aileron.c ****             Aileron_CONTROL &= ((uint8)(~Aileron_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/Aileron.c ****             Aileron_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_UseControl) */
 374:Generated_Source\PSoC5/Aileron.c ****     }
 375:Generated_Source\PSoC5/Aileron.c ****     #endif /*Aileron_CompareMode2SW */
 376:Generated_Source\PSoC5/Aileron.c **** 
 377:Generated_Source\PSoC5/Aileron.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 9


 378:Generated_Source\PSoC5/Aileron.c **** 
 379:Generated_Source\PSoC5/Aileron.c **** 
 380:Generated_Source\PSoC5/Aileron.c **** #if (!Aileron_UsingFixedFunction)
 381:Generated_Source\PSoC5/Aileron.c **** 
 382:Generated_Source\PSoC5/Aileron.c **** 
 383:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_WriteCounter
 385:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/Aileron.c ****     *
 387:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 388:Generated_Source\PSoC5/Aileron.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/Aileron.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/Aileron.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/Aileron.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/Aileron.c ****     *
 393:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 394:Generated_Source\PSoC5/Aileron.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/Aileron.c ****     *
 396:Generated_Source\PSoC5/Aileron.c ****     * Return:
 397:Generated_Source\PSoC5/Aileron.c ****     *  None
 398:Generated_Source\PSoC5/Aileron.c ****     *
 399:Generated_Source\PSoC5/Aileron.c ****     * Side Effects:
 400:Generated_Source\PSoC5/Aileron.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/Aileron.c ****     *
 402:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/Aileron.c ****     void Aileron_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/Aileron.c ****                                        
 405:Generated_Source\PSoC5/Aileron.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/Aileron.c ****         CY_SET_REG16(Aileron_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1880     		strh	r0, [r3]	@ movhi
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 086A0040 		.word	1073768968
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	Aileron_WriteCounter, .-Aileron_WriteCounter
  97              		.section	.text.Aileron_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	Aileron_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	Aileron_ReadCounter, %function
 103              	Aileron_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/Aileron.c ****     }
 408:Generated_Source\PSoC5/Aileron.c **** 
 409:Generated_Source\PSoC5/Aileron.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 10


 410:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_ReadCounter
 412:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/Aileron.c ****     *
 414:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 415:Generated_Source\PSoC5/Aileron.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/Aileron.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/Aileron.c ****     *
 418:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 419:Generated_Source\PSoC5/Aileron.c ****     *  None
 420:Generated_Source\PSoC5/Aileron.c ****     *
 421:Generated_Source\PSoC5/Aileron.c ****     * Return:
 422:Generated_Source\PSoC5/Aileron.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/Aileron.c ****     *
 424:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/Aileron.c ****     uint16 Aileron_ReadCounter(void) 
 426:Generated_Source\PSoC5/Aileron.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/Aileron.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/Aileron.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/Aileron.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/Aileron.c ****           (void)CY_GET_REG8(Aileron_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/Aileron.c **** 
 432:Generated_Source\PSoC5/Aileron.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/Aileron.c ****         return (CY_GET_REG16(Aileron_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1888     		ldrh	r0, [r3]
 434:Generated_Source\PSoC5/Aileron.c ****     }
 116              		.loc 1 434 0
 117 0008 80B2     		uxth	r0, r0
 118 000a 7047     		bx	lr
 119              	.L12:
 120              		.align	2
 121              	.L11:
 122 000c 14650040 		.word	1073767700
 123 0010 A86A0040 		.word	1073769128
 124              		.cfi_endproc
 125              	.LFE5:
 126              		.size	Aileron_ReadCounter, .-Aileron_ReadCounter
 127              		.section	.text.Aileron_WritePeriod,"ax",%progbits
 128              		.align	2
 129              		.global	Aileron_WritePeriod
 130              		.thumb
 131              		.thumb_func
 132              		.type	Aileron_WritePeriod, %function
 133              	Aileron_WritePeriod:
 134              	.LFB7:
 435:Generated_Source\PSoC5/Aileron.c **** 
 436:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_UseStatus)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 11


 437:Generated_Source\PSoC5/Aileron.c **** 
 438:Generated_Source\PSoC5/Aileron.c **** 
 439:Generated_Source\PSoC5/Aileron.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/Aileron.c ****         * Function Name: Aileron_ClearFIFO
 441:Generated_Source\PSoC5/Aileron.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/Aileron.c ****         *
 443:Generated_Source\PSoC5/Aileron.c ****         * Summary:
 444:Generated_Source\PSoC5/Aileron.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/Aileron.c ****         *
 446:Generated_Source\PSoC5/Aileron.c ****         * Parameters:
 447:Generated_Source\PSoC5/Aileron.c ****         *  None
 448:Generated_Source\PSoC5/Aileron.c ****         *
 449:Generated_Source\PSoC5/Aileron.c ****         * Return:
 450:Generated_Source\PSoC5/Aileron.c ****         *  None
 451:Generated_Source\PSoC5/Aileron.c ****         *
 452:Generated_Source\PSoC5/Aileron.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/Aileron.c ****         void Aileron_ClearFIFO(void) 
 454:Generated_Source\PSoC5/Aileron.c ****         {
 455:Generated_Source\PSoC5/Aileron.c ****             while(0u != (Aileron_ReadStatusRegister() & Aileron_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/Aileron.c ****             {
 457:Generated_Source\PSoC5/Aileron.c ****                 (void)Aileron_ReadCapture();
 458:Generated_Source\PSoC5/Aileron.c ****             }
 459:Generated_Source\PSoC5/Aileron.c ****         }
 460:Generated_Source\PSoC5/Aileron.c **** 
 461:Generated_Source\PSoC5/Aileron.c ****     #endif /* Aileron_UseStatus */
 462:Generated_Source\PSoC5/Aileron.c **** 
 463:Generated_Source\PSoC5/Aileron.c **** #endif /* !Aileron_UsingFixedFunction */
 464:Generated_Source\PSoC5/Aileron.c **** 
 465:Generated_Source\PSoC5/Aileron.c **** 
 466:Generated_Source\PSoC5/Aileron.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Aileron.c **** * Function Name: Aileron_WritePeriod
 468:Generated_Source\PSoC5/Aileron.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Aileron.c **** *
 470:Generated_Source\PSoC5/Aileron.c **** * Summary:
 471:Generated_Source\PSoC5/Aileron.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/Aileron.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/Aileron.c **** *
 474:Generated_Source\PSoC5/Aileron.c **** * Parameters:
 475:Generated_Source\PSoC5/Aileron.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/Aileron.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/Aileron.c **** *
 478:Generated_Source\PSoC5/Aileron.c **** * Return:
 479:Generated_Source\PSoC5/Aileron.c **** *  None
 480:Generated_Source\PSoC5/Aileron.c **** *
 481:Generated_Source\PSoC5/Aileron.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/Aileron.c **** void Aileron_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/Aileron.c **** {
 135              		.loc 1 483 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL1:
 484:Generated_Source\PSoC5/Aileron.c ****     #if(Aileron_UsingFixedFunction)
 485:Generated_Source\PSoC5/Aileron.c ****         CY_SET_REG16(Aileron_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/Aileron.c ****     #else
 487:Generated_Source\PSoC5/Aileron.c ****         CY_SET_REG16(Aileron_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 12


 141              		.loc 1 487 0
 142 0000 014B     		ldr	r3, .L14
 143 0002 1880     		strh	r0, [r3]	@ movhi
 144 0004 7047     		bx	lr
 145              	.L15:
 146 0006 00BF     		.align	2
 147              	.L14:
 148 0008 886A0040 		.word	1073769096
 149              		.cfi_endproc
 150              	.LFE7:
 151              		.size	Aileron_WritePeriod, .-Aileron_WritePeriod
 152              		.section	.text.Aileron_WriteCompare1,"ax",%progbits
 153              		.align	2
 154              		.global	Aileron_WriteCompare1
 155              		.thumb
 156              		.thumb_func
 157              		.type	Aileron_WriteCompare1, %function
 158              	Aileron_WriteCompare1:
 159              	.LFB8:
 488:Generated_Source\PSoC5/Aileron.c ****     #endif /* (Aileron_UsingFixedFunction) */
 489:Generated_Source\PSoC5/Aileron.c **** }
 490:Generated_Source\PSoC5/Aileron.c **** 
 491:Generated_Source\PSoC5/Aileron.c **** #if (Aileron_UseOneCompareMode)
 492:Generated_Source\PSoC5/Aileron.c **** 
 493:Generated_Source\PSoC5/Aileron.c **** 
 494:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_WriteCompare
 496:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/Aileron.c ****     *
 498:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 499:Generated_Source\PSoC5/Aileron.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/Aileron.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/Aileron.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/Aileron.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/Aileron.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/Aileron.c ****     *
 505:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 506:Generated_Source\PSoC5/Aileron.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/Aileron.c ****     *
 508:Generated_Source\PSoC5/Aileron.c ****     * Return:
 509:Generated_Source\PSoC5/Aileron.c ****     *  None
 510:Generated_Source\PSoC5/Aileron.c ****     *
 511:Generated_Source\PSoC5/Aileron.c ****     * Side Effects:
 512:Generated_Source\PSoC5/Aileron.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/Aileron.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/Aileron.c ****     *
 515:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/Aileron.c ****     void Aileron_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/Aileron.c ****                                        
 518:Generated_Source\PSoC5/Aileron.c ****     {
 519:Generated_Source\PSoC5/Aileron.c ****         #if(Aileron_UsingFixedFunction)
 520:Generated_Source\PSoC5/Aileron.c ****             CY_SET_REG16(Aileron_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/Aileron.c ****         #else
 522:Generated_Source\PSoC5/Aileron.c ****             CY_SET_REG16(Aileron_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_UsingFixedFunction) */
 524:Generated_Source\PSoC5/Aileron.c **** 
 525:Generated_Source\PSoC5/Aileron.c ****         #if (Aileron_PWMMode == Aileron__B_PWM__DITHER)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 13


 526:Generated_Source\PSoC5/Aileron.c ****             #if(Aileron_UsingFixedFunction)
 527:Generated_Source\PSoC5/Aileron.c ****                 CY_SET_REG16(Aileron_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/Aileron.c ****             #else
 529:Generated_Source\PSoC5/Aileron.c ****                 CY_SET_REG16(Aileron_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/Aileron.c ****             #endif /* (Aileron_UsingFixedFunction) */
 531:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_PWMMode == Aileron__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/Aileron.c ****     }
 533:Generated_Source\PSoC5/Aileron.c **** 
 534:Generated_Source\PSoC5/Aileron.c **** 
 535:Generated_Source\PSoC5/Aileron.c **** #else
 536:Generated_Source\PSoC5/Aileron.c **** 
 537:Generated_Source\PSoC5/Aileron.c **** 
 538:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_WriteCompare1
 540:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/Aileron.c ****     *
 542:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 543:Generated_Source\PSoC5/Aileron.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/Aileron.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/Aileron.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/Aileron.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/Aileron.c ****     *
 548:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 549:Generated_Source\PSoC5/Aileron.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/Aileron.c ****     *
 551:Generated_Source\PSoC5/Aileron.c ****     * Return:
 552:Generated_Source\PSoC5/Aileron.c ****     *  None
 553:Generated_Source\PSoC5/Aileron.c ****     *
 554:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/Aileron.c ****     void Aileron_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/Aileron.c ****                                         
 557:Generated_Source\PSoC5/Aileron.c ****     {
 160              		.loc 1 557 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              	.LVL2:
 558:Generated_Source\PSoC5/Aileron.c ****         #if(Aileron_UsingFixedFunction)
 559:Generated_Source\PSoC5/Aileron.c ****             CY_SET_REG16(Aileron_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/Aileron.c ****         #else
 561:Generated_Source\PSoC5/Aileron.c ****             CY_SET_REG16(Aileron_COMPARE1_LSB_PTR, compare);
 166              		.loc 1 561 0
 167 0000 014B     		ldr	r3, .L17
 168 0002 1880     		strh	r0, [r3]	@ movhi
 169 0004 7047     		bx	lr
 170              	.L18:
 171 0006 00BF     		.align	2
 172              	.L17:
 173 0008 486A0040 		.word	1073769032
 174              		.cfi_endproc
 175              	.LFE8:
 176              		.size	Aileron_WriteCompare1, .-Aileron_WriteCompare1
 177              		.section	.text.Aileron_WriteCompare2,"ax",%progbits
 178              		.align	2
 179              		.global	Aileron_WriteCompare2
 180              		.thumb
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 14


 181              		.thumb_func
 182              		.type	Aileron_WriteCompare2, %function
 183              	Aileron_WriteCompare2:
 184              	.LFB9:
 562:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_UsingFixedFunction) */
 563:Generated_Source\PSoC5/Aileron.c ****     }
 564:Generated_Source\PSoC5/Aileron.c **** 
 565:Generated_Source\PSoC5/Aileron.c **** 
 566:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_WriteCompare2
 568:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/Aileron.c ****     *
 570:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 571:Generated_Source\PSoC5/Aileron.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/Aileron.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/Aileron.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/Aileron.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/Aileron.c ****     *  mode.
 576:Generated_Source\PSoC5/Aileron.c ****     *
 577:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 578:Generated_Source\PSoC5/Aileron.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/Aileron.c ****     *
 580:Generated_Source\PSoC5/Aileron.c ****     * Return:
 581:Generated_Source\PSoC5/Aileron.c ****     *  None
 582:Generated_Source\PSoC5/Aileron.c ****     *
 583:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/Aileron.c ****     void Aileron_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/Aileron.c ****                                         
 586:Generated_Source\PSoC5/Aileron.c ****     {
 185              		.loc 1 586 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL3:
 587:Generated_Source\PSoC5/Aileron.c ****         #if(Aileron_UsingFixedFunction)
 588:Generated_Source\PSoC5/Aileron.c ****             CY_SET_REG16(Aileron_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/Aileron.c ****         #else
 590:Generated_Source\PSoC5/Aileron.c ****             CY_SET_REG16(Aileron_COMPARE2_LSB_PTR, compare);
 191              		.loc 1 590 0
 192 0000 014B     		ldr	r3, .L20
 193 0002 1880     		strh	r0, [r3]	@ movhi
 194 0004 7047     		bx	lr
 195              	.L21:
 196 0006 00BF     		.align	2
 197              	.L20:
 198 0008 686A0040 		.word	1073769064
 199              		.cfi_endproc
 200              	.LFE9:
 201              		.size	Aileron_WriteCompare2, .-Aileron_WriteCompare2
 202              		.section	.text.Aileron_SetInterruptMode,"ax",%progbits
 203              		.align	2
 204              		.global	Aileron_SetInterruptMode
 205              		.thumb
 206              		.thumb_func
 207              		.type	Aileron_SetInterruptMode, %function
 208              	Aileron_SetInterruptMode:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 15


 209              	.LFB10:
 591:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_UsingFixedFunction) */
 592:Generated_Source\PSoC5/Aileron.c ****     }
 593:Generated_Source\PSoC5/Aileron.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/Aileron.c **** 
 595:Generated_Source\PSoC5/Aileron.c **** #if (Aileron_DeadBandUsed)
 596:Generated_Source\PSoC5/Aileron.c **** 
 597:Generated_Source\PSoC5/Aileron.c **** 
 598:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_WriteDeadTime
 600:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/Aileron.c ****     *
 602:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 603:Generated_Source\PSoC5/Aileron.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/Aileron.c ****     *
 605:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 606:Generated_Source\PSoC5/Aileron.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/Aileron.c ****     *
 608:Generated_Source\PSoC5/Aileron.c ****     * Return:
 609:Generated_Source\PSoC5/Aileron.c ****     *  None
 610:Generated_Source\PSoC5/Aileron.c ****     *
 611:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/Aileron.c ****     void Aileron_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/Aileron.c ****     {
 614:Generated_Source\PSoC5/Aileron.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/Aileron.c ****         #if(!Aileron_DeadBand2_4)
 616:Generated_Source\PSoC5/Aileron.c ****             CY_SET_REG8(Aileron_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/Aileron.c ****         #else
 618:Generated_Source\PSoC5/Aileron.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/Aileron.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/Aileron.c ****             Aileron_DEADBAND_COUNT &= ((uint8)(~Aileron_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/Aileron.c **** 
 622:Generated_Source\PSoC5/Aileron.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/Aileron.c ****             #if(Aileron_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/Aileron.c ****                 Aileron_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << Aileron_DEADBAND_COUNT_SHIFT)
 625:Generated_Source\PSoC5/Aileron.c ****                                                     Aileron_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/Aileron.c ****             #else
 627:Generated_Source\PSoC5/Aileron.c ****                 Aileron_DEADBAND_COUNT |= deadtime & Aileron_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/Aileron.c ****             #endif /* (Aileron_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/Aileron.c **** 
 630:Generated_Source\PSoC5/Aileron.c ****         #endif /* (!Aileron_DeadBand2_4) */
 631:Generated_Source\PSoC5/Aileron.c ****     }
 632:Generated_Source\PSoC5/Aileron.c **** 
 633:Generated_Source\PSoC5/Aileron.c **** 
 634:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_ReadDeadTime
 636:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/Aileron.c ****     *
 638:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 639:Generated_Source\PSoC5/Aileron.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/Aileron.c ****     *
 641:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 642:Generated_Source\PSoC5/Aileron.c ****     *  None
 643:Generated_Source\PSoC5/Aileron.c ****     *
 644:Generated_Source\PSoC5/Aileron.c ****     * Return:
 645:Generated_Source\PSoC5/Aileron.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/Aileron.c ****     *
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 16


 647:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/Aileron.c ****     uint8 Aileron_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/Aileron.c ****     {
 650:Generated_Source\PSoC5/Aileron.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/Aileron.c ****         #if(!Aileron_DeadBand2_4)
 652:Generated_Source\PSoC5/Aileron.c ****             return (CY_GET_REG8(Aileron_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/Aileron.c ****         #else
 654:Generated_Source\PSoC5/Aileron.c **** 
 655:Generated_Source\PSoC5/Aileron.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/Aileron.c ****             #if(Aileron_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/Aileron.c ****                 return ((uint8)(((uint8)(Aileron_DEADBAND_COUNT & Aileron_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/Aileron.c ****                                                                            Aileron_DEADBAND_COUNT_S
 659:Generated_Source\PSoC5/Aileron.c ****             #else
 660:Generated_Source\PSoC5/Aileron.c ****                 return (Aileron_DEADBAND_COUNT & Aileron_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/Aileron.c ****             #endif /* (Aileron_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/Aileron.c ****         #endif /* (!Aileron_DeadBand2_4) */
 663:Generated_Source\PSoC5/Aileron.c ****     }
 664:Generated_Source\PSoC5/Aileron.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/Aileron.c **** 
 666:Generated_Source\PSoC5/Aileron.c **** #if (Aileron_UseStatus || Aileron_UsingFixedFunction)
 667:Generated_Source\PSoC5/Aileron.c **** 
 668:Generated_Source\PSoC5/Aileron.c **** 
 669:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_SetInterruptMode
 671:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/Aileron.c ****     *
 673:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 674:Generated_Source\PSoC5/Aileron.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/Aileron.c ****     *  source status register.
 676:Generated_Source\PSoC5/Aileron.c ****     *
 677:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 678:Generated_Source\PSoC5/Aileron.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/Aileron.c ****     *
 680:Generated_Source\PSoC5/Aileron.c ****     * Return:
 681:Generated_Source\PSoC5/Aileron.c ****     *  None
 682:Generated_Source\PSoC5/Aileron.c ****     *
 683:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/Aileron.c ****     void Aileron_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/Aileron.c ****     {
 210              		.loc 1 685 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215              	.LVL4:
 686:Generated_Source\PSoC5/Aileron.c ****         CY_SET_REG8(Aileron_STATUS_MASK_PTR, interruptMode);
 216              		.loc 1 686 0
 217 0000 014B     		ldr	r3, .L23
 218 0002 1870     		strb	r0, [r3]
 219 0004 7047     		bx	lr
 220              	.L24:
 221 0006 00BF     		.align	2
 222              	.L23:
 223 0008 86650040 		.word	1073767814
 224              		.cfi_endproc
 225              	.LFE10:
 226              		.size	Aileron_SetInterruptMode, .-Aileron_SetInterruptMode
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 17


 227              		.section	.text.Aileron_ReadStatusRegister,"ax",%progbits
 228              		.align	2
 229              		.global	Aileron_ReadStatusRegister
 230              		.thumb
 231              		.thumb_func
 232              		.type	Aileron_ReadStatusRegister, %function
 233              	Aileron_ReadStatusRegister:
 234              	.LFB11:
 687:Generated_Source\PSoC5/Aileron.c ****     }
 688:Generated_Source\PSoC5/Aileron.c **** 
 689:Generated_Source\PSoC5/Aileron.c **** 
 690:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_ReadStatusRegister
 692:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/Aileron.c ****     *
 694:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 695:Generated_Source\PSoC5/Aileron.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/Aileron.c ****     *
 697:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 698:Generated_Source\PSoC5/Aileron.c ****     *  None
 699:Generated_Source\PSoC5/Aileron.c ****     *
 700:Generated_Source\PSoC5/Aileron.c ****     * Return:
 701:Generated_Source\PSoC5/Aileron.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/Aileron.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/Aileron.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/Aileron.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/Aileron.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/Aileron.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/Aileron.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/Aileron.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/Aileron.c ****     *
 710:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/Aileron.c ****     uint8 Aileron_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/Aileron.c ****     {
 235              		.loc 1 712 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 713:Generated_Source\PSoC5/Aileron.c ****         return (CY_GET_REG8(Aileron_STATUS_PTR));
 240              		.loc 1 713 0
 241 0000 014B     		ldr	r3, .L26
 242 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/Aileron.c ****     }
 243              		.loc 1 714 0
 244 0004 7047     		bx	lr
 245              	.L27:
 246 0006 00BF     		.align	2
 247              	.L26:
 248 0008 66650040 		.word	1073767782
 249              		.cfi_endproc
 250              	.LFE11:
 251              		.size	Aileron_ReadStatusRegister, .-Aileron_ReadStatusRegister
 252              		.section	.text.Aileron_ReadControlRegister,"ax",%progbits
 253              		.align	2
 254              		.global	Aileron_ReadControlRegister
 255              		.thumb
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 18


 256              		.thumb_func
 257              		.type	Aileron_ReadControlRegister, %function
 258              	Aileron_ReadControlRegister:
 259              	.LFB12:
 715:Generated_Source\PSoC5/Aileron.c **** 
 716:Generated_Source\PSoC5/Aileron.c **** #endif /* (Aileron_UseStatus || Aileron_UsingFixedFunction) */
 717:Generated_Source\PSoC5/Aileron.c **** 
 718:Generated_Source\PSoC5/Aileron.c **** 
 719:Generated_Source\PSoC5/Aileron.c **** #if (Aileron_UseControl)
 720:Generated_Source\PSoC5/Aileron.c **** 
 721:Generated_Source\PSoC5/Aileron.c **** 
 722:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_ReadControlRegister
 724:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/Aileron.c ****     *
 726:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 727:Generated_Source\PSoC5/Aileron.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/Aileron.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/Aileron.c ****     *
 730:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 731:Generated_Source\PSoC5/Aileron.c ****     *  None
 732:Generated_Source\PSoC5/Aileron.c ****     *
 733:Generated_Source\PSoC5/Aileron.c ****     * Return:
 734:Generated_Source\PSoC5/Aileron.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/Aileron.c ****     *
 736:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/Aileron.c ****     uint8 Aileron_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/Aileron.c ****     {
 260              		.loc 1 738 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 739:Generated_Source\PSoC5/Aileron.c ****         uint8 result;
 740:Generated_Source\PSoC5/Aileron.c **** 
 741:Generated_Source\PSoC5/Aileron.c ****         result = CY_GET_REG8(Aileron_CONTROL_PTR);
 265              		.loc 1 741 0
 266 0000 014B     		ldr	r3, .L29
 267 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 268              	.LVL5:
 742:Generated_Source\PSoC5/Aileron.c ****         return (result);
 743:Generated_Source\PSoC5/Aileron.c ****     }
 269              		.loc 1 743 0
 270 0004 7047     		bx	lr
 271              	.L30:
 272 0006 00BF     		.align	2
 273              	.L29:
 274 0008 78650040 		.word	1073767800
 275              		.cfi_endproc
 276              	.LFE12:
 277              		.size	Aileron_ReadControlRegister, .-Aileron_ReadControlRegister
 278              		.section	.text.Aileron_WriteControlRegister,"ax",%progbits
 279              		.align	2
 280              		.global	Aileron_WriteControlRegister
 281              		.thumb
 282              		.thumb_func
 283              		.type	Aileron_WriteControlRegister, %function
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 19


 284              	Aileron_WriteControlRegister:
 285              	.LFB13:
 744:Generated_Source\PSoC5/Aileron.c **** 
 745:Generated_Source\PSoC5/Aileron.c **** 
 746:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_WriteControlRegister
 748:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/Aileron.c ****     *
 750:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 751:Generated_Source\PSoC5/Aileron.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/Aileron.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/Aileron.c ****     *
 754:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 755:Generated_Source\PSoC5/Aileron.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/Aileron.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/Aileron.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/Aileron.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/Aileron.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/Aileron.c ****     *
 761:Generated_Source\PSoC5/Aileron.c ****     * Return:
 762:Generated_Source\PSoC5/Aileron.c ****     *  None
 763:Generated_Source\PSoC5/Aileron.c ****     *
 764:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/Aileron.c ****     void Aileron_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/Aileron.c ****     {
 286              		.loc 1 766 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 291              	.LVL6:
 767:Generated_Source\PSoC5/Aileron.c ****         CY_SET_REG8(Aileron_CONTROL_PTR, control);
 292              		.loc 1 767 0
 293 0000 014B     		ldr	r3, .L32
 294 0002 1870     		strb	r0, [r3]
 295 0004 7047     		bx	lr
 296              	.L33:
 297 0006 00BF     		.align	2
 298              	.L32:
 299 0008 78650040 		.word	1073767800
 300              		.cfi_endproc
 301              	.LFE13:
 302              		.size	Aileron_WriteControlRegister, .-Aileron_WriteControlRegister
 303              		.section	.text.Aileron_ReadCapture,"ax",%progbits
 304              		.align	2
 305              		.global	Aileron_ReadCapture
 306              		.thumb
 307              		.thumb_func
 308              		.type	Aileron_ReadCapture, %function
 309              	Aileron_ReadCapture:
 310              	.LFB14:
 768:Generated_Source\PSoC5/Aileron.c ****     }
 769:Generated_Source\PSoC5/Aileron.c **** 
 770:Generated_Source\PSoC5/Aileron.c **** #endif /* (Aileron_UseControl) */
 771:Generated_Source\PSoC5/Aileron.c **** 
 772:Generated_Source\PSoC5/Aileron.c **** 
 773:Generated_Source\PSoC5/Aileron.c **** #if (!Aileron_UsingFixedFunction)
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 20


 774:Generated_Source\PSoC5/Aileron.c **** 
 775:Generated_Source\PSoC5/Aileron.c **** 
 776:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_ReadCapture
 778:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/Aileron.c ****     *
 780:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 781:Generated_Source\PSoC5/Aileron.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/Aileron.c ****     *
 783:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 784:Generated_Source\PSoC5/Aileron.c ****     *  None
 785:Generated_Source\PSoC5/Aileron.c ****     *
 786:Generated_Source\PSoC5/Aileron.c ****     * Return:
 787:Generated_Source\PSoC5/Aileron.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/Aileron.c ****     *
 789:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/Aileron.c ****     uint16 Aileron_ReadCapture(void) 
 791:Generated_Source\PSoC5/Aileron.c ****     {
 311              		.loc 1 791 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 792:Generated_Source\PSoC5/Aileron.c ****         return (CY_GET_REG16(Aileron_CAPTURE_LSB_PTR));
 316              		.loc 1 792 0
 317 0000 014B     		ldr	r3, .L35
 318 0002 1888     		ldrh	r0, [r3]
 793:Generated_Source\PSoC5/Aileron.c ****     }
 319              		.loc 1 793 0
 320 0004 80B2     		uxth	r0, r0
 321 0006 7047     		bx	lr
 322              	.L36:
 323              		.align	2
 324              	.L35:
 325 0008 A86A0040 		.word	1073769128
 326              		.cfi_endproc
 327              	.LFE14:
 328              		.size	Aileron_ReadCapture, .-Aileron_ReadCapture
 329              		.section	.text.Aileron_ClearFIFO,"ax",%progbits
 330              		.align	2
 331              		.global	Aileron_ClearFIFO
 332              		.thumb
 333              		.thumb_func
 334              		.type	Aileron_ClearFIFO, %function
 335              	Aileron_ClearFIFO:
 336              	.LFB6:
 454:Generated_Source\PSoC5/Aileron.c ****             while(0u != (Aileron_ReadStatusRegister() & Aileron_STATUS_FIFONEMPTY))
 337              		.loc 1 454 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341 0000 08B5     		push	{r3, lr}
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 3, -8
 344              		.cfi_offset 14, -4
 455:Generated_Source\PSoC5/Aileron.c ****             {
 345              		.loc 1 455 0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 21


 346 0002 01E0     		b	.L38
 347              	.L39:
 457:Generated_Source\PSoC5/Aileron.c ****             }
 348              		.loc 1 457 0
 349 0004 FFF7FEFF 		bl	Aileron_ReadCapture
 350              	.LVL7:
 351              	.L38:
 455:Generated_Source\PSoC5/Aileron.c ****             {
 352              		.loc 1 455 0
 353 0008 FFF7FEFF 		bl	Aileron_ReadStatusRegister
 354              	.LVL8:
 355 000c 10F0100F 		tst	r0, #16
 356 0010 F8D1     		bne	.L39
 459:Generated_Source\PSoC5/Aileron.c **** 
 357              		.loc 1 459 0
 358 0012 08BD     		pop	{r3, pc}
 359              		.cfi_endproc
 360              	.LFE6:
 361              		.size	Aileron_ClearFIFO, .-Aileron_ClearFIFO
 362              		.section	.text.Aileron_Init,"ax",%progbits
 363              		.align	2
 364              		.global	Aileron_Init
 365              		.thumb
 366              		.thumb_func
 367              		.type	Aileron_Init, %function
 368              	Aileron_Init:
 369              	.LFB1:
  85:Generated_Source\PSoC5/Aileron.c ****     #if (Aileron_UsingFixedFunction || Aileron_UseControl)
 370              		.loc 1 85 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 08B5     		push	{r3, lr}
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 3, -8
 377              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/Aileron.c ****                 ((uint8)(~Aileron_CTRL_CMPMODE1_MASK));
 378              		.loc 1 117 0
 379 0002 184A     		ldr	r2, .L43
 380 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 381 0006 03F0C003 		and	r3, r3, #192
 382              	.LVL9:
 119:Generated_Source\PSoC5/Aileron.c ****                                    Aileron_DEFAULT_COMPARE1_MODE;
 383              		.loc 1 119 0
 384 000a 43F00903 		orr	r3, r3, #9
 385              	.LVL10:
 386 000e 1370     		strb	r3, [r2]
 129:Generated_Source\PSoC5/Aileron.c ****             Aileron_AUX_CONTROLDP1 |= (Aileron_AUX_CTRL_FIFO0_CLR);
 387              		.loc 1 129 0
 388 0010 1C32     		adds	r2, r2, #28
 389 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 390 0014 43F00103 		orr	r3, r3, #1
 391 0018 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_Resolution == 8) */
 392              		.loc 1 130 0
 393 001a 0132     		adds	r2, r2, #1
 394 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 22


 395 001e 43F00103 		orr	r3, r3, #1
 396 0022 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/Aileron.c ****     #endif /* (!Aileron_UsingFixedFunction) */
 397              		.loc 1 133 0
 398 0024 44F62060 		movw	r0, #20000
 399 0028 FFF7FEFF 		bl	Aileron_WriteCounter
 400              	.LVL11:
 136:Generated_Source\PSoC5/Aileron.c **** 
 401              		.loc 1 136 0
 402 002c 44F62060 		movw	r0, #20000
 403 0030 FFF7FEFF 		bl	Aileron_WritePeriod
 404              	.LVL12:
 141:Generated_Source\PSoC5/Aileron.c ****             Aileron_WriteCompare2(Aileron_INIT_COMPARE_VALUE2);
 405              		.loc 1 141 0
 406 0034 40F2DC50 		movw	r0, #1500
 407 0038 FFF7FEFF 		bl	Aileron_WriteCompare1
 408              	.LVL13:
 142:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_UseOneCompareMode) */
 409              		.loc 1 142 0
 410 003c 40F2E150 		movw	r0, #1505
 411 0040 FFF7FEFF 		bl	Aileron_WriteCompare2
 412              	.LVL14:
 154:Generated_Source\PSoC5/Aileron.c ****     #endif /* (Aileron_UseStatus || Aileron_UsingFixedFunction) */
 413              		.loc 1 154 0
 414 0044 0020     		movs	r0, #0
 415 0046 FFF7FEFF 		bl	Aileron_SetInterruptMode
 416              	.LVL15:
 167:Generated_Source\PSoC5/Aileron.c ****             /* Use the interrupt output of the status register for IRQ output */
 417              		.loc 1 167 0
 418 004a FFF7FEFF 		bl	CyEnterCriticalSection
 419              	.LVL16:
 169:Generated_Source\PSoC5/Aileron.c **** 
 420              		.loc 1 169 0
 421 004e 064A     		ldr	r2, .L43+4
 422 0050 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 423 0052 43F01003 		orr	r3, r3, #16
 424 0056 1370     		strb	r3, [r2]
 172:Generated_Source\PSoC5/Aileron.c **** 
 425              		.loc 1 172 0
 426 0058 FFF7FEFF 		bl	CyExitCriticalSection
 427              	.LVL17:
 176:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_UseStatus) */
 428              		.loc 1 176 0
 429 005c FFF7FEFF 		bl	Aileron_ClearFIFO
 430              	.LVL18:
 431 0060 08BD     		pop	{r3, pc}
 432              	.L44:
 433 0062 00BF     		.align	2
 434              	.L43:
 435 0064 78650040 		.word	1073767800
 436 0068 96650040 		.word	1073767830
 437              		.cfi_endproc
 438              	.LFE1:
 439              		.size	Aileron_Init, .-Aileron_Init
 440              		.section	.text.Aileron_Start,"ax",%progbits
 441              		.align	2
 442              		.global	Aileron_Start
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 23


 443              		.thumb
 444              		.thumb_func
 445              		.type	Aileron_Start, %function
 446              	Aileron_Start:
 447              	.LFB0:
  56:Generated_Source\PSoC5/Aileron.c ****     /* If not Initialized then initialize all required hardware and software */
 448              		.loc 1 56 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452 0000 08B5     		push	{r3, lr}
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 3, -8
 455              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/Aileron.c ****     {
 456              		.loc 1 58 0
 457 0002 054B     		ldr	r3, .L48
 458 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 459 0006 23B9     		cbnz	r3, .L46
  60:Generated_Source\PSoC5/Aileron.c ****         Aileron_initVar = 1u;
 460              		.loc 1 60 0
 461 0008 FFF7FEFF 		bl	Aileron_Init
 462              	.LVL19:
  61:Generated_Source\PSoC5/Aileron.c ****     }
 463              		.loc 1 61 0
 464 000c 0122     		movs	r2, #1
 465 000e 024B     		ldr	r3, .L48
 466 0010 1A70     		strb	r2, [r3]
 467              	.L46:
  63:Generated_Source\PSoC5/Aileron.c **** 
 468              		.loc 1 63 0
 469 0012 FFF7FEFF 		bl	Aileron_Enable
 470              	.LVL20:
 471 0016 08BD     		pop	{r3, pc}
 472              	.L49:
 473              		.align	2
 474              	.L48:
 475 0018 00000000 		.word	.LANCHOR0
 476              		.cfi_endproc
 477              	.LFE0:
 478              		.size	Aileron_Start, .-Aileron_Start
 479              		.section	.text.Aileron_ReadCompare1,"ax",%progbits
 480              		.align	2
 481              		.global	Aileron_ReadCompare1
 482              		.thumb
 483              		.thumb_func
 484              		.type	Aileron_ReadCompare1, %function
 485              	Aileron_ReadCompare1:
 486              	.LFB15:
 794:Generated_Source\PSoC5/Aileron.c **** 
 795:Generated_Source\PSoC5/Aileron.c **** #endif /* (!Aileron_UsingFixedFunction) */
 796:Generated_Source\PSoC5/Aileron.c **** 
 797:Generated_Source\PSoC5/Aileron.c **** 
 798:Generated_Source\PSoC5/Aileron.c **** #if (Aileron_UseOneCompareMode)
 799:Generated_Source\PSoC5/Aileron.c **** 
 800:Generated_Source\PSoC5/Aileron.c **** 
 801:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 24


 802:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_ReadCompare
 803:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/Aileron.c ****     *
 805:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 806:Generated_Source\PSoC5/Aileron.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/Aileron.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/Aileron.c ****     *
 809:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 810:Generated_Source\PSoC5/Aileron.c ****     *  None
 811:Generated_Source\PSoC5/Aileron.c ****     *
 812:Generated_Source\PSoC5/Aileron.c ****     * Return:
 813:Generated_Source\PSoC5/Aileron.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/Aileron.c ****     *
 815:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/Aileron.c ****     uint16 Aileron_ReadCompare(void) 
 817:Generated_Source\PSoC5/Aileron.c ****     {
 818:Generated_Source\PSoC5/Aileron.c ****         #if(Aileron_UsingFixedFunction)
 819:Generated_Source\PSoC5/Aileron.c ****             return ((uint16)CY_GET_REG16(Aileron_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/Aileron.c ****         #else
 821:Generated_Source\PSoC5/Aileron.c ****             return (CY_GET_REG16(Aileron_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/Aileron.c ****         #endif /* (Aileron_UsingFixedFunction) */
 823:Generated_Source\PSoC5/Aileron.c ****     }
 824:Generated_Source\PSoC5/Aileron.c **** 
 825:Generated_Source\PSoC5/Aileron.c **** #else
 826:Generated_Source\PSoC5/Aileron.c **** 
 827:Generated_Source\PSoC5/Aileron.c **** 
 828:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_ReadCompare1
 830:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/Aileron.c ****     *
 832:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 833:Generated_Source\PSoC5/Aileron.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/Aileron.c ****     *
 835:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 836:Generated_Source\PSoC5/Aileron.c ****     *  None
 837:Generated_Source\PSoC5/Aileron.c ****     *
 838:Generated_Source\PSoC5/Aileron.c ****     * Return:
 839:Generated_Source\PSoC5/Aileron.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/Aileron.c ****     *
 841:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/Aileron.c ****     uint16 Aileron_ReadCompare1(void) 
 843:Generated_Source\PSoC5/Aileron.c ****     {
 487              		.loc 1 843 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 844:Generated_Source\PSoC5/Aileron.c ****         return (CY_GET_REG16(Aileron_COMPARE1_LSB_PTR));
 492              		.loc 1 844 0
 493 0000 014B     		ldr	r3, .L51
 494 0002 1888     		ldrh	r0, [r3]
 845:Generated_Source\PSoC5/Aileron.c ****     }
 495              		.loc 1 845 0
 496 0004 80B2     		uxth	r0, r0
 497 0006 7047     		bx	lr
 498              	.L52:
 499              		.align	2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 25


 500              	.L51:
 501 0008 486A0040 		.word	1073769032
 502              		.cfi_endproc
 503              	.LFE15:
 504              		.size	Aileron_ReadCompare1, .-Aileron_ReadCompare1
 505              		.section	.text.Aileron_ReadCompare2,"ax",%progbits
 506              		.align	2
 507              		.global	Aileron_ReadCompare2
 508              		.thumb
 509              		.thumb_func
 510              		.type	Aileron_ReadCompare2, %function
 511              	Aileron_ReadCompare2:
 512              	.LFB16:
 846:Generated_Source\PSoC5/Aileron.c **** 
 847:Generated_Source\PSoC5/Aileron.c **** 
 848:Generated_Source\PSoC5/Aileron.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/Aileron.c ****     * Function Name: Aileron_ReadCompare2
 850:Generated_Source\PSoC5/Aileron.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/Aileron.c ****     *
 852:Generated_Source\PSoC5/Aileron.c ****     * Summary:
 853:Generated_Source\PSoC5/Aileron.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/Aileron.c ****     *
 855:Generated_Source\PSoC5/Aileron.c ****     * Parameters:
 856:Generated_Source\PSoC5/Aileron.c ****     *  None
 857:Generated_Source\PSoC5/Aileron.c ****     *
 858:Generated_Source\PSoC5/Aileron.c ****     * Return:
 859:Generated_Source\PSoC5/Aileron.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/Aileron.c ****     *
 861:Generated_Source\PSoC5/Aileron.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/Aileron.c ****     uint16 Aileron_ReadCompare2(void) 
 863:Generated_Source\PSoC5/Aileron.c ****     {
 513              		.loc 1 863 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 864:Generated_Source\PSoC5/Aileron.c ****         return (CY_GET_REG16(Aileron_COMPARE2_LSB_PTR));
 518              		.loc 1 864 0
 519 0000 014B     		ldr	r3, .L54
 520 0002 1888     		ldrh	r0, [r3]
 865:Generated_Source\PSoC5/Aileron.c ****     }
 521              		.loc 1 865 0
 522 0004 80B2     		uxth	r0, r0
 523 0006 7047     		bx	lr
 524              	.L55:
 525              		.align	2
 526              	.L54:
 527 0008 686A0040 		.word	1073769064
 528              		.cfi_endproc
 529              	.LFE16:
 530              		.size	Aileron_ReadCompare2, .-Aileron_ReadCompare2
 531              		.section	.text.Aileron_ReadPeriod,"ax",%progbits
 532              		.align	2
 533              		.global	Aileron_ReadPeriod
 534              		.thumb
 535              		.thumb_func
 536              		.type	Aileron_ReadPeriod, %function
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 26


 537              	Aileron_ReadPeriod:
 538              	.LFB17:
 866:Generated_Source\PSoC5/Aileron.c **** 
 867:Generated_Source\PSoC5/Aileron.c **** #endif /* (Aileron_UseOneCompareMode) */
 868:Generated_Source\PSoC5/Aileron.c **** 
 869:Generated_Source\PSoC5/Aileron.c **** 
 870:Generated_Source\PSoC5/Aileron.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/Aileron.c **** * Function Name: Aileron_ReadPeriod
 872:Generated_Source\PSoC5/Aileron.c **** ********************************************************************************
 873:Generated_Source\PSoC5/Aileron.c **** *
 874:Generated_Source\PSoC5/Aileron.c **** * Summary:
 875:Generated_Source\PSoC5/Aileron.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/Aileron.c **** *
 877:Generated_Source\PSoC5/Aileron.c **** * Parameters:
 878:Generated_Source\PSoC5/Aileron.c **** *  None
 879:Generated_Source\PSoC5/Aileron.c **** *
 880:Generated_Source\PSoC5/Aileron.c **** * Return:
 881:Generated_Source\PSoC5/Aileron.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/Aileron.c **** *
 883:Generated_Source\PSoC5/Aileron.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/Aileron.c **** uint16 Aileron_ReadPeriod(void) 
 885:Generated_Source\PSoC5/Aileron.c **** {
 539              		.loc 1 885 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 886:Generated_Source\PSoC5/Aileron.c ****     #if(Aileron_UsingFixedFunction)
 887:Generated_Source\PSoC5/Aileron.c ****         return ((uint16)CY_GET_REG16(Aileron_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/Aileron.c ****     #else
 889:Generated_Source\PSoC5/Aileron.c ****         return (CY_GET_REG16(Aileron_PERIOD_LSB_PTR));
 544              		.loc 1 889 0
 545 0000 014B     		ldr	r3, .L57
 546 0002 1888     		ldrh	r0, [r3]
 890:Generated_Source\PSoC5/Aileron.c ****     #endif /* (Aileron_UsingFixedFunction) */
 891:Generated_Source\PSoC5/Aileron.c **** }
 547              		.loc 1 891 0
 548 0004 80B2     		uxth	r0, r0
 549 0006 7047     		bx	lr
 550              	.L58:
 551              		.align	2
 552              	.L57:
 553 0008 886A0040 		.word	1073769096
 554              		.cfi_endproc
 555              	.LFE17:
 556              		.size	Aileron_ReadPeriod, .-Aileron_ReadPeriod
 557              		.global	Aileron_initVar
 558              		.bss
 559              		.set	.LANCHOR0,. + 0
 560              		.type	Aileron_initVar, %object
 561              		.size	Aileron_initVar, 1
 562              	Aileron_initVar:
 563 0000 00       		.space	1
 564              		.text
 565              	.Letext0:
 566              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 567              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 27


 568              		.section	.debug_info,"",%progbits
 569              	.Ldebug_info0:
 570 0000 A0030000 		.4byte	0x3a0
 571 0004 0400     		.2byte	0x4
 572 0006 00000000 		.4byte	.Ldebug_abbrev0
 573 000a 04       		.byte	0x4
 574 000b 01       		.uleb128 0x1
 575 000c F4000000 		.4byte	.LASF45
 576 0010 0C       		.byte	0xc
 577 0011 62020000 		.4byte	.LASF46
 578 0015 E4020000 		.4byte	.LASF47
 579 0019 00000000 		.4byte	.Ldebug_ranges0+0
 580 001d 00000000 		.4byte	0
 581 0021 00000000 		.4byte	.Ldebug_line0
 582 0025 02       		.uleb128 0x2
 583 0026 01       		.byte	0x1
 584 0027 06       		.byte	0x6
 585 0028 8E030000 		.4byte	.LASF0
 586 002c 02       		.uleb128 0x2
 587 002d 01       		.byte	0x1
 588 002e 08       		.byte	0x8
 589 002f E6000000 		.4byte	.LASF1
 590 0033 02       		.uleb128 0x2
 591 0034 02       		.byte	0x2
 592 0035 05       		.byte	0x5
 593 0036 56030000 		.4byte	.LASF2
 594 003a 02       		.uleb128 0x2
 595 003b 02       		.byte	0x2
 596 003c 07       		.byte	0x7
 597 003d 63000000 		.4byte	.LASF3
 598 0041 02       		.uleb128 0x2
 599 0042 04       		.byte	0x4
 600 0043 05       		.byte	0x5
 601 0044 74030000 		.4byte	.LASF4
 602 0048 02       		.uleb128 0x2
 603 0049 04       		.byte	0x4
 604 004a 07       		.byte	0x7
 605 004b 97010000 		.4byte	.LASF5
 606 004f 02       		.uleb128 0x2
 607 0050 08       		.byte	0x8
 608 0051 05       		.byte	0x5
 609 0052 3A030000 		.4byte	.LASF6
 610 0056 02       		.uleb128 0x2
 611 0057 08       		.byte	0x8
 612 0058 07       		.byte	0x7
 613 0059 CF000000 		.4byte	.LASF7
 614 005d 03       		.uleb128 0x3
 615 005e 04       		.byte	0x4
 616 005f 05       		.byte	0x5
 617 0060 696E7400 		.ascii	"int\000"
 618 0064 02       		.uleb128 0x2
 619 0065 04       		.byte	0x4
 620 0066 07       		.byte	0x7
 621 0067 55020000 		.4byte	.LASF8
 622 006b 04       		.uleb128 0x4
 623 006c BD010000 		.4byte	.LASF9
 624 0070 02       		.byte	0x2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 28


 625 0071 9201     		.2byte	0x192
 626 0073 2C000000 		.4byte	0x2c
 627 0077 04       		.uleb128 0x4
 628 0078 28020000 		.4byte	.LASF10
 629 007c 02       		.byte	0x2
 630 007d 9301     		.2byte	0x193
 631 007f 3A000000 		.4byte	0x3a
 632 0083 02       		.uleb128 0x2
 633 0084 04       		.byte	0x4
 634 0085 04       		.byte	0x4
 635 0086 C1000000 		.4byte	.LASF11
 636 008a 02       		.uleb128 0x2
 637 008b 08       		.byte	0x8
 638 008c 04       		.byte	0x4
 639 008d F4010000 		.4byte	.LASF12
 640 0091 02       		.uleb128 0x2
 641 0092 01       		.byte	0x1
 642 0093 08       		.byte	0x8
 643 0094 7D030000 		.4byte	.LASF13
 644 0098 04       		.uleb128 0x4
 645 0099 82010000 		.4byte	.LASF14
 646 009d 02       		.byte	0x2
 647 009e 3C02     		.2byte	0x23c
 648 00a0 A4000000 		.4byte	0xa4
 649 00a4 05       		.uleb128 0x5
 650 00a5 6B000000 		.4byte	0x6b
 651 00a9 04       		.uleb128 0x4
 652 00aa 00000000 		.4byte	.LASF15
 653 00ae 02       		.byte	0x2
 654 00af 3D02     		.2byte	0x23d
 655 00b1 B5000000 		.4byte	0xb5
 656 00b5 05       		.uleb128 0x5
 657 00b6 77000000 		.4byte	0x77
 658 00ba 02       		.uleb128 0x2
 659 00bb 08       		.byte	0x8
 660 00bc 04       		.byte	0x4
 661 00bd 82030000 		.4byte	.LASF16
 662 00c1 02       		.uleb128 0x2
 663 00c2 04       		.byte	0x4
 664 00c3 07       		.byte	0x7
 665 00c4 31030000 		.4byte	.LASF17
 666 00c8 06       		.uleb128 0x6
 667 00c9 2F020000 		.4byte	.LASF18
 668 00cd 01       		.byte	0x1
 669 00ce C7       		.byte	0xc7
 670 00cf 00000000 		.4byte	.LFB2
 671 00d3 10000000 		.4byte	.LFE2-.LFB2
 672 00d7 01       		.uleb128 0x1
 673 00d8 9C       		.byte	0x9c
 674 00d9 06       		.uleb128 0x6
 675 00da B4000000 		.4byte	.LASF19
 676 00de 01       		.byte	0x1
 677 00df E9       		.byte	0xe9
 678 00e0 00000000 		.4byte	.LFB3
 679 00e4 10000000 		.4byte	.LFE3-.LFB3
 680 00e8 01       		.uleb128 0x1
 681 00e9 9C       		.byte	0x9c
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 29


 682 00ea 07       		.uleb128 0x7
 683 00eb A2030000 		.4byte	.LASF20
 684 00ef 01       		.byte	0x1
 685 00f0 9301     		.2byte	0x193
 686 00f2 00000000 		.4byte	.LFB4
 687 00f6 0C000000 		.4byte	.LFE4-.LFB4
 688 00fa 01       		.uleb128 0x1
 689 00fb 9C       		.byte	0x9c
 690 00fc 0F010000 		.4byte	0x10f
 691 0100 08       		.uleb128 0x8
 692 0101 C7000000 		.4byte	.LASF22
 693 0105 01       		.byte	0x1
 694 0106 9301     		.2byte	0x193
 695 0108 77000000 		.4byte	0x77
 696 010c 01       		.uleb128 0x1
 697 010d 50       		.byte	0x50
 698 010e 00       		.byte	0
 699 010f 09       		.uleb128 0x9
 700 0110 B9020000 		.4byte	.LASF29
 701 0114 01       		.byte	0x1
 702 0115 A901     		.2byte	0x1a9
 703 0117 77000000 		.4byte	0x77
 704 011b 00000000 		.4byte	.LFB5
 705 011f 14000000 		.4byte	.LFE5-.LFB5
 706 0123 01       		.uleb128 0x1
 707 0124 9C       		.byte	0x9c
 708 0125 07       		.uleb128 0x7
 709 0126 60030000 		.4byte	.LASF21
 710 012a 01       		.byte	0x1
 711 012b E201     		.2byte	0x1e2
 712 012d 00000000 		.4byte	.LFB7
 713 0131 0C000000 		.4byte	.LFE7-.LFB7
 714 0135 01       		.uleb128 0x1
 715 0136 9C       		.byte	0x9c
 716 0137 4A010000 		.4byte	0x14a
 717 013b 08       		.uleb128 0x8
 718 013c 5C000000 		.4byte	.LASF23
 719 0140 01       		.byte	0x1
 720 0141 E201     		.2byte	0x1e2
 721 0143 77000000 		.4byte	0x77
 722 0147 01       		.uleb128 0x1
 723 0148 50       		.byte	0x50
 724 0149 00       		.byte	0
 725 014a 07       		.uleb128 0x7
 726 014b 30000000 		.4byte	.LASF24
 727 014f 01       		.byte	0x1
 728 0150 2B02     		.2byte	0x22b
 729 0152 00000000 		.4byte	.LFB8
 730 0156 0C000000 		.4byte	.LFE8-.LFB8
 731 015a 01       		.uleb128 0x1
 732 015b 9C       		.byte	0x9c
 733 015c 6F010000 		.4byte	0x16f
 734 0160 08       		.uleb128 0x8
 735 0161 9A030000 		.4byte	.LASF25
 736 0165 01       		.byte	0x1
 737 0166 2B02     		.2byte	0x22b
 738 0168 77000000 		.4byte	0x77
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 30


 739 016c 01       		.uleb128 0x1
 740 016d 50       		.byte	0x50
 741 016e 00       		.byte	0
 742 016f 07       		.uleb128 0x7
 743 0170 46000000 		.4byte	.LASF26
 744 0174 01       		.byte	0x1
 745 0175 4802     		.2byte	0x248
 746 0177 00000000 		.4byte	.LFB9
 747 017b 0C000000 		.4byte	.LFE9-.LFB9
 748 017f 01       		.uleb128 0x1
 749 0180 9C       		.byte	0x9c
 750 0181 94010000 		.4byte	0x194
 751 0185 08       		.uleb128 0x8
 752 0186 9A030000 		.4byte	.LASF25
 753 018a 01       		.byte	0x1
 754 018b 4802     		.2byte	0x248
 755 018d 77000000 		.4byte	0x77
 756 0191 01       		.uleb128 0x1
 757 0192 50       		.byte	0x50
 758 0193 00       		.byte	0
 759 0194 07       		.uleb128 0x7
 760 0195 83020000 		.4byte	.LASF27
 761 0199 01       		.byte	0x1
 762 019a AC02     		.2byte	0x2ac
 763 019c 00000000 		.4byte	.LFB10
 764 01a0 0C000000 		.4byte	.LFE10-.LFB10
 765 01a4 01       		.uleb128 0x1
 766 01a5 9C       		.byte	0x9c
 767 01a6 B9010000 		.4byte	0x1b9
 768 01aa 08       		.uleb128 0x8
 769 01ab 48030000 		.4byte	.LASF28
 770 01af 01       		.byte	0x1
 771 01b0 AC02     		.2byte	0x2ac
 772 01b2 6B000000 		.4byte	0x6b
 773 01b6 01       		.uleb128 0x1
 774 01b7 50       		.byte	0x50
 775 01b8 00       		.byte	0
 776 01b9 09       		.uleb128 0x9
 777 01ba FB010000 		.4byte	.LASF30
 778 01be 01       		.byte	0x1
 779 01bf C702     		.2byte	0x2c7
 780 01c1 6B000000 		.4byte	0x6b
 781 01c5 00000000 		.4byte	.LFB11
 782 01c9 0C000000 		.4byte	.LFE11-.LFB11
 783 01cd 01       		.uleb128 0x1
 784 01ce 9C       		.byte	0x9c
 785 01cf 0A       		.uleb128 0xa
 786 01d0 CB010000 		.4byte	.LASF48
 787 01d4 01       		.byte	0x1
 788 01d5 E102     		.2byte	0x2e1
 789 01d7 6B000000 		.4byte	0x6b
 790 01db 00000000 		.4byte	.LFB12
 791 01df 0C000000 		.4byte	.LFE12-.LFB12
 792 01e3 01       		.uleb128 0x1
 793 01e4 9C       		.byte	0x9c
 794 01e5 F8010000 		.4byte	0x1f8
 795 01e9 0B       		.uleb128 0xb
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 31


 796 01ea B2020000 		.4byte	.LASF36
 797 01ee 01       		.byte	0x1
 798 01ef E302     		.2byte	0x2e3
 799 01f1 6B000000 		.4byte	0x6b
 800 01f5 01       		.uleb128 0x1
 801 01f6 50       		.byte	0x50
 802 01f7 00       		.byte	0
 803 01f8 07       		.uleb128 0x7
 804 01f9 97000000 		.4byte	.LASF31
 805 01fd 01       		.byte	0x1
 806 01fe FD02     		.2byte	0x2fd
 807 0200 00000000 		.4byte	.LFB13
 808 0204 0C000000 		.4byte	.LFE13-.LFB13
 809 0208 01       		.uleb128 0x1
 810 0209 9C       		.byte	0x9c
 811 020a 1D020000 		.4byte	0x21d
 812 020e 08       		.uleb128 0x8
 813 020f C3010000 		.4byte	.LASF32
 814 0213 01       		.byte	0x1
 815 0214 FD02     		.2byte	0x2fd
 816 0216 6B000000 		.4byte	0x6b
 817 021a 01       		.uleb128 0x1
 818 021b 50       		.byte	0x50
 819 021c 00       		.byte	0
 820 021d 09       		.uleb128 0x9
 821 021e A9010000 		.4byte	.LASF33
 822 0222 01       		.byte	0x1
 823 0223 1603     		.2byte	0x316
 824 0225 77000000 		.4byte	0x77
 825 0229 00000000 		.4byte	.LFB14
 826 022d 0C000000 		.4byte	.LFE14-.LFB14
 827 0231 01       		.uleb128 0x1
 828 0232 9C       		.byte	0x9c
 829 0233 07       		.uleb128 0x7
 830 0234 16020000 		.4byte	.LASF34
 831 0238 01       		.byte	0x1
 832 0239 C501     		.2byte	0x1c5
 833 023b 00000000 		.4byte	.LFB6
 834 023f 14000000 		.4byte	.LFE6-.LFB6
 835 0243 01       		.uleb128 0x1
 836 0244 9C       		.byte	0x9c
 837 0245 5C020000 		.4byte	0x25c
 838 0249 0C       		.uleb128 0xc
 839 024a 08000000 		.4byte	.LVL7
 840 024e 1D020000 		.4byte	0x21d
 841 0252 0C       		.uleb128 0xc
 842 0253 0C000000 		.4byte	.LVL8
 843 0257 B9010000 		.4byte	0x1b9
 844 025b 00       		.byte	0
 845 025c 0D       		.uleb128 0xd
 846 025d E7010000 		.4byte	.LASF35
 847 0261 01       		.byte	0x1
 848 0262 54       		.byte	0x54
 849 0263 00000000 		.4byte	.LFB1
 850 0267 6C000000 		.4byte	.LFE1-.LFB1
 851 026b 01       		.uleb128 0x1
 852 026c 9C       		.byte	0x9c
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 32


 853 026d 12030000 		.4byte	0x312
 854 0271 0E       		.uleb128 0xe
 855 0272 2C030000 		.4byte	.LASF37
 856 0276 01       		.byte	0x1
 857 0277 57       		.byte	0x57
 858 0278 6B000000 		.4byte	0x6b
 859 027c 00000000 		.4byte	.LLST0
 860 0280 0E       		.uleb128 0xe
 861 0281 CD020000 		.4byte	.LASF38
 862 0285 01       		.byte	0x1
 863 0286 5D       		.byte	0x5d
 864 0287 6B000000 		.4byte	0x6b
 865 028b 13000000 		.4byte	.LLST1
 866 028f 0F       		.uleb128 0xf
 867 0290 2C000000 		.4byte	.LVL11
 868 0294 EA000000 		.4byte	0xea
 869 0298 A4020000 		.4byte	0x2a4
 870 029c 10       		.uleb128 0x10
 871 029d 01       		.uleb128 0x1
 872 029e 50       		.byte	0x50
 873 029f 03       		.uleb128 0x3
 874 02a0 0A       		.byte	0xa
 875 02a1 204E     		.2byte	0x4e20
 876 02a3 00       		.byte	0
 877 02a4 0F       		.uleb128 0xf
 878 02a5 34000000 		.4byte	.LVL12
 879 02a9 25010000 		.4byte	0x125
 880 02ad B9020000 		.4byte	0x2b9
 881 02b1 10       		.uleb128 0x10
 882 02b2 01       		.uleb128 0x1
 883 02b3 50       		.byte	0x50
 884 02b4 03       		.uleb128 0x3
 885 02b5 0A       		.byte	0xa
 886 02b6 204E     		.2byte	0x4e20
 887 02b8 00       		.byte	0
 888 02b9 0F       		.uleb128 0xf
 889 02ba 3C000000 		.4byte	.LVL13
 890 02be 4A010000 		.4byte	0x14a
 891 02c2 CE020000 		.4byte	0x2ce
 892 02c6 10       		.uleb128 0x10
 893 02c7 01       		.uleb128 0x1
 894 02c8 50       		.byte	0x50
 895 02c9 03       		.uleb128 0x3
 896 02ca 0A       		.byte	0xa
 897 02cb DC05     		.2byte	0x5dc
 898 02cd 00       		.byte	0
 899 02ce 0F       		.uleb128 0xf
 900 02cf 44000000 		.4byte	.LVL14
 901 02d3 6F010000 		.4byte	0x16f
 902 02d7 E3020000 		.4byte	0x2e3
 903 02db 10       		.uleb128 0x10
 904 02dc 01       		.uleb128 0x1
 905 02dd 50       		.byte	0x50
 906 02de 03       		.uleb128 0x3
 907 02df 0A       		.byte	0xa
 908 02e0 E105     		.2byte	0x5e1
 909 02e2 00       		.byte	0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 33


 910 02e3 0F       		.uleb128 0xf
 911 02e4 4A000000 		.4byte	.LVL15
 912 02e8 94010000 		.4byte	0x194
 913 02ec F6020000 		.4byte	0x2f6
 914 02f0 10       		.uleb128 0x10
 915 02f1 01       		.uleb128 0x1
 916 02f2 50       		.byte	0x50
 917 02f3 01       		.uleb128 0x1
 918 02f4 30       		.byte	0x30
 919 02f5 00       		.byte	0
 920 02f6 0C       		.uleb128 0xc
 921 02f7 4E000000 		.4byte	.LVL16
 922 02fb 8D030000 		.4byte	0x38d
 923 02ff 0C       		.uleb128 0xc
 924 0300 5C000000 		.4byte	.LVL17
 925 0304 98030000 		.4byte	0x398
 926 0308 0C       		.uleb128 0xc
 927 0309 60000000 		.4byte	.LVL18
 928 030d 33020000 		.4byte	0x233
 929 0311 00       		.byte	0
 930 0312 0D       		.uleb128 0xd
 931 0313 76000000 		.4byte	.LASF39
 932 0317 01       		.byte	0x1
 933 0318 37       		.byte	0x37
 934 0319 00000000 		.4byte	.LFB0
 935 031d 1C000000 		.4byte	.LFE0-.LFB0
 936 0321 01       		.uleb128 0x1
 937 0322 9C       		.byte	0x9c
 938 0323 3A030000 		.4byte	0x33a
 939 0327 0C       		.uleb128 0xc
 940 0328 0C000000 		.4byte	.LVL19
 941 032c 5C020000 		.4byte	0x25c
 942 0330 0C       		.uleb128 0xc
 943 0331 16000000 		.4byte	.LVL20
 944 0335 C8000000 		.4byte	0xc8
 945 0339 00       		.byte	0
 946 033a 09       		.uleb128 0x9
 947 033b 06000000 		.4byte	.LASF40
 948 033f 01       		.byte	0x1
 949 0340 4A03     		.2byte	0x34a
 950 0342 77000000 		.4byte	0x77
 951 0346 00000000 		.4byte	.LFB15
 952 034a 0C000000 		.4byte	.LFE15-.LFB15
 953 034e 01       		.uleb128 0x1
 954 034f 9C       		.byte	0x9c
 955 0350 09       		.uleb128 0x9
 956 0351 1B000000 		.4byte	.LASF41
 957 0355 01       		.byte	0x1
 958 0356 5E03     		.2byte	0x35e
 959 0358 77000000 		.4byte	0x77
 960 035c 00000000 		.4byte	.LFB16
 961 0360 0C000000 		.4byte	.LFE16-.LFB16
 962 0364 01       		.uleb128 0x1
 963 0365 9C       		.byte	0x9c
 964 0366 09       		.uleb128 0x9
 965 0367 84000000 		.4byte	.LASF42
 966 036b 01       		.byte	0x1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 34


 967 036c 7403     		.2byte	0x374
 968 036e 77000000 		.4byte	0x77
 969 0372 00000000 		.4byte	.LFB17
 970 0376 0C000000 		.4byte	.LFE17-.LFB17
 971 037a 01       		.uleb128 0x1
 972 037b 9C       		.byte	0x9c
 973 037c 11       		.uleb128 0x11
 974 037d 87010000 		.4byte	.LASF49
 975 0381 01       		.byte	0x1
 976 0382 20       		.byte	0x20
 977 0383 6B000000 		.4byte	0x6b
 978 0387 05       		.uleb128 0x5
 979 0388 03       		.byte	0x3
 980 0389 00000000 		.4byte	Aileron_initVar
 981 038d 12       		.uleb128 0x12
 982 038e 3E020000 		.4byte	.LASF43
 983 0392 3E020000 		.4byte	.LASF43
 984 0396 03       		.byte	0x3
 985 0397 7D       		.byte	0x7d
 986 0398 12       		.uleb128 0x12
 987 0399 9C020000 		.4byte	.LASF44
 988 039d 9C020000 		.4byte	.LASF44
 989 03a1 03       		.byte	0x3
 990 03a2 7E       		.byte	0x7e
 991 03a3 00       		.byte	0
 992              		.section	.debug_abbrev,"",%progbits
 993              	.Ldebug_abbrev0:
 994 0000 01       		.uleb128 0x1
 995 0001 11       		.uleb128 0x11
 996 0002 01       		.byte	0x1
 997 0003 25       		.uleb128 0x25
 998 0004 0E       		.uleb128 0xe
 999 0005 13       		.uleb128 0x13
 1000 0006 0B       		.uleb128 0xb
 1001 0007 03       		.uleb128 0x3
 1002 0008 0E       		.uleb128 0xe
 1003 0009 1B       		.uleb128 0x1b
 1004 000a 0E       		.uleb128 0xe
 1005 000b 55       		.uleb128 0x55
 1006 000c 17       		.uleb128 0x17
 1007 000d 11       		.uleb128 0x11
 1008 000e 01       		.uleb128 0x1
 1009 000f 10       		.uleb128 0x10
 1010 0010 17       		.uleb128 0x17
 1011 0011 00       		.byte	0
 1012 0012 00       		.byte	0
 1013 0013 02       		.uleb128 0x2
 1014 0014 24       		.uleb128 0x24
 1015 0015 00       		.byte	0
 1016 0016 0B       		.uleb128 0xb
 1017 0017 0B       		.uleb128 0xb
 1018 0018 3E       		.uleb128 0x3e
 1019 0019 0B       		.uleb128 0xb
 1020 001a 03       		.uleb128 0x3
 1021 001b 0E       		.uleb128 0xe
 1022 001c 00       		.byte	0
 1023 001d 00       		.byte	0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 35


 1024 001e 03       		.uleb128 0x3
 1025 001f 24       		.uleb128 0x24
 1026 0020 00       		.byte	0
 1027 0021 0B       		.uleb128 0xb
 1028 0022 0B       		.uleb128 0xb
 1029 0023 3E       		.uleb128 0x3e
 1030 0024 0B       		.uleb128 0xb
 1031 0025 03       		.uleb128 0x3
 1032 0026 08       		.uleb128 0x8
 1033 0027 00       		.byte	0
 1034 0028 00       		.byte	0
 1035 0029 04       		.uleb128 0x4
 1036 002a 16       		.uleb128 0x16
 1037 002b 00       		.byte	0
 1038 002c 03       		.uleb128 0x3
 1039 002d 0E       		.uleb128 0xe
 1040 002e 3A       		.uleb128 0x3a
 1041 002f 0B       		.uleb128 0xb
 1042 0030 3B       		.uleb128 0x3b
 1043 0031 05       		.uleb128 0x5
 1044 0032 49       		.uleb128 0x49
 1045 0033 13       		.uleb128 0x13
 1046 0034 00       		.byte	0
 1047 0035 00       		.byte	0
 1048 0036 05       		.uleb128 0x5
 1049 0037 35       		.uleb128 0x35
 1050 0038 00       		.byte	0
 1051 0039 49       		.uleb128 0x49
 1052 003a 13       		.uleb128 0x13
 1053 003b 00       		.byte	0
 1054 003c 00       		.byte	0
 1055 003d 06       		.uleb128 0x6
 1056 003e 2E       		.uleb128 0x2e
 1057 003f 00       		.byte	0
 1058 0040 3F       		.uleb128 0x3f
 1059 0041 19       		.uleb128 0x19
 1060 0042 03       		.uleb128 0x3
 1061 0043 0E       		.uleb128 0xe
 1062 0044 3A       		.uleb128 0x3a
 1063 0045 0B       		.uleb128 0xb
 1064 0046 3B       		.uleb128 0x3b
 1065 0047 0B       		.uleb128 0xb
 1066 0048 27       		.uleb128 0x27
 1067 0049 19       		.uleb128 0x19
 1068 004a 11       		.uleb128 0x11
 1069 004b 01       		.uleb128 0x1
 1070 004c 12       		.uleb128 0x12
 1071 004d 06       		.uleb128 0x6
 1072 004e 40       		.uleb128 0x40
 1073 004f 18       		.uleb128 0x18
 1074 0050 9742     		.uleb128 0x2117
 1075 0052 19       		.uleb128 0x19
 1076 0053 00       		.byte	0
 1077 0054 00       		.byte	0
 1078 0055 07       		.uleb128 0x7
 1079 0056 2E       		.uleb128 0x2e
 1080 0057 01       		.byte	0x1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 36


 1081 0058 3F       		.uleb128 0x3f
 1082 0059 19       		.uleb128 0x19
 1083 005a 03       		.uleb128 0x3
 1084 005b 0E       		.uleb128 0xe
 1085 005c 3A       		.uleb128 0x3a
 1086 005d 0B       		.uleb128 0xb
 1087 005e 3B       		.uleb128 0x3b
 1088 005f 05       		.uleb128 0x5
 1089 0060 27       		.uleb128 0x27
 1090 0061 19       		.uleb128 0x19
 1091 0062 11       		.uleb128 0x11
 1092 0063 01       		.uleb128 0x1
 1093 0064 12       		.uleb128 0x12
 1094 0065 06       		.uleb128 0x6
 1095 0066 40       		.uleb128 0x40
 1096 0067 18       		.uleb128 0x18
 1097 0068 9742     		.uleb128 0x2117
 1098 006a 19       		.uleb128 0x19
 1099 006b 01       		.uleb128 0x1
 1100 006c 13       		.uleb128 0x13
 1101 006d 00       		.byte	0
 1102 006e 00       		.byte	0
 1103 006f 08       		.uleb128 0x8
 1104 0070 05       		.uleb128 0x5
 1105 0071 00       		.byte	0
 1106 0072 03       		.uleb128 0x3
 1107 0073 0E       		.uleb128 0xe
 1108 0074 3A       		.uleb128 0x3a
 1109 0075 0B       		.uleb128 0xb
 1110 0076 3B       		.uleb128 0x3b
 1111 0077 05       		.uleb128 0x5
 1112 0078 49       		.uleb128 0x49
 1113 0079 13       		.uleb128 0x13
 1114 007a 02       		.uleb128 0x2
 1115 007b 18       		.uleb128 0x18
 1116 007c 00       		.byte	0
 1117 007d 00       		.byte	0
 1118 007e 09       		.uleb128 0x9
 1119 007f 2E       		.uleb128 0x2e
 1120 0080 00       		.byte	0
 1121 0081 3F       		.uleb128 0x3f
 1122 0082 19       		.uleb128 0x19
 1123 0083 03       		.uleb128 0x3
 1124 0084 0E       		.uleb128 0xe
 1125 0085 3A       		.uleb128 0x3a
 1126 0086 0B       		.uleb128 0xb
 1127 0087 3B       		.uleb128 0x3b
 1128 0088 05       		.uleb128 0x5
 1129 0089 27       		.uleb128 0x27
 1130 008a 19       		.uleb128 0x19
 1131 008b 49       		.uleb128 0x49
 1132 008c 13       		.uleb128 0x13
 1133 008d 11       		.uleb128 0x11
 1134 008e 01       		.uleb128 0x1
 1135 008f 12       		.uleb128 0x12
 1136 0090 06       		.uleb128 0x6
 1137 0091 40       		.uleb128 0x40
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 37


 1138 0092 18       		.uleb128 0x18
 1139 0093 9742     		.uleb128 0x2117
 1140 0095 19       		.uleb128 0x19
 1141 0096 00       		.byte	0
 1142 0097 00       		.byte	0
 1143 0098 0A       		.uleb128 0xa
 1144 0099 2E       		.uleb128 0x2e
 1145 009a 01       		.byte	0x1
 1146 009b 3F       		.uleb128 0x3f
 1147 009c 19       		.uleb128 0x19
 1148 009d 03       		.uleb128 0x3
 1149 009e 0E       		.uleb128 0xe
 1150 009f 3A       		.uleb128 0x3a
 1151 00a0 0B       		.uleb128 0xb
 1152 00a1 3B       		.uleb128 0x3b
 1153 00a2 05       		.uleb128 0x5
 1154 00a3 27       		.uleb128 0x27
 1155 00a4 19       		.uleb128 0x19
 1156 00a5 49       		.uleb128 0x49
 1157 00a6 13       		.uleb128 0x13
 1158 00a7 11       		.uleb128 0x11
 1159 00a8 01       		.uleb128 0x1
 1160 00a9 12       		.uleb128 0x12
 1161 00aa 06       		.uleb128 0x6
 1162 00ab 40       		.uleb128 0x40
 1163 00ac 18       		.uleb128 0x18
 1164 00ad 9742     		.uleb128 0x2117
 1165 00af 19       		.uleb128 0x19
 1166 00b0 01       		.uleb128 0x1
 1167 00b1 13       		.uleb128 0x13
 1168 00b2 00       		.byte	0
 1169 00b3 00       		.byte	0
 1170 00b4 0B       		.uleb128 0xb
 1171 00b5 34       		.uleb128 0x34
 1172 00b6 00       		.byte	0
 1173 00b7 03       		.uleb128 0x3
 1174 00b8 0E       		.uleb128 0xe
 1175 00b9 3A       		.uleb128 0x3a
 1176 00ba 0B       		.uleb128 0xb
 1177 00bb 3B       		.uleb128 0x3b
 1178 00bc 05       		.uleb128 0x5
 1179 00bd 49       		.uleb128 0x49
 1180 00be 13       		.uleb128 0x13
 1181 00bf 02       		.uleb128 0x2
 1182 00c0 18       		.uleb128 0x18
 1183 00c1 00       		.byte	0
 1184 00c2 00       		.byte	0
 1185 00c3 0C       		.uleb128 0xc
 1186 00c4 898201   		.uleb128 0x4109
 1187 00c7 00       		.byte	0
 1188 00c8 11       		.uleb128 0x11
 1189 00c9 01       		.uleb128 0x1
 1190 00ca 31       		.uleb128 0x31
 1191 00cb 13       		.uleb128 0x13
 1192 00cc 00       		.byte	0
 1193 00cd 00       		.byte	0
 1194 00ce 0D       		.uleb128 0xd
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 38


 1195 00cf 2E       		.uleb128 0x2e
 1196 00d0 01       		.byte	0x1
 1197 00d1 3F       		.uleb128 0x3f
 1198 00d2 19       		.uleb128 0x19
 1199 00d3 03       		.uleb128 0x3
 1200 00d4 0E       		.uleb128 0xe
 1201 00d5 3A       		.uleb128 0x3a
 1202 00d6 0B       		.uleb128 0xb
 1203 00d7 3B       		.uleb128 0x3b
 1204 00d8 0B       		.uleb128 0xb
 1205 00d9 27       		.uleb128 0x27
 1206 00da 19       		.uleb128 0x19
 1207 00db 11       		.uleb128 0x11
 1208 00dc 01       		.uleb128 0x1
 1209 00dd 12       		.uleb128 0x12
 1210 00de 06       		.uleb128 0x6
 1211 00df 40       		.uleb128 0x40
 1212 00e0 18       		.uleb128 0x18
 1213 00e1 9742     		.uleb128 0x2117
 1214 00e3 19       		.uleb128 0x19
 1215 00e4 01       		.uleb128 0x1
 1216 00e5 13       		.uleb128 0x13
 1217 00e6 00       		.byte	0
 1218 00e7 00       		.byte	0
 1219 00e8 0E       		.uleb128 0xe
 1220 00e9 34       		.uleb128 0x34
 1221 00ea 00       		.byte	0
 1222 00eb 03       		.uleb128 0x3
 1223 00ec 0E       		.uleb128 0xe
 1224 00ed 3A       		.uleb128 0x3a
 1225 00ee 0B       		.uleb128 0xb
 1226 00ef 3B       		.uleb128 0x3b
 1227 00f0 0B       		.uleb128 0xb
 1228 00f1 49       		.uleb128 0x49
 1229 00f2 13       		.uleb128 0x13
 1230 00f3 02       		.uleb128 0x2
 1231 00f4 17       		.uleb128 0x17
 1232 00f5 00       		.byte	0
 1233 00f6 00       		.byte	0
 1234 00f7 0F       		.uleb128 0xf
 1235 00f8 898201   		.uleb128 0x4109
 1236 00fb 01       		.byte	0x1
 1237 00fc 11       		.uleb128 0x11
 1238 00fd 01       		.uleb128 0x1
 1239 00fe 31       		.uleb128 0x31
 1240 00ff 13       		.uleb128 0x13
 1241 0100 01       		.uleb128 0x1
 1242 0101 13       		.uleb128 0x13
 1243 0102 00       		.byte	0
 1244 0103 00       		.byte	0
 1245 0104 10       		.uleb128 0x10
 1246 0105 8A8201   		.uleb128 0x410a
 1247 0108 00       		.byte	0
 1248 0109 02       		.uleb128 0x2
 1249 010a 18       		.uleb128 0x18
 1250 010b 9142     		.uleb128 0x2111
 1251 010d 18       		.uleb128 0x18
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 39


 1252 010e 00       		.byte	0
 1253 010f 00       		.byte	0
 1254 0110 11       		.uleb128 0x11
 1255 0111 34       		.uleb128 0x34
 1256 0112 00       		.byte	0
 1257 0113 03       		.uleb128 0x3
 1258 0114 0E       		.uleb128 0xe
 1259 0115 3A       		.uleb128 0x3a
 1260 0116 0B       		.uleb128 0xb
 1261 0117 3B       		.uleb128 0x3b
 1262 0118 0B       		.uleb128 0xb
 1263 0119 49       		.uleb128 0x49
 1264 011a 13       		.uleb128 0x13
 1265 011b 3F       		.uleb128 0x3f
 1266 011c 19       		.uleb128 0x19
 1267 011d 02       		.uleb128 0x2
 1268 011e 18       		.uleb128 0x18
 1269 011f 00       		.byte	0
 1270 0120 00       		.byte	0
 1271 0121 12       		.uleb128 0x12
 1272 0122 2E       		.uleb128 0x2e
 1273 0123 00       		.byte	0
 1274 0124 3F       		.uleb128 0x3f
 1275 0125 19       		.uleb128 0x19
 1276 0126 3C       		.uleb128 0x3c
 1277 0127 19       		.uleb128 0x19
 1278 0128 6E       		.uleb128 0x6e
 1279 0129 0E       		.uleb128 0xe
 1280 012a 03       		.uleb128 0x3
 1281 012b 0E       		.uleb128 0xe
 1282 012c 3A       		.uleb128 0x3a
 1283 012d 0B       		.uleb128 0xb
 1284 012e 3B       		.uleb128 0x3b
 1285 012f 0B       		.uleb128 0xb
 1286 0130 00       		.byte	0
 1287 0131 00       		.byte	0
 1288 0132 00       		.byte	0
 1289              		.section	.debug_loc,"",%progbits
 1290              	.Ldebug_loc0:
 1291              	.LLST0:
 1292 0000 0A000000 		.4byte	.LVL9
 1293 0004 0E000000 		.4byte	.LVL10
 1294 0008 0100     		.2byte	0x1
 1295 000a 53       		.byte	0x53
 1296 000b 00000000 		.4byte	0
 1297 000f 00000000 		.4byte	0
 1298              	.LLST1:
 1299 0013 4E000000 		.4byte	.LVL16
 1300 0017 5B000000 		.4byte	.LVL17-1
 1301 001b 0100     		.2byte	0x1
 1302 001d 50       		.byte	0x50
 1303 001e 00000000 		.4byte	0
 1304 0022 00000000 		.4byte	0
 1305              		.section	.debug_aranges,"",%progbits
 1306 0000 A4000000 		.4byte	0xa4
 1307 0004 0200     		.2byte	0x2
 1308 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 40


 1309 000a 04       		.byte	0x4
 1310 000b 00       		.byte	0
 1311 000c 0000     		.2byte	0
 1312 000e 0000     		.2byte	0
 1313 0010 00000000 		.4byte	.LFB2
 1314 0014 10000000 		.4byte	.LFE2-.LFB2
 1315 0018 00000000 		.4byte	.LFB3
 1316 001c 10000000 		.4byte	.LFE3-.LFB3
 1317 0020 00000000 		.4byte	.LFB4
 1318 0024 0C000000 		.4byte	.LFE4-.LFB4
 1319 0028 00000000 		.4byte	.LFB5
 1320 002c 14000000 		.4byte	.LFE5-.LFB5
 1321 0030 00000000 		.4byte	.LFB7
 1322 0034 0C000000 		.4byte	.LFE7-.LFB7
 1323 0038 00000000 		.4byte	.LFB8
 1324 003c 0C000000 		.4byte	.LFE8-.LFB8
 1325 0040 00000000 		.4byte	.LFB9
 1326 0044 0C000000 		.4byte	.LFE9-.LFB9
 1327 0048 00000000 		.4byte	.LFB10
 1328 004c 0C000000 		.4byte	.LFE10-.LFB10
 1329 0050 00000000 		.4byte	.LFB11
 1330 0054 0C000000 		.4byte	.LFE11-.LFB11
 1331 0058 00000000 		.4byte	.LFB12
 1332 005c 0C000000 		.4byte	.LFE12-.LFB12
 1333 0060 00000000 		.4byte	.LFB13
 1334 0064 0C000000 		.4byte	.LFE13-.LFB13
 1335 0068 00000000 		.4byte	.LFB14
 1336 006c 0C000000 		.4byte	.LFE14-.LFB14
 1337 0070 00000000 		.4byte	.LFB6
 1338 0074 14000000 		.4byte	.LFE6-.LFB6
 1339 0078 00000000 		.4byte	.LFB1
 1340 007c 6C000000 		.4byte	.LFE1-.LFB1
 1341 0080 00000000 		.4byte	.LFB0
 1342 0084 1C000000 		.4byte	.LFE0-.LFB0
 1343 0088 00000000 		.4byte	.LFB15
 1344 008c 0C000000 		.4byte	.LFE15-.LFB15
 1345 0090 00000000 		.4byte	.LFB16
 1346 0094 0C000000 		.4byte	.LFE16-.LFB16
 1347 0098 00000000 		.4byte	.LFB17
 1348 009c 0C000000 		.4byte	.LFE17-.LFB17
 1349 00a0 00000000 		.4byte	0
 1350 00a4 00000000 		.4byte	0
 1351              		.section	.debug_ranges,"",%progbits
 1352              	.Ldebug_ranges0:
 1353 0000 00000000 		.4byte	.LFB2
 1354 0004 10000000 		.4byte	.LFE2
 1355 0008 00000000 		.4byte	.LFB3
 1356 000c 10000000 		.4byte	.LFE3
 1357 0010 00000000 		.4byte	.LFB4
 1358 0014 0C000000 		.4byte	.LFE4
 1359 0018 00000000 		.4byte	.LFB5
 1360 001c 14000000 		.4byte	.LFE5
 1361 0020 00000000 		.4byte	.LFB7
 1362 0024 0C000000 		.4byte	.LFE7
 1363 0028 00000000 		.4byte	.LFB8
 1364 002c 0C000000 		.4byte	.LFE8
 1365 0030 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 41


 1366 0034 0C000000 		.4byte	.LFE9
 1367 0038 00000000 		.4byte	.LFB10
 1368 003c 0C000000 		.4byte	.LFE10
 1369 0040 00000000 		.4byte	.LFB11
 1370 0044 0C000000 		.4byte	.LFE11
 1371 0048 00000000 		.4byte	.LFB12
 1372 004c 0C000000 		.4byte	.LFE12
 1373 0050 00000000 		.4byte	.LFB13
 1374 0054 0C000000 		.4byte	.LFE13
 1375 0058 00000000 		.4byte	.LFB14
 1376 005c 0C000000 		.4byte	.LFE14
 1377 0060 00000000 		.4byte	.LFB6
 1378 0064 14000000 		.4byte	.LFE6
 1379 0068 00000000 		.4byte	.LFB1
 1380 006c 6C000000 		.4byte	.LFE1
 1381 0070 00000000 		.4byte	.LFB0
 1382 0074 1C000000 		.4byte	.LFE0
 1383 0078 00000000 		.4byte	.LFB15
 1384 007c 0C000000 		.4byte	.LFE15
 1385 0080 00000000 		.4byte	.LFB16
 1386 0084 0C000000 		.4byte	.LFE16
 1387 0088 00000000 		.4byte	.LFB17
 1388 008c 0C000000 		.4byte	.LFE17
 1389 0090 00000000 		.4byte	0
 1390 0094 00000000 		.4byte	0
 1391              		.section	.debug_line,"",%progbits
 1392              	.Ldebug_line0:
 1393 0000 AA010000 		.section	.debug_str,"MS",%progbits,1
 1393      02004F00 
 1393      00000201 
 1393      FB0E0D00 
 1393      01010101 
 1394              	.LASF15:
 1395 0000 72656731 		.ascii	"reg16\000"
 1395      3600
 1396              	.LASF40:
 1397 0006 41696C65 		.ascii	"Aileron_ReadCompare1\000"
 1397      726F6E5F 
 1397      52656164 
 1397      436F6D70 
 1397      61726531 
 1398              	.LASF41:
 1399 001b 41696C65 		.ascii	"Aileron_ReadCompare2\000"
 1399      726F6E5F 
 1399      52656164 
 1399      436F6D70 
 1399      61726532 
 1400              	.LASF24:
 1401 0030 41696C65 		.ascii	"Aileron_WriteCompare1\000"
 1401      726F6E5F 
 1401      57726974 
 1401      65436F6D 
 1401      70617265 
 1402              	.LASF26:
 1403 0046 41696C65 		.ascii	"Aileron_WriteCompare2\000"
 1403      726F6E5F 
 1403      57726974 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 42


 1403      65436F6D 
 1403      70617265 
 1404              	.LASF23:
 1405 005c 70657269 		.ascii	"period\000"
 1405      6F6400
 1406              	.LASF3:
 1407 0063 73686F72 		.ascii	"short unsigned int\000"
 1407      7420756E 
 1407      7369676E 
 1407      65642069 
 1407      6E7400
 1408              	.LASF39:
 1409 0076 41696C65 		.ascii	"Aileron_Start\000"
 1409      726F6E5F 
 1409      53746172 
 1409      7400
 1410              	.LASF42:
 1411 0084 41696C65 		.ascii	"Aileron_ReadPeriod\000"
 1411      726F6E5F 
 1411      52656164 
 1411      50657269 
 1411      6F6400
 1412              	.LASF31:
 1413 0097 41696C65 		.ascii	"Aileron_WriteControlRegister\000"
 1413      726F6E5F 
 1413      57726974 
 1413      65436F6E 
 1413      74726F6C 
 1414              	.LASF19:
 1415 00b4 41696C65 		.ascii	"Aileron_Stop\000"
 1415      726F6E5F 
 1415      53746F70 
 1415      00
 1416              	.LASF11:
 1417 00c1 666C6F61 		.ascii	"float\000"
 1417      7400
 1418              	.LASF22:
 1419 00c7 636F756E 		.ascii	"counter\000"
 1419      74657200 
 1420              	.LASF7:
 1421 00cf 6C6F6E67 		.ascii	"long long unsigned int\000"
 1421      206C6F6E 
 1421      6720756E 
 1421      7369676E 
 1421      65642069 
 1422              	.LASF1:
 1423 00e6 756E7369 		.ascii	"unsigned char\000"
 1423      676E6564 
 1423      20636861 
 1423      7200
 1424              	.LASF45:
 1425 00f4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1425      43313120 
 1425      352E342E 
 1425      31203230 
 1425      31363036 
 1426 0127 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 43


 1426      20726576 
 1426      6973696F 
 1426      6E203233 
 1426      37373135 
 1427 015a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1427      66756E63 
 1427      74696F6E 
 1427      2D736563 
 1427      74696F6E 
 1428              	.LASF14:
 1429 0182 72656738 		.ascii	"reg8\000"
 1429      00
 1430              	.LASF49:
 1431 0187 41696C65 		.ascii	"Aileron_initVar\000"
 1431      726F6E5F 
 1431      696E6974 
 1431      56617200 
 1432              	.LASF5:
 1433 0197 6C6F6E67 		.ascii	"long unsigned int\000"
 1433      20756E73 
 1433      69676E65 
 1433      6420696E 
 1433      7400
 1434              	.LASF33:
 1435 01a9 41696C65 		.ascii	"Aileron_ReadCapture\000"
 1435      726F6E5F 
 1435      52656164 
 1435      43617074 
 1435      75726500 
 1436              	.LASF9:
 1437 01bd 75696E74 		.ascii	"uint8\000"
 1437      3800
 1438              	.LASF32:
 1439 01c3 636F6E74 		.ascii	"control\000"
 1439      726F6C00 
 1440              	.LASF48:
 1441 01cb 41696C65 		.ascii	"Aileron_ReadControlRegister\000"
 1441      726F6E5F 
 1441      52656164 
 1441      436F6E74 
 1441      726F6C52 
 1442              	.LASF35:
 1443 01e7 41696C65 		.ascii	"Aileron_Init\000"
 1443      726F6E5F 
 1443      496E6974 
 1443      00
 1444              	.LASF12:
 1445 01f4 646F7562 		.ascii	"double\000"
 1445      6C6500
 1446              	.LASF30:
 1447 01fb 41696C65 		.ascii	"Aileron_ReadStatusRegister\000"
 1447      726F6E5F 
 1447      52656164 
 1447      53746174 
 1447      75735265 
 1448              	.LASF34:
 1449 0216 41696C65 		.ascii	"Aileron_ClearFIFO\000"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 44


 1449      726F6E5F 
 1449      436C6561 
 1449      72464946 
 1449      4F00
 1450              	.LASF10:
 1451 0228 75696E74 		.ascii	"uint16\000"
 1451      313600
 1452              	.LASF18:
 1453 022f 41696C65 		.ascii	"Aileron_Enable\000"
 1453      726F6E5F 
 1453      456E6162 
 1453      6C6500
 1454              	.LASF43:
 1455 023e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1455      74657243 
 1455      72697469 
 1455      63616C53 
 1455      65637469 
 1456              	.LASF8:
 1457 0255 756E7369 		.ascii	"unsigned int\000"
 1457      676E6564 
 1457      20696E74 
 1457      00
 1458              	.LASF46:
 1459 0262 47656E65 		.ascii	"Generated_Source\\PSoC5\\Aileron.c\000"
 1459      72617465 
 1459      645F536F 
 1459      75726365 
 1459      5C50536F 
 1460              	.LASF27:
 1461 0283 41696C65 		.ascii	"Aileron_SetInterruptMode\000"
 1461      726F6E5F 
 1461      53657449 
 1461      6E746572 
 1461      72757074 
 1462              	.LASF44:
 1463 029c 43794578 		.ascii	"CyExitCriticalSection\000"
 1463      69744372 
 1463      69746963 
 1463      616C5365 
 1463      6374696F 
 1464              	.LASF36:
 1465 02b2 72657375 		.ascii	"result\000"
 1465      6C7400
 1466              	.LASF29:
 1467 02b9 41696C65 		.ascii	"Aileron_ReadCounter\000"
 1467      726F6E5F 
 1467      52656164 
 1467      436F756E 
 1467      74657200 
 1468              	.LASF38:
 1469 02cd 41696C65 		.ascii	"Aileron_interruptState\000"
 1469      726F6E5F 
 1469      696E7465 
 1469      72727570 
 1469      74537461 
 1470              	.LASF47:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 45


 1471 02e4 433A5C55 		.ascii	"C:\\Users\\Nathan\\Documents\\MyBuilds\\Flight Cont"
 1471      73657273 
 1471      5C4E6174 
 1471      68616E5C 
 1471      446F6375 
 1472 0312 726F6C6C 		.ascii	"roller\\ServoControl.cydsn\000"
 1472      65725C53 
 1472      6572766F 
 1472      436F6E74 
 1472      726F6C2E 
 1473              	.LASF37:
 1474 032c 6374726C 		.ascii	"ctrl\000"
 1474      00
 1475              	.LASF17:
 1476 0331 73697A65 		.ascii	"sizetype\000"
 1476      74797065 
 1476      00
 1477              	.LASF6:
 1478 033a 6C6F6E67 		.ascii	"long long int\000"
 1478      206C6F6E 
 1478      6720696E 
 1478      7400
 1479              	.LASF28:
 1480 0348 696E7465 		.ascii	"interruptMode\000"
 1480      72727570 
 1480      744D6F64 
 1480      6500
 1481              	.LASF2:
 1482 0356 73686F72 		.ascii	"short int\000"
 1482      7420696E 
 1482      7400
 1483              	.LASF21:
 1484 0360 41696C65 		.ascii	"Aileron_WritePeriod\000"
 1484      726F6E5F 
 1484      57726974 
 1484      65506572 
 1484      696F6400 
 1485              	.LASF4:
 1486 0374 6C6F6E67 		.ascii	"long int\000"
 1486      20696E74 
 1486      00
 1487              	.LASF13:
 1488 037d 63686172 		.ascii	"char\000"
 1488      00
 1489              	.LASF16:
 1490 0382 6C6F6E67 		.ascii	"long double\000"
 1490      20646F75 
 1490      626C6500 
 1491              	.LASF0:
 1492 038e 7369676E 		.ascii	"signed char\000"
 1492      65642063 
 1492      68617200 
 1493              	.LASF25:
 1494 039a 636F6D70 		.ascii	"compare\000"
 1494      61726500 
 1495              	.LASF20:
 1496 03a2 41696C65 		.ascii	"Aileron_WriteCounter\000"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccBlSFjV.s 			page 46


 1496      726F6E5F 
 1496      57726974 
 1496      65436F75 
 1496      6E746572 
 1497              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
