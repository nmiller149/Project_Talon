ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPI_Altitude.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPI_Altitude_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	SPI_Altitude_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	SPI_Altitude_Enable, %function
  25              	SPI_Altitude_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\SPI_Altitude.c"
   1:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPI_Altitude.c **** * File Name: SPI_Altitude.c
   3:Generated_Source\PSoC5/SPI_Altitude.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPI_Altitude.c **** *
   5:Generated_Source\PSoC5/SPI_Altitude.c **** * Description:
   6:Generated_Source\PSoC5/SPI_Altitude.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC5/SPI_Altitude.c **** *
   8:Generated_Source\PSoC5/SPI_Altitude.c **** * Note:
   9:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
  10:Generated_Source\PSoC5/SPI_Altitude.c **** *
  11:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPI_Altitude.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPI_Altitude.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPI_Altitude.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPI_Altitude.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPI_Altitude.c **** 
  18:Generated_Source\PSoC5/SPI_Altitude.c **** #include "SPI_Altitude_PVT.h"
  19:Generated_Source\PSoC5/SPI_Altitude.c **** 
  20:Generated_Source\PSoC5/SPI_Altitude.c **** #if(SPI_Altitude_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPI_Altitude.c ****     volatile uint8 SPI_Altitude_txBuffer[SPI_Altitude_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC5/SPI_Altitude.c ****     volatile uint8 SPI_Altitude_txBufferFull;
  23:Generated_Source\PSoC5/SPI_Altitude.c ****     volatile uint8 SPI_Altitude_txBufferRead;
  24:Generated_Source\PSoC5/SPI_Altitude.c ****     volatile uint8 SPI_Altitude_txBufferWrite;
  25:Generated_Source\PSoC5/SPI_Altitude.c **** #endif /* (SPI_Altitude_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC5/SPI_Altitude.c **** 
  27:Generated_Source\PSoC5/SPI_Altitude.c **** #if(SPI_Altitude_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC5/SPI_Altitude.c ****     volatile uint8 SPI_Altitude_rxBuffer[SPI_Altitude_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC5/SPI_Altitude.c ****     volatile uint8 SPI_Altitude_rxBufferFull;
  30:Generated_Source\PSoC5/SPI_Altitude.c ****     volatile uint8 SPI_Altitude_rxBufferRead;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 2


  31:Generated_Source\PSoC5/SPI_Altitude.c ****     volatile uint8 SPI_Altitude_rxBufferWrite;
  32:Generated_Source\PSoC5/SPI_Altitude.c **** #endif /* (SPI_Altitude_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC5/SPI_Altitude.c **** 
  34:Generated_Source\PSoC5/SPI_Altitude.c **** uint8 SPI_Altitude_initVar = 0u;
  35:Generated_Source\PSoC5/SPI_Altitude.c **** 
  36:Generated_Source\PSoC5/SPI_Altitude.c **** volatile uint8 SPI_Altitude_swStatusTx;
  37:Generated_Source\PSoC5/SPI_Altitude.c **** volatile uint8 SPI_Altitude_swStatusRx;
  38:Generated_Source\PSoC5/SPI_Altitude.c **** 
  39:Generated_Source\PSoC5/SPI_Altitude.c **** 
  40:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_Init
  42:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
  43:Generated_Source\PSoC5/SPI_Altitude.c **** *
  44:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
  45:Generated_Source\PSoC5/SPI_Altitude.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC5/SPI_Altitude.c **** *
  47:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
  48:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
  49:Generated_Source\PSoC5/SPI_Altitude.c **** *
  50:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
  51:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
  52:Generated_Source\PSoC5/SPI_Altitude.c **** *
  53:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
  54:Generated_Source\PSoC5/SPI_Altitude.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC5/SPI_Altitude.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC5/SPI_Altitude.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC5/SPI_Altitude.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC5/SPI_Altitude.c **** *
  59:Generated_Source\PSoC5/SPI_Altitude.c **** * Reentrant:
  60:Generated_Source\PSoC5/SPI_Altitude.c **** *  No.
  61:Generated_Source\PSoC5/SPI_Altitude.c **** *
  62:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
  63:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_Init(void) 
  64:Generated_Source\PSoC5/SPI_Altitude.c **** {
  65:Generated_Source\PSoC5/SPI_Altitude.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_COUNTER_PERIOD_REG = SPI_Altitude_BITCTR_INIT;
  67:Generated_Source\PSoC5/SPI_Altitude.c **** 
  68:Generated_Source\PSoC5/SPI_Altitude.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC5/SPI_Altitude.c ****         CyIntDisable         (SPI_Altitude_TX_ISR_NUMBER);
  71:Generated_Source\PSoC5/SPI_Altitude.c ****         CyIntSetPriority     (SPI_Altitude_TX_ISR_NUMBER,  SPI_Altitude_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC5/SPI_Altitude.c ****         (void) CyIntSetVector(SPI_Altitude_TX_ISR_NUMBER, &SPI_Altitude_TX_ISR);
  73:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC5/SPI_Altitude.c **** 
  75:Generated_Source\PSoC5/SPI_Altitude.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC5/SPI_Altitude.c ****         CyIntDisable         (SPI_Altitude_RX_ISR_NUMBER);
  78:Generated_Source\PSoC5/SPI_Altitude.c ****         CyIntSetPriority     (SPI_Altitude_RX_ISR_NUMBER,  SPI_Altitude_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC5/SPI_Altitude.c ****         (void) CyIntSetVector(SPI_Altitude_RX_ISR_NUMBER, &SPI_Altitude_RX_ISR);
  80:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC5/SPI_Altitude.c **** 
  82:Generated_Source\PSoC5/SPI_Altitude.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_ClearFIFO();
  84:Generated_Source\PSoC5/SPI_Altitude.c **** 
  85:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_rxBufferFull  = 0u;
  87:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_rxBufferRead  = 0u;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 3


  88:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_rxBufferWrite = 0u;
  89:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC5/SPI_Altitude.c **** 
  91:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_txBufferFull  = 0u;
  93:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_txBufferRead  = 0u;
  94:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_txBufferWrite = 0u;
  95:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC5/SPI_Altitude.c **** 
  97:Generated_Source\PSoC5/SPI_Altitude.c ****     (void) SPI_Altitude_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  98:Generated_Source\PSoC5/SPI_Altitude.c ****     (void) SPI_Altitude_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  99:Generated_Source\PSoC5/SPI_Altitude.c **** 
 100:Generated_Source\PSoC5/SPI_Altitude.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_TX_STATUS_MASK_REG = SPI_Altitude_TX_INIT_INTERRUPTS_MASK;
 102:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_RX_STATUS_MASK_REG = SPI_Altitude_RX_INIT_INTERRUPTS_MASK;
 103:Generated_Source\PSoC5/SPI_Altitude.c **** }
 104:Generated_Source\PSoC5/SPI_Altitude.c **** 
 105:Generated_Source\PSoC5/SPI_Altitude.c **** 
 106:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_Enable
 108:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 109:Generated_Source\PSoC5/SPI_Altitude.c **** *
 110:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 111:Generated_Source\PSoC5/SPI_Altitude.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC5/SPI_Altitude.c **** *
 113:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 114:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 115:Generated_Source\PSoC5/SPI_Altitude.c **** *
 116:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 117:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 118:Generated_Source\PSoC5/SPI_Altitude.c **** *
 119:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 120:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_Enable(void) 
 121:Generated_Source\PSoC5/SPI_Altitude.c **** {
  28              		.loc 1 121 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 122:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC5/SPI_Altitude.c **** 
 124:Generated_Source\PSoC5/SPI_Altitude.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 124 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 125:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_COUNTER_CONTROL_REG |= SPI_Altitude_CNTR_ENABLE;
  39              		.loc 1 125 0
  40 0006 0D4A     		ldr	r2, .L2
  41 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 126:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_TX_STATUS_ACTL_REG  |= SPI_Altitude_INT_ENABLE;
 127:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_RX_STATUS_ACTL_REG  |= SPI_Altitude_INT_ENABLE;
  42              		.loc 1 127 0
  43 000a 043A     		subs	r2, r2, #4
 125:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_COUNTER_CONTROL_REG |= SPI_Altitude_CNTR_ENABLE;
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 4


  44              		.loc 1 125 0
  45 000c 43F02003 		orr	r3, r3, #32
  46 0010 1371     		strb	r3, [r2, #4]
 126:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_TX_STATUS_ACTL_REG  |= SPI_Altitude_INT_ENABLE;
  47              		.loc 1 126 0
  48 0012 92F80731 		ldrb	r3, [r2, #263]	@ zero_extendqisi2
  49 0016 43F01003 		orr	r3, r3, #16
  50 001a 82F80731 		strb	r3, [r2, #263]
  51              		.loc 1 127 0
  52 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0020 43F01003 		orr	r3, r3, #16
  54 0024 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC5/SPI_Altitude.c ****     CyExitCriticalSection(enableInterrupts);
  55              		.loc 1 128 0
  56 0026 FFF7FEFF 		bl	CyExitCriticalSection
  57              	.LVL1:
 129:Generated_Source\PSoC5/SPI_Altitude.c **** 
 130:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_CLOCK)
 131:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_IntClock_Enable();
  58              		.loc 1 131 0
  59 002a FFF7FEFF 		bl	SPI_Altitude_IntClock_Start
  60              	.LVL2:
  61              	.LBB50:
  62              	.LBB51:
 132:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC5/SPI_Altitude.c **** 
 134:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_EnableTxInt();
 135:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_EnableRxInt();
 136:Generated_Source\PSoC5/SPI_Altitude.c **** }
 137:Generated_Source\PSoC5/SPI_Altitude.c **** 
 138:Generated_Source\PSoC5/SPI_Altitude.c **** 
 139:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 140:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_Start
 141:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 142:Generated_Source\PSoC5/SPI_Altitude.c **** *
 143:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 144:Generated_Source\PSoC5/SPI_Altitude.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC5/SPI_Altitude.c **** *
 146:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 147:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 148:Generated_Source\PSoC5/SPI_Altitude.c **** *
 149:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 150:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 151:Generated_Source\PSoC5/SPI_Altitude.c **** *
 152:Generated_Source\PSoC5/SPI_Altitude.c **** * Global variables:
 153:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC5/SPI_Altitude.c **** *  first function call.
 155:Generated_Source\PSoC5/SPI_Altitude.c **** *
 156:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 157:Generated_Source\PSoC5/SPI_Altitude.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC5/SPI_Altitude.c **** *
 159:Generated_Source\PSoC5/SPI_Altitude.c **** * Reentrant:
 160:Generated_Source\PSoC5/SPI_Altitude.c **** *  No.
 161:Generated_Source\PSoC5/SPI_Altitude.c **** *
 162:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_Start(void) 
 164:Generated_Source\PSoC5/SPI_Altitude.c **** {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 5


 165:Generated_Source\PSoC5/SPI_Altitude.c ****     if(0u == SPI_Altitude_initVar)
 166:Generated_Source\PSoC5/SPI_Altitude.c ****     {
 167:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_Init();
 168:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_initVar = 1u;
 169:Generated_Source\PSoC5/SPI_Altitude.c ****     }
 170:Generated_Source\PSoC5/SPI_Altitude.c **** 
 171:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_Enable();
 172:Generated_Source\PSoC5/SPI_Altitude.c **** }
 173:Generated_Source\PSoC5/SPI_Altitude.c **** 
 174:Generated_Source\PSoC5/SPI_Altitude.c **** 
 175:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_Stop
 177:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 178:Generated_Source\PSoC5/SPI_Altitude.c **** *
 179:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 180:Generated_Source\PSoC5/SPI_Altitude.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC5/SPI_Altitude.c **** *
 182:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 183:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 184:Generated_Source\PSoC5/SPI_Altitude.c **** *
 185:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 186:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 187:Generated_Source\PSoC5/SPI_Altitude.c **** *
 188:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 189:Generated_Source\PSoC5/SPI_Altitude.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC5/SPI_Altitude.c **** *
 191:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 192:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_Stop(void) 
 193:Generated_Source\PSoC5/SPI_Altitude.c **** {
 194:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC5/SPI_Altitude.c **** 
 196:Generated_Source\PSoC5/SPI_Altitude.c ****     enableInterrupts = CyEnterCriticalSection();
 197:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_TX_STATUS_ACTL_REG &= ((uint8) ~SPI_Altitude_INT_ENABLE);
 198:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_RX_STATUS_ACTL_REG &= ((uint8) ~SPI_Altitude_INT_ENABLE);
 199:Generated_Source\PSoC5/SPI_Altitude.c ****     CyExitCriticalSection(enableInterrupts);
 200:Generated_Source\PSoC5/SPI_Altitude.c **** 
 201:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_CLOCK)
 202:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_IntClock_Disable();
 203:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC5/SPI_Altitude.c **** 
 205:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_DisableTxInt();
 206:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_DisableRxInt();
 207:Generated_Source\PSoC5/SPI_Altitude.c **** }
 208:Generated_Source\PSoC5/SPI_Altitude.c **** 
 209:Generated_Source\PSoC5/SPI_Altitude.c **** 
 210:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_EnableTxInt
 212:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 213:Generated_Source\PSoC5/SPI_Altitude.c **** *
 214:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 215:Generated_Source\PSoC5/SPI_Altitude.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC5/SPI_Altitude.c **** *
 217:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 218:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 219:Generated_Source\PSoC5/SPI_Altitude.c **** *
 220:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 221:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 6


 222:Generated_Source\PSoC5/SPI_Altitude.c **** *
 223:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 224:Generated_Source\PSoC5/SPI_Altitude.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC5/SPI_Altitude.c **** *
 226:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 227:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_EnableTxInt(void) 
 228:Generated_Source\PSoC5/SPI_Altitude.c **** {
 229:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC5/SPI_Altitude.c ****         CyIntEnable(SPI_Altitude_TX_ISR_NUMBER);
  63              		.loc 1 230 0
  64 002e 044B     		ldr	r3, .L2+4
  65 0030 0222     		movs	r2, #2
  66 0032 1A60     		str	r2, [r3]
  67              	.LBE51:
  68              	.LBE50:
  69              	.LBB52:
  70              	.LBB53:
 231:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC5/SPI_Altitude.c **** }
 233:Generated_Source\PSoC5/SPI_Altitude.c **** 
 234:Generated_Source\PSoC5/SPI_Altitude.c **** 
 235:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 236:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_EnableRxInt
 237:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 238:Generated_Source\PSoC5/SPI_Altitude.c **** *
 239:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 240:Generated_Source\PSoC5/SPI_Altitude.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC5/SPI_Altitude.c **** *
 242:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 243:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 244:Generated_Source\PSoC5/SPI_Altitude.c **** *
 245:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 246:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 247:Generated_Source\PSoC5/SPI_Altitude.c **** *
 248:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 249:Generated_Source\PSoC5/SPI_Altitude.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC5/SPI_Altitude.c **** *
 251:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_EnableRxInt(void) 
 253:Generated_Source\PSoC5/SPI_Altitude.c **** {
 254:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC5/SPI_Altitude.c ****         CyIntEnable(SPI_Altitude_RX_ISR_NUMBER);
  71              		.loc 1 255 0
  72 0034 0122     		movs	r2, #1
  73 0036 1A60     		str	r2, [r3]
  74 0038 08BD     		pop	{r3, pc}
  75              	.L3:
  76 003a 00BF     		.align	2
  77              	.L2:
  78 003c 98640040 		.word	1073767576
  79 0040 00E100E0 		.word	-536813312
  80              	.LBE53:
  81              	.LBE52:
  82              		.cfi_endproc
  83              	.LFE1:
  84              		.size	SPI_Altitude_Enable, .-SPI_Altitude_Enable
  85              		.section	.text.SPI_Altitude_Stop,"ax",%progbits
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 7


  86              		.align	1
  87              		.global	SPI_Altitude_Stop
  88              		.thumb
  89              		.thumb_func
  90              		.type	SPI_Altitude_Stop, %function
  91              	SPI_Altitude_Stop:
  92              	.LFB3:
 193:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 enableInterrupts;
  93              		.loc 1 193 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 08B5     		push	{r3, lr}
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 3, -8
 100              		.cfi_offset 14, -4
 196:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_TX_STATUS_ACTL_REG &= ((uint8) ~SPI_Altitude_INT_ENABLE);
 101              		.loc 1 196 0
 102 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 103              	.LVL3:
 197:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_RX_STATUS_ACTL_REG &= ((uint8) ~SPI_Altitude_INT_ENABLE);
 104              		.loc 1 197 0
 105 0006 0B4A     		ldr	r2, .L5
 106 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 107 000a 03F0EF03 		and	r3, r3, #239
 108 000e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/SPI_Altitude.c ****     CyExitCriticalSection(enableInterrupts);
 109              		.loc 1 198 0
 110 0010 6FF48373 		mvn	r3, #262
 111 0014 1A44     		add	r2, r2, r3
 112 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 113 0018 03F0EF03 		and	r3, r3, #239
 114 001c 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/SPI_Altitude.c **** 
 115              		.loc 1 199 0
 116 001e FFF7FEFF 		bl	CyExitCriticalSection
 117              	.LVL4:
 202:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_CLOCK) */
 118              		.loc 1 202 0
 119 0022 FFF7FEFF 		bl	SPI_Altitude_IntClock_Stop
 120              	.LVL5:
 121              	.LBB54:
 122              	.LBB55:
 256:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC5/SPI_Altitude.c **** }
 258:Generated_Source\PSoC5/SPI_Altitude.c **** 
 259:Generated_Source\PSoC5/SPI_Altitude.c **** 
 260:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 261:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_DisableTxInt
 262:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 263:Generated_Source\PSoC5/SPI_Altitude.c **** *
 264:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 265:Generated_Source\PSoC5/SPI_Altitude.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC5/SPI_Altitude.c **** *
 267:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 268:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 269:Generated_Source\PSoC5/SPI_Altitude.c **** *
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 8


 270:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 271:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 272:Generated_Source\PSoC5/SPI_Altitude.c **** *
 273:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 274:Generated_Source\PSoC5/SPI_Altitude.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC5/SPI_Altitude.c **** *
 276:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 277:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_DisableTxInt(void) 
 278:Generated_Source\PSoC5/SPI_Altitude.c **** {
 279:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC5/SPI_Altitude.c ****         CyIntDisable(SPI_Altitude_TX_ISR_NUMBER);
 123              		.loc 1 280 0
 124 0026 044B     		ldr	r3, .L5+4
 125 0028 0222     		movs	r2, #2
 126 002a 1A60     		str	r2, [r3]
 127              	.LBE55:
 128              	.LBE54:
 129              	.LBB56:
 130              	.LBB57:
 281:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC5/SPI_Altitude.c **** }
 283:Generated_Source\PSoC5/SPI_Altitude.c **** 
 284:Generated_Source\PSoC5/SPI_Altitude.c **** 
 285:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_DisableRxInt
 287:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 288:Generated_Source\PSoC5/SPI_Altitude.c **** *
 289:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 290:Generated_Source\PSoC5/SPI_Altitude.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC5/SPI_Altitude.c **** *
 292:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 293:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 294:Generated_Source\PSoC5/SPI_Altitude.c **** *
 295:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 296:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 297:Generated_Source\PSoC5/SPI_Altitude.c **** *
 298:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 299:Generated_Source\PSoC5/SPI_Altitude.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC5/SPI_Altitude.c **** *
 301:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_DisableRxInt(void) 
 303:Generated_Source\PSoC5/SPI_Altitude.c **** {
 304:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC5/SPI_Altitude.c ****         CyIntDisable(SPI_Altitude_RX_ISR_NUMBER);
 131              		.loc 1 305 0
 132 002c 0122     		movs	r2, #1
 133 002e 1A60     		str	r2, [r3]
 134 0030 08BD     		pop	{r3, pc}
 135              	.L6:
 136 0032 00BF     		.align	2
 137              	.L5:
 138 0034 9B650040 		.word	1073767835
 139 0038 80E100E0 		.word	-536813184
 140              	.LBE57:
 141              	.LBE56:
 142              		.cfi_endproc
 143              	.LFE3:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 9


 144              		.size	SPI_Altitude_Stop, .-SPI_Altitude_Stop
 145              		.section	.text.SPI_Altitude_EnableTxInt,"ax",%progbits
 146              		.align	1
 147              		.global	SPI_Altitude_EnableTxInt
 148              		.thumb
 149              		.thumb_func
 150              		.type	SPI_Altitude_EnableTxInt, %function
 151              	SPI_Altitude_EnableTxInt:
 152              	.LFB4:
 228:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED)
 153              		.loc 1 228 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 230:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 158              		.loc 1 230 0
 159 0000 014B     		ldr	r3, .L8
 160 0002 0222     		movs	r2, #2
 161 0004 1A60     		str	r2, [r3]
 162 0006 7047     		bx	lr
 163              	.L9:
 164              		.align	2
 165              	.L8:
 166 0008 00E100E0 		.word	-536813312
 167              		.cfi_endproc
 168              	.LFE4:
 169              		.size	SPI_Altitude_EnableTxInt, .-SPI_Altitude_EnableTxInt
 170              		.section	.text.SPI_Altitude_EnableRxInt,"ax",%progbits
 171              		.align	1
 172              		.global	SPI_Altitude_EnableRxInt
 173              		.thumb
 174              		.thumb_func
 175              		.type	SPI_Altitude_EnableRxInt, %function
 176              	SPI_Altitude_EnableRxInt:
 177              	.LFB5:
 253:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED)
 178              		.loc 1 253 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 255:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 183              		.loc 1 255 0
 184 0000 014B     		ldr	r3, .L11
 185 0002 0122     		movs	r2, #1
 186 0004 1A60     		str	r2, [r3]
 187 0006 7047     		bx	lr
 188              	.L12:
 189              		.align	2
 190              	.L11:
 191 0008 00E100E0 		.word	-536813312
 192              		.cfi_endproc
 193              	.LFE5:
 194              		.size	SPI_Altitude_EnableRxInt, .-SPI_Altitude_EnableRxInt
 195              		.section	.text.SPI_Altitude_DisableTxInt,"ax",%progbits
 196              		.align	1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 10


 197              		.global	SPI_Altitude_DisableTxInt
 198              		.thumb
 199              		.thumb_func
 200              		.type	SPI_Altitude_DisableTxInt, %function
 201              	SPI_Altitude_DisableTxInt:
 202              	.LFB6:
 278:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED)
 203              		.loc 1 278 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 280:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 208              		.loc 1 280 0
 209 0000 014B     		ldr	r3, .L14
 210 0002 0222     		movs	r2, #2
 211 0004 1A60     		str	r2, [r3]
 212 0006 7047     		bx	lr
 213              	.L15:
 214              		.align	2
 215              	.L14:
 216 0008 80E100E0 		.word	-536813184
 217              		.cfi_endproc
 218              	.LFE6:
 219              		.size	SPI_Altitude_DisableTxInt, .-SPI_Altitude_DisableTxInt
 220              		.section	.text.SPI_Altitude_DisableRxInt,"ax",%progbits
 221              		.align	1
 222              		.global	SPI_Altitude_DisableRxInt
 223              		.thumb
 224              		.thumb_func
 225              		.type	SPI_Altitude_DisableRxInt, %function
 226              	SPI_Altitude_DisableRxInt:
 227              	.LFB7:
 303:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED)
 228              		.loc 1 303 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233              		.loc 1 305 0
 234 0000 014B     		ldr	r3, .L17
 235 0002 0122     		movs	r2, #1
 236 0004 1A60     		str	r2, [r3]
 237 0006 7047     		bx	lr
 238              	.L18:
 239              		.align	2
 240              	.L17:
 241 0008 80E100E0 		.word	-536813184
 242              		.cfi_endproc
 243              	.LFE7:
 244              		.size	SPI_Altitude_DisableRxInt, .-SPI_Altitude_DisableRxInt
 245              		.section	.text.SPI_Altitude_SetTxInterruptMode,"ax",%progbits
 246              		.align	1
 247              		.global	SPI_Altitude_SetTxInterruptMode
 248              		.thumb
 249              		.thumb_func
 250              		.type	SPI_Altitude_SetTxInterruptMode, %function
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 11


 251              	SPI_Altitude_SetTxInterruptMode:
 252              	.LFB8:
 306:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC5/SPI_Altitude.c **** }
 308:Generated_Source\PSoC5/SPI_Altitude.c **** 
 309:Generated_Source\PSoC5/SPI_Altitude.c **** 
 310:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 311:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_SetTxInterruptMode
 312:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 313:Generated_Source\PSoC5/SPI_Altitude.c **** *
 314:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 315:Generated_Source\PSoC5/SPI_Altitude.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC5/SPI_Altitude.c **** *
 317:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 318:Generated_Source\PSoC5/SPI_Altitude.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC5/SPI_Altitude.c **** *  header file).
 320:Generated_Source\PSoC5/SPI_Altitude.c **** *
 321:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 322:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 323:Generated_Source\PSoC5/SPI_Altitude.c **** *
 324:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 325:Generated_Source\PSoC5/SPI_Altitude.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC5/SPI_Altitude.c **** *
 327:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC5/SPI_Altitude.c **** {
 253              		.loc 1 329 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL6:
 330:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_TX_STATUS_MASK_REG = intSrc;
 259              		.loc 1 330 0
 260 0000 014B     		ldr	r3, .L20
 261 0002 1870     		strb	r0, [r3]
 262 0004 7047     		bx	lr
 263              	.L21:
 264 0006 00BF     		.align	2
 265              	.L20:
 266 0008 8B650040 		.word	1073767819
 267              		.cfi_endproc
 268              	.LFE8:
 269              		.size	SPI_Altitude_SetTxInterruptMode, .-SPI_Altitude_SetTxInterruptMode
 270              		.section	.text.SPI_Altitude_SetRxInterruptMode,"ax",%progbits
 271              		.align	1
 272              		.global	SPI_Altitude_SetRxInterruptMode
 273              		.thumb
 274              		.thumb_func
 275              		.type	SPI_Altitude_SetRxInterruptMode, %function
 276              	SPI_Altitude_SetRxInterruptMode:
 277              	.LFB9:
 331:Generated_Source\PSoC5/SPI_Altitude.c **** }
 332:Generated_Source\PSoC5/SPI_Altitude.c **** 
 333:Generated_Source\PSoC5/SPI_Altitude.c **** 
 334:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 335:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_SetRxInterruptMode
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 12


 336:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 337:Generated_Source\PSoC5/SPI_Altitude.c **** *
 338:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 339:Generated_Source\PSoC5/SPI_Altitude.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC5/SPI_Altitude.c **** *
 341:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 342:Generated_Source\PSoC5/SPI_Altitude.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC5/SPI_Altitude.c **** *  header file).
 344:Generated_Source\PSoC5/SPI_Altitude.c **** *
 345:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 346:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 347:Generated_Source\PSoC5/SPI_Altitude.c **** *
 348:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 349:Generated_Source\PSoC5/SPI_Altitude.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC5/SPI_Altitude.c **** *
 351:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC5/SPI_Altitude.c **** {
 278              		.loc 1 353 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283              	.LVL7:
 354:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_RX_STATUS_MASK_REG  = intSrc;
 284              		.loc 1 354 0
 285 0000 014B     		ldr	r3, .L23
 286 0002 1870     		strb	r0, [r3]
 287 0004 7047     		bx	lr
 288              	.L24:
 289 0006 00BF     		.align	2
 290              	.L23:
 291 0008 84640040 		.word	1073767556
 292              		.cfi_endproc
 293              	.LFE9:
 294              		.size	SPI_Altitude_SetRxInterruptMode, .-SPI_Altitude_SetRxInterruptMode
 295              		.section	.text.SPI_Altitude_ReadTxStatus,"ax",%progbits
 296              		.align	1
 297              		.global	SPI_Altitude_ReadTxStatus
 298              		.thumb
 299              		.thumb_func
 300              		.type	SPI_Altitude_ReadTxStatus, %function
 301              	SPI_Altitude_ReadTxStatus:
 302              	.LFB10:
 355:Generated_Source\PSoC5/SPI_Altitude.c **** }
 356:Generated_Source\PSoC5/SPI_Altitude.c **** 
 357:Generated_Source\PSoC5/SPI_Altitude.c **** 
 358:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 359:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_ReadTxStatus
 360:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 361:Generated_Source\PSoC5/SPI_Altitude.c **** *
 362:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 363:Generated_Source\PSoC5/SPI_Altitude.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC5/SPI_Altitude.c **** *
 365:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 366:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 367:Generated_Source\PSoC5/SPI_Altitude.c **** *
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 13


 368:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 369:Generated_Source\PSoC5/SPI_Altitude.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC5/SPI_Altitude.c **** *
 371:Generated_Source\PSoC5/SPI_Altitude.c **** * Global variables:
 372:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC5/SPI_Altitude.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC5/SPI_Altitude.c **** *
 375:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 376:Generated_Source\PSoC5/SPI_Altitude.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC5/SPI_Altitude.c **** *  detection and flow control.
 378:Generated_Source\PSoC5/SPI_Altitude.c **** *
 379:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
 380:Generated_Source\PSoC5/SPI_Altitude.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC5/SPI_Altitude.c **** *
 382:Generated_Source\PSoC5/SPI_Altitude.c **** * Reentrant:
 383:Generated_Source\PSoC5/SPI_Altitude.c **** *  No.
 384:Generated_Source\PSoC5/SPI_Altitude.c **** *
 385:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 386:Generated_Source\PSoC5/SPI_Altitude.c **** uint8 SPI_Altitude_ReadTxStatus(void) 
 387:Generated_Source\PSoC5/SPI_Altitude.c **** {
 303              		.loc 1 387 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 10B5     		push	{r4, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 4, -8
 310              		.cfi_offset 14, -4
 311              	.LBB58:
 312              	.LBB59:
 280:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 313              		.loc 1 280 0
 314 0002 074B     		ldr	r3, .L26
 315 0004 0222     		movs	r2, #2
 316 0006 1A60     		str	r2, [r3]
 317              	.LBE59:
 318              	.LBE58:
 388:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC5/SPI_Altitude.c **** 
 390:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_DisableTxInt();
 393:Generated_Source\PSoC5/SPI_Altitude.c **** 
 394:Generated_Source\PSoC5/SPI_Altitude.c ****         tmpStatus = SPI_Altitude_GET_STATUS_TX(SPI_Altitude_swStatusTx);
 319              		.loc 1 394 0
 320 0008 0649     		ldr	r1, .L26+4
 321 000a 074B     		ldr	r3, .L26+8
 395:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_swStatusTx = 0u;
 322              		.loc 1 395 0
 323 000c 0024     		movs	r4, #0
 394:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_swStatusTx = 0u;
 324              		.loc 1 394 0
 325 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 326 0010 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 327              	.LVL8:
 328              		.loc 1 395 0
 329 0012 0C70     		strb	r4, [r1]
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 14


 330              	.LBB60:
 331              	.LBB61:
 230:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 332              		.loc 1 230 0
 333 0014 0549     		ldr	r1, .L26+12
 334              	.LBE61:
 335              	.LBE60:
 396:Generated_Source\PSoC5/SPI_Altitude.c **** 
 397:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_EnableTxInt();
 398:Generated_Source\PSoC5/SPI_Altitude.c **** 
 399:Generated_Source\PSoC5/SPI_Altitude.c ****     #else
 400:Generated_Source\PSoC5/SPI_Altitude.c **** 
 401:Generated_Source\PSoC5/SPI_Altitude.c ****         tmpStatus = SPI_Altitude_TX_STATUS_REG;
 402:Generated_Source\PSoC5/SPI_Altitude.c **** 
 403:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC5/SPI_Altitude.c **** 
 405:Generated_Source\PSoC5/SPI_Altitude.c ****     return(tmpStatus);
 336              		.loc 1 405 0
 337 0016 03F00903 		and	r3, r3, #9
 338              	.LVL9:
 339              	.LBB63:
 340              	.LBB62:
 230:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 341              		.loc 1 230 0
 342 001a 0A60     		str	r2, [r1]
 343              	.LBE62:
 344              	.LBE63:
 406:Generated_Source\PSoC5/SPI_Altitude.c **** }
 345              		.loc 1 406 0
 346 001c 1843     		orrs	r0, r0, r3
 347 001e 10BD     		pop	{r4, pc}
 348              	.L27:
 349              		.align	2
 350              	.L26:
 351 0020 80E100E0 		.word	-536813184
 352 0024 00000000 		.word	SPI_Altitude_swStatusTx
 353 0028 6B650040 		.word	1073767787
 354 002c 00E100E0 		.word	-536813312
 355              		.cfi_endproc
 356              	.LFE10:
 357              		.size	SPI_Altitude_ReadTxStatus, .-SPI_Altitude_ReadTxStatus
 358              		.section	.text.SPI_Altitude_ReadRxStatus,"ax",%progbits
 359              		.align	1
 360              		.global	SPI_Altitude_ReadRxStatus
 361              		.thumb
 362              		.thumb_func
 363              		.type	SPI_Altitude_ReadRxStatus, %function
 364              	SPI_Altitude_ReadRxStatus:
 365              	.LFB11:
 407:Generated_Source\PSoC5/SPI_Altitude.c **** 
 408:Generated_Source\PSoC5/SPI_Altitude.c **** 
 409:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 410:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_ReadRxStatus
 411:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 412:Generated_Source\PSoC5/SPI_Altitude.c **** *
 413:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 414:Generated_Source\PSoC5/SPI_Altitude.c **** *  Read the Rx status register for the component.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 15


 415:Generated_Source\PSoC5/SPI_Altitude.c **** *
 416:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 417:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 418:Generated_Source\PSoC5/SPI_Altitude.c **** *
 419:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 420:Generated_Source\PSoC5/SPI_Altitude.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC5/SPI_Altitude.c **** *
 422:Generated_Source\PSoC5/SPI_Altitude.c **** * Global variables:
 423:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC5/SPI_Altitude.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC5/SPI_Altitude.c **** *
 426:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 427:Generated_Source\PSoC5/SPI_Altitude.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC5/SPI_Altitude.c **** *  detection and flow control.
 429:Generated_Source\PSoC5/SPI_Altitude.c **** *
 430:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
 431:Generated_Source\PSoC5/SPI_Altitude.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC5/SPI_Altitude.c **** *
 433:Generated_Source\PSoC5/SPI_Altitude.c **** * Reentrant:
 434:Generated_Source\PSoC5/SPI_Altitude.c **** *  No.
 435:Generated_Source\PSoC5/SPI_Altitude.c **** *
 436:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 437:Generated_Source\PSoC5/SPI_Altitude.c **** uint8 SPI_Altitude_ReadRxStatus(void) 
 438:Generated_Source\PSoC5/SPI_Altitude.c **** {
 366              		.loc 1 438 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370 0000 10B5     		push	{r4, lr}
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 4, -8
 373              		.cfi_offset 14, -4
 374              	.LBB64:
 375              	.LBB65:
 305:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 376              		.loc 1 305 0
 377 0002 074B     		ldr	r3, .L29
 378 0004 0122     		movs	r2, #1
 379 0006 1A60     		str	r2, [r3]
 380              	.LBE65:
 381              	.LBE64:
 439:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC5/SPI_Altitude.c **** 
 441:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_DisableRxInt();
 444:Generated_Source\PSoC5/SPI_Altitude.c **** 
 445:Generated_Source\PSoC5/SPI_Altitude.c ****         tmpStatus = SPI_Altitude_GET_STATUS_RX(SPI_Altitude_swStatusRx);
 382              		.loc 1 445 0
 383 0008 0649     		ldr	r1, .L29+4
 384 000a 074B     		ldr	r3, .L29+8
 446:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_swStatusRx = 0u;
 385              		.loc 1 446 0
 386 000c 0024     		movs	r4, #0
 445:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_swStatusRx = 0u;
 387              		.loc 1 445 0
 388 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 16


 389 0010 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 390              	.LVL10:
 391              		.loc 1 446 0
 392 0012 0C70     		strb	r4, [r1]
 393              	.LBB66:
 394              	.LBB67:
 255:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 395              		.loc 1 255 0
 396 0014 0549     		ldr	r1, .L29+12
 397              	.LBE67:
 398              	.LBE66:
 447:Generated_Source\PSoC5/SPI_Altitude.c **** 
 448:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_EnableRxInt();
 449:Generated_Source\PSoC5/SPI_Altitude.c **** 
 450:Generated_Source\PSoC5/SPI_Altitude.c ****     #else
 451:Generated_Source\PSoC5/SPI_Altitude.c **** 
 452:Generated_Source\PSoC5/SPI_Altitude.c ****         tmpStatus = SPI_Altitude_RX_STATUS_REG;
 453:Generated_Source\PSoC5/SPI_Altitude.c **** 
 454:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC5/SPI_Altitude.c **** 
 456:Generated_Source\PSoC5/SPI_Altitude.c ****     return(tmpStatus);
 399              		.loc 1 456 0
 400 0016 03F04003 		and	r3, r3, #64
 401              	.LVL11:
 402              	.LBB69:
 403              	.LBB68:
 255:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 404              		.loc 1 255 0
 405 001a 0A60     		str	r2, [r1]
 406              	.LBE68:
 407              	.LBE69:
 457:Generated_Source\PSoC5/SPI_Altitude.c **** }
 408              		.loc 1 457 0
 409 001c 1843     		orrs	r0, r0, r3
 410 001e 10BD     		pop	{r4, pc}
 411              	.L30:
 412              		.align	2
 413              	.L29:
 414 0020 80E100E0 		.word	-536813184
 415 0024 00000000 		.word	SPI_Altitude_swStatusRx
 416 0028 64640040 		.word	1073767524
 417 002c 00E100E0 		.word	-536813312
 418              		.cfi_endproc
 419              	.LFE11:
 420              		.size	SPI_Altitude_ReadRxStatus, .-SPI_Altitude_ReadRxStatus
 421              		.section	.text.SPI_Altitude_WriteTxData,"ax",%progbits
 422              		.align	1
 423              		.global	SPI_Altitude_WriteTxData
 424              		.thumb
 425              		.thumb_func
 426              		.type	SPI_Altitude_WriteTxData, %function
 427              	SPI_Altitude_WriteTxData:
 428              	.LFB12:
 458:Generated_Source\PSoC5/SPI_Altitude.c **** 
 459:Generated_Source\PSoC5/SPI_Altitude.c **** 
 460:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 461:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_WriteTxData
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 17


 462:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 463:Generated_Source\PSoC5/SPI_Altitude.c **** *
 464:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 465:Generated_Source\PSoC5/SPI_Altitude.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC5/SPI_Altitude.c **** *
 467:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 468:Generated_Source\PSoC5/SPI_Altitude.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC5/SPI_Altitude.c **** *
 470:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 471:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 472:Generated_Source\PSoC5/SPI_Altitude.c **** *
 473:Generated_Source\PSoC5/SPI_Altitude.c **** * Global variables:
 474:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC5/SPI_Altitude.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_txBuffer[SPI_Altitude_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC5/SPI_Altitude.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC5/SPI_Altitude.c **** *
 482:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 483:Generated_Source\PSoC5/SPI_Altitude.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC5/SPI_Altitude.c **** *
 485:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
 486:Generated_Source\PSoC5/SPI_Altitude.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC5/SPI_Altitude.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC5/SPI_Altitude.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC5/SPI_Altitude.c **** *
 490:Generated_Source\PSoC5/SPI_Altitude.c **** * Reentrant:
 491:Generated_Source\PSoC5/SPI_Altitude.c **** *  No.
 492:Generated_Source\PSoC5/SPI_Altitude.c **** *
 493:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 494:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC5/SPI_Altitude.c **** {
 429              		.loc 1 495 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              	.LVL12:
 434 0000 70B5     		push	{r4, r5, r6, lr}
 435              		.cfi_def_cfa_offset 16
 436              		.cfi_offset 4, -16
 437              		.cfi_offset 5, -12
 438              		.cfi_offset 6, -8
 439              		.cfi_offset 14, -4
 496:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC5/SPI_Altitude.c **** 
 498:Generated_Source\PSoC5/SPI_Altitude.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC5/SPI_Altitude.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC5/SPI_Altitude.c **** 
 501:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC5/SPI_Altitude.c ****         do
 503:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 504:Generated_Source\PSoC5/SPI_Altitude.c ****             tmpTxBufferRead = SPI_Altitude_txBufferRead;
 505:Generated_Source\PSoC5/SPI_Altitude.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC5/SPI_Altitude.c ****             {
 507:Generated_Source\PSoC5/SPI_Altitude.c ****                 tmpTxBufferRead = (SPI_Altitude_TX_BUFFER_SIZE - 1u);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 18


 508:Generated_Source\PSoC5/SPI_Altitude.c ****             }
 509:Generated_Source\PSoC5/SPI_Altitude.c ****             else
 510:Generated_Source\PSoC5/SPI_Altitude.c ****             {
 511:Generated_Source\PSoC5/SPI_Altitude.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC5/SPI_Altitude.c ****             }
 513:Generated_Source\PSoC5/SPI_Altitude.c **** 
 514:Generated_Source\PSoC5/SPI_Altitude.c ****         }while(tmpTxBufferRead == SPI_Altitude_txBufferWrite);
 440              		.loc 1 514 0
 441 0002 2649     		ldr	r1, .L45
 504:Generated_Source\PSoC5/SPI_Altitude.c ****             if(0u == tmpTxBufferRead)
 442              		.loc 1 504 0
 443 0004 264E     		ldr	r6, .L45+4
 444              	.L33:
 445 0006 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 446              	.LVL13:
 447 0008 254C     		ldr	r4, .L45+4
 505:Generated_Source\PSoC5/SPI_Altitude.c ****             {
 448              		.loc 1 505 0
 449 000a 02F0FF03 		and	r3, r2, #255
 450 000e 12B1     		cbz	r2, .L39
 511:Generated_Source\PSoC5/SPI_Altitude.c ****             }
 451              		.loc 1 511 0
 452 0010 013B     		subs	r3, r3, #1
 453 0012 DBB2     		uxtb	r3, r3
 454              	.LVL14:
 455 0014 00E0     		b	.L32
 456              	.LVL15:
 457              	.L39:
 507:Generated_Source\PSoC5/SPI_Altitude.c ****             }
 458              		.loc 1 507 0
 459 0016 0723     		movs	r3, #7
 460              	.LVL16:
 461              	.L32:
 462              		.loc 1 514 0
 463 0018 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 464 001a 204D     		ldr	r5, .L45
 465 001c 9342     		cmp	r3, r2
 466 001e 2B46     		mov	r3, r5
 467              	.LVL17:
 468 0020 F1D0     		beq	.L33
 469              	.LBB70:
 470              	.LBB71:
 280:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 471              		.loc 1 280 0
 472 0022 204A     		ldr	r2, .L45+8
 473 0024 0221     		movs	r1, #2
 474 0026 1160     		str	r1, [r2]
 475              	.LBE71:
 476              	.LBE70:
 515:Generated_Source\PSoC5/SPI_Altitude.c **** 
 516:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_DisableTxInt();
 518:Generated_Source\PSoC5/SPI_Altitude.c **** 
 519:Generated_Source\PSoC5/SPI_Altitude.c ****         tempStatus = SPI_Altitude_GET_STATUS_TX(SPI_Altitude_swStatusTx);
 477              		.loc 1 519 0
 478 0028 1F4A     		ldr	r2, .L45+12
 479 002a 2049     		ldr	r1, .L45+16
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 19


 480 002c 1678     		ldrb	r6, [r2]	@ zero_extendqisi2
 481 002e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 482 0030 02F00902 		and	r2, r2, #9
 483 0034 3243     		orrs	r2, r2, r6
 484              	.LVL18:
 520:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_swStatusTx = tempStatus;
 485              		.loc 1 520 0
 486 0036 0A70     		strb	r2, [r1]
 521:Generated_Source\PSoC5/SPI_Altitude.c **** 
 522:Generated_Source\PSoC5/SPI_Altitude.c **** 
 523:Generated_Source\PSoC5/SPI_Altitude.c ****         if((SPI_Altitude_txBufferRead == SPI_Altitude_txBufferWrite) &&
 487              		.loc 1 523 0
 488 0038 2678     		ldrb	r6, [r4]	@ zero_extendqisi2
 489 003a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 490              	.LVL19:
 491 003c 9642     		cmp	r6, r2
 492 003e 05D1     		bne	.L34
 524:Generated_Source\PSoC5/SPI_Altitude.c ****            (0u != (SPI_Altitude_swStatusTx & SPI_Altitude_STS_TX_FIFO_NOT_FULL)))
 493              		.loc 1 524 0 discriminator 1
 494 0040 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 523:Generated_Source\PSoC5/SPI_Altitude.c ****            (0u != (SPI_Altitude_swStatusTx & SPI_Altitude_STS_TX_FIFO_NOT_FULL)))
 495              		.loc 1 523 0 discriminator 1
 496 0042 5207     		lsls	r2, r2, #29
 497 0044 02D5     		bpl	.L34
 525:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 526:Generated_Source\PSoC5/SPI_Altitude.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC5/SPI_Altitude.c ****             CY_SET_REG8(SPI_Altitude_TXDATA_PTR, txData);
 498              		.loc 1 527 0
 499 0046 1A4B     		ldr	r3, .L45+20
 500 0048 1870     		strb	r0, [r3]
 501              	.LVL20:
 502 004a 23E0     		b	.L35
 503              	.LVL21:
 504              	.L34:
 528:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 529:Generated_Source\PSoC5/SPI_Altitude.c ****         else
 530:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 531:Generated_Source\PSoC5/SPI_Altitude.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC5/SPI_Altitude.c ****             SPI_Altitude_txBufferWrite++;
 505              		.loc 1 532 0
 506 004c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 507 004e 0132     		adds	r2, r2, #1
 508 0050 D2B2     		uxtb	r2, r2
 509 0052 1A70     		strb	r2, [r3]
 510              	.LVL22:
 533:Generated_Source\PSoC5/SPI_Altitude.c ****             if(SPI_Altitude_txBufferWrite >= SPI_Altitude_TX_BUFFER_SIZE)
 511              		.loc 1 533 0
 512 0054 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 513 0056 072A     		cmp	r2, #7
 534:Generated_Source\PSoC5/SPI_Altitude.c ****             {
 535:Generated_Source\PSoC5/SPI_Altitude.c ****                 SPI_Altitude_txBufferWrite = 0u;
 514              		.loc 1 535 0
 515 0058 82BF     		ittt	hi
 516 005a 104A     		ldrhi	r2, .L45
 517 005c 0021     		movhi	r1, #0
 518 005e 1170     		strbhi	r1, [r2]
 536:Generated_Source\PSoC5/SPI_Altitude.c ****             }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 20


 537:Generated_Source\PSoC5/SPI_Altitude.c **** 
 538:Generated_Source\PSoC5/SPI_Altitude.c ****             if(SPI_Altitude_txBufferWrite == SPI_Altitude_txBufferRead)
 519              		.loc 1 538 0
 520 0060 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 521 0062 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 522 0064 0E49     		ldr	r1, .L45+4
 523 0066 9542     		cmp	r5, r2
 524 0068 0BD1     		bne	.L37
 539:Generated_Source\PSoC5/SPI_Altitude.c ****             {
 540:Generated_Source\PSoC5/SPI_Altitude.c ****                 SPI_Altitude_txBufferRead++;
 525              		.loc 1 540 0
 526 006a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 527 006c 0132     		adds	r2, r2, #1
 528 006e D2B2     		uxtb	r2, r2
 529 0070 0A70     		strb	r2, [r1]
 541:Generated_Source\PSoC5/SPI_Altitude.c ****                 if(SPI_Altitude_txBufferRead >= SPI_Altitude_TX_BUFFER_SIZE)
 530              		.loc 1 541 0
 531 0072 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 532 0074 072A     		cmp	r2, #7
 542:Generated_Source\PSoC5/SPI_Altitude.c ****                 {
 543:Generated_Source\PSoC5/SPI_Altitude.c ****                     SPI_Altitude_txBufferRead = 0u;
 533              		.loc 1 543 0
 534 0076 84BF     		itt	hi
 535 0078 0022     		movhi	r2, #0
 536 007a 0A70     		strbhi	r2, [r1]
 544:Generated_Source\PSoC5/SPI_Altitude.c ****                 }
 545:Generated_Source\PSoC5/SPI_Altitude.c ****                 SPI_Altitude_txBufferFull = 1u;
 537              		.loc 1 545 0
 538 007c 0D4A     		ldr	r2, .L45+24
 539 007e 0121     		movs	r1, #1
 540 0080 1170     		strb	r1, [r2]
 541              	.L37:
 546:Generated_Source\PSoC5/SPI_Altitude.c ****             }
 547:Generated_Source\PSoC5/SPI_Altitude.c **** 
 548:Generated_Source\PSoC5/SPI_Altitude.c ****             SPI_Altitude_txBuffer[SPI_Altitude_txBufferWrite] = txData;
 542              		.loc 1 548 0
 543 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 544 0084 0C4A     		ldr	r2, .L45+28
 545 0086 DBB2     		uxtb	r3, r3
 546 0088 D054     		strb	r0, [r2, r3]
 549:Generated_Source\PSoC5/SPI_Altitude.c **** 
 550:Generated_Source\PSoC5/SPI_Altitude.c ****             SPI_Altitude_TX_STATUS_MASK_REG |= SPI_Altitude_STS_TX_FIFO_NOT_FULL;
 547              		.loc 1 550 0
 548 008a 0C4A     		ldr	r2, .L45+32
 549 008c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 550 008e 43F00403 		orr	r3, r3, #4
 551 0092 1370     		strb	r3, [r2]
 552              	.L35:
 553              	.LBB72:
 554              	.LBB73:
 230:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 555              		.loc 1 230 0
 556 0094 0A4B     		ldr	r3, .L45+36
 557 0096 0222     		movs	r2, #2
 558 0098 1A60     		str	r2, [r3]
 559 009a 70BD     		pop	{r4, r5, r6, pc}
 560              	.L46:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 21


 561              		.align	2
 562              	.L45:
 563 009c 00000000 		.word	SPI_Altitude_txBufferWrite
 564 00a0 00000000 		.word	SPI_Altitude_txBufferRead
 565 00a4 80E100E0 		.word	-536813184
 566 00a8 6B650040 		.word	1073767787
 567 00ac 00000000 		.word	SPI_Altitude_swStatusTx
 568 00b0 4B640040 		.word	1073767499
 569 00b4 00000000 		.word	SPI_Altitude_txBufferFull
 570 00b8 00000000 		.word	SPI_Altitude_txBuffer
 571 00bc 8B650040 		.word	1073767819
 572 00c0 00E100E0 		.word	-536813312
 573              	.LBE73:
 574              	.LBE72:
 575              		.cfi_endproc
 576              	.LFE12:
 577              		.size	SPI_Altitude_WriteTxData, .-SPI_Altitude_WriteTxData
 578              		.section	.text.SPI_Altitude_ReadRxData,"ax",%progbits
 579              		.align	1
 580              		.global	SPI_Altitude_ReadRxData
 581              		.thumb
 582              		.thumb_func
 583              		.type	SPI_Altitude_ReadRxData, %function
 584              	SPI_Altitude_ReadRxData:
 585              	.LFB13:
 551:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 552:Generated_Source\PSoC5/SPI_Altitude.c **** 
 553:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_EnableTxInt();
 554:Generated_Source\PSoC5/SPI_Altitude.c **** 
 555:Generated_Source\PSoC5/SPI_Altitude.c ****     #else
 556:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC5/SPI_Altitude.c ****         while(0u == (SPI_Altitude_TX_STATUS_REG & SPI_Altitude_STS_TX_FIFO_NOT_FULL))
 558:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 559:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 560:Generated_Source\PSoC5/SPI_Altitude.c **** 
 561:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC5/SPI_Altitude.c ****         CY_SET_REG8(SPI_Altitude_TXDATA_PTR, txData);
 563:Generated_Source\PSoC5/SPI_Altitude.c **** 
 564:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC5/SPI_Altitude.c **** }
 566:Generated_Source\PSoC5/SPI_Altitude.c **** 
 567:Generated_Source\PSoC5/SPI_Altitude.c **** 
 568:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 569:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_ReadRxData
 570:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 571:Generated_Source\PSoC5/SPI_Altitude.c **** *
 572:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 573:Generated_Source\PSoC5/SPI_Altitude.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC5/SPI_Altitude.c **** *
 575:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 576:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 577:Generated_Source\PSoC5/SPI_Altitude.c **** *
 578:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 579:Generated_Source\PSoC5/SPI_Altitude.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC5/SPI_Altitude.c **** *
 581:Generated_Source\PSoC5/SPI_Altitude.c **** * Global variables:
 582:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_rxBufferWrite - used for the account of the bytes which
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 22


 583:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC5/SPI_Altitude.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_rxBuffer[SPI_Altitude_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC5/SPI_Altitude.c **** *  received data.
 589:Generated_Source\PSoC5/SPI_Altitude.c **** *
 590:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 591:Generated_Source\PSoC5/SPI_Altitude.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC5/SPI_Altitude.c **** *
 593:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
 594:Generated_Source\PSoC5/SPI_Altitude.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC5/SPI_Altitude.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC5/SPI_Altitude.c **** *  ReadByte() function.
 597:Generated_Source\PSoC5/SPI_Altitude.c **** *
 598:Generated_Source\PSoC5/SPI_Altitude.c **** * Reentrant:
 599:Generated_Source\PSoC5/SPI_Altitude.c **** *  No.
 600:Generated_Source\PSoC5/SPI_Altitude.c **** *
 601:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 602:Generated_Source\PSoC5/SPI_Altitude.c **** uint8 SPI_Altitude_ReadRxData(void) 
 603:Generated_Source\PSoC5/SPI_Altitude.c **** {
 586              		.loc 1 603 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591              	.LBB74:
 592              	.LBB75:
 305:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 593              		.loc 1 305 0
 594 0000 104B     		ldr	r3, .L52
 595 0002 0122     		movs	r2, #1
 596 0004 1A60     		str	r2, [r3]
 597              	.LBE75:
 598              	.LBE74:
 604:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 rxData;
 605:Generated_Source\PSoC5/SPI_Altitude.c **** 
 606:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC5/SPI_Altitude.c **** 
 608:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_DisableRxInt();
 610:Generated_Source\PSoC5/SPI_Altitude.c **** 
 611:Generated_Source\PSoC5/SPI_Altitude.c ****         if(SPI_Altitude_rxBufferRead != SPI_Altitude_rxBufferWrite)
 599              		.loc 1 611 0
 600 0006 104B     		ldr	r3, .L52+4
 601 0008 104A     		ldr	r2, .L52+8
 602 000a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 603 000c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 604 000e 9142     		cmp	r1, r2
 605 0010 0FD0     		beq	.L49
 612:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 613:Generated_Source\PSoC5/SPI_Altitude.c ****             if(0u == SPI_Altitude_rxBufferFull)
 606              		.loc 1 613 0
 607 0012 0F4A     		ldr	r2, .L52+12
 608 0014 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 609 0016 01F0FF00 		and	r0, r1, #255
 610 001a 41B9     		cbnz	r1, .L50
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 23


 614:Generated_Source\PSoC5/SPI_Altitude.c ****             {
 615:Generated_Source\PSoC5/SPI_Altitude.c ****                 SPI_Altitude_rxBufferRead++;
 611              		.loc 1 615 0
 612 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 613 001e 0132     		adds	r2, r2, #1
 614 0020 D2B2     		uxtb	r2, r2
 615 0022 1A70     		strb	r2, [r3]
 616:Generated_Source\PSoC5/SPI_Altitude.c ****                 if(SPI_Altitude_rxBufferRead >= SPI_Altitude_RX_BUFFER_SIZE)
 616              		.loc 1 616 0
 617 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 618 0026 072A     		cmp	r2, #7
 619 0028 03D9     		bls	.L49
 617:Generated_Source\PSoC5/SPI_Altitude.c ****                 {
 618:Generated_Source\PSoC5/SPI_Altitude.c ****                     SPI_Altitude_rxBufferRead = 0u;
 620              		.loc 1 618 0
 621 002a 1870     		strb	r0, [r3]
 622 002c 01E0     		b	.L49
 623              	.L50:
 619:Generated_Source\PSoC5/SPI_Altitude.c ****                 }
 620:Generated_Source\PSoC5/SPI_Altitude.c ****             }
 621:Generated_Source\PSoC5/SPI_Altitude.c ****             else
 622:Generated_Source\PSoC5/SPI_Altitude.c ****             {
 623:Generated_Source\PSoC5/SPI_Altitude.c ****                 SPI_Altitude_rxBufferFull = 0u;
 624              		.loc 1 623 0
 625 002e 0021     		movs	r1, #0
 626 0030 1170     		strb	r1, [r2]
 627              	.L49:
 624:Generated_Source\PSoC5/SPI_Altitude.c ****             }
 625:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 626:Generated_Source\PSoC5/SPI_Altitude.c **** 
 627:Generated_Source\PSoC5/SPI_Altitude.c ****         rxData = SPI_Altitude_rxBuffer[SPI_Altitude_rxBufferRead];
 628              		.loc 1 627 0
 629 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 630 0034 074A     		ldr	r2, .L52+16
 631 0036 DBB2     		uxtb	r3, r3
 632 0038 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 633              	.LVL23:
 634              	.LBB76:
 635              	.LBB77:
 255:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 636              		.loc 1 255 0
 637 003a 074B     		ldr	r3, .L52+20
 638 003c 0122     		movs	r2, #1
 639 003e 1A60     		str	r2, [r3]
 640              	.LBE77:
 641              	.LBE76:
 628:Generated_Source\PSoC5/SPI_Altitude.c **** 
 629:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_EnableRxInt();
 630:Generated_Source\PSoC5/SPI_Altitude.c **** 
 631:Generated_Source\PSoC5/SPI_Altitude.c ****     #else
 632:Generated_Source\PSoC5/SPI_Altitude.c **** 
 633:Generated_Source\PSoC5/SPI_Altitude.c ****         rxData = CY_GET_REG8(SPI_Altitude_RXDATA_PTR);
 634:Generated_Source\PSoC5/SPI_Altitude.c **** 
 635:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC5/SPI_Altitude.c **** 
 637:Generated_Source\PSoC5/SPI_Altitude.c ****     return(rxData);
 638:Generated_Source\PSoC5/SPI_Altitude.c **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 24


 642              		.loc 1 638 0
 643 0040 7047     		bx	lr
 644              	.L53:
 645 0042 00BF     		.align	2
 646              	.L52:
 647 0044 80E100E0 		.word	-536813184
 648 0048 00000000 		.word	SPI_Altitude_rxBufferRead
 649 004c 00000000 		.word	SPI_Altitude_rxBufferWrite
 650 0050 00000000 		.word	SPI_Altitude_rxBufferFull
 651 0054 00000000 		.word	SPI_Altitude_rxBuffer
 652 0058 00E100E0 		.word	-536813312
 653              		.cfi_endproc
 654              	.LFE13:
 655              		.size	SPI_Altitude_ReadRxData, .-SPI_Altitude_ReadRxData
 656              		.section	.text.SPI_Altitude_GetRxBufferSize,"ax",%progbits
 657              		.align	1
 658              		.global	SPI_Altitude_GetRxBufferSize
 659              		.thumb
 660              		.thumb_func
 661              		.type	SPI_Altitude_GetRxBufferSize, %function
 662              	SPI_Altitude_GetRxBufferSize:
 663              	.LFB14:
 639:Generated_Source\PSoC5/SPI_Altitude.c **** 
 640:Generated_Source\PSoC5/SPI_Altitude.c **** 
 641:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 642:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_GetRxBufferSize
 643:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 644:Generated_Source\PSoC5/SPI_Altitude.c **** *
 645:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 646:Generated_Source\PSoC5/SPI_Altitude.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC5/SPI_Altitude.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC5/SPI_Altitude.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC5/SPI_Altitude.c **** *
 650:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 651:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 652:Generated_Source\PSoC5/SPI_Altitude.c **** *
 653:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 654:Generated_Source\PSoC5/SPI_Altitude.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC5/SPI_Altitude.c **** *
 656:Generated_Source\PSoC5/SPI_Altitude.c **** * Global variables:
 657:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC5/SPI_Altitude.c **** *
 662:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
 663:Generated_Source\PSoC5/SPI_Altitude.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC5/SPI_Altitude.c **** *
 665:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 666:Generated_Source\PSoC5/SPI_Altitude.c **** uint8 SPI_Altitude_GetRxBufferSize(void) 
 667:Generated_Source\PSoC5/SPI_Altitude.c **** {
 664              		.loc 1 667 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669              	.LBB78:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 25


 670              	.LBB79:
 305:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 671              		.loc 1 305 0
 672 0000 0D4B     		ldr	r3, .L59
 673 0002 0122     		movs	r2, #1
 674 0004 1A60     		str	r2, [r3]
 675              	.LBE79:
 676              	.LBE78:
 668:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 size;
 669:Generated_Source\PSoC5/SPI_Altitude.c **** 
 670:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC5/SPI_Altitude.c **** 
 672:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_DisableRxInt();
 674:Generated_Source\PSoC5/SPI_Altitude.c **** 
 675:Generated_Source\PSoC5/SPI_Altitude.c ****         if(SPI_Altitude_rxBufferRead == SPI_Altitude_rxBufferWrite)
 677              		.loc 1 675 0
 678 0006 0D4A     		ldr	r2, .L59+4
 679 0008 0D4B     		ldr	r3, .L59+8
 680 000a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 681 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 682 000e 8842     		cmp	r0, r1
 683 0010 0DD0     		beq	.L57
 676:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 677:Generated_Source\PSoC5/SPI_Altitude.c ****             size = 0u;
 678:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 679:Generated_Source\PSoC5/SPI_Altitude.c ****         else if(SPI_Altitude_rxBufferRead < SPI_Altitude_rxBufferWrite)
 684              		.loc 1 679 0
 685 0012 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 686 0014 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 687 0016 8842     		cmp	r0, r1
 680:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 681:Generated_Source\PSoC5/SPI_Altitude.c ****             size = (SPI_Altitude_rxBufferWrite - SPI_Altitude_rxBufferRead);
 682:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 683:Generated_Source\PSoC5/SPI_Altitude.c ****         else
 684:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 685:Generated_Source\PSoC5/SPI_Altitude.c ****             size = (SPI_Altitude_RX_BUFFER_SIZE - SPI_Altitude_rxBufferRead) + SPI_Altitude_rxBuffe
 688              		.loc 1 685 0
 689 0018 2BBF     		itete	cs
 690 001a 1878     		ldrbcs	r0, [r3]	@ zero_extendqisi2
 681:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 691              		.loc 1 681 0
 692 001c 1B78     		ldrbcc	r3, [r3]	@ zero_extendqisi2
 693              		.loc 1 685 0
 694 001e 1378     		ldrbcs	r3, [r2]	@ zero_extendqisi2
 681:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 695              		.loc 1 681 0
 696 0020 1078     		ldrbcc	r0, [r2]	@ zero_extendqisi2
 697              		.loc 1 685 0
 698 0022 2ABF     		itet	cs
 699 0024 0830     		addcs	r0, r0, #8
 681:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 700              		.loc 1 681 0
 701 0026 181A     		subcc	r0, r3, r0
 702              		.loc 1 685 0
 703 0028 C01A     		subcs	r0, r0, r3
 704 002a C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 26


 705              	.LVL24:
 706 002c 00E0     		b	.L55
 707              	.LVL25:
 708              	.L57:
 677:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 709              		.loc 1 677 0
 710 002e 0020     		movs	r0, #0
 711              	.L55:
 712              	.LVL26:
 713              	.LBB80:
 714              	.LBB81:
 255:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 715              		.loc 1 255 0
 716 0030 044B     		ldr	r3, .L59+12
 717 0032 0122     		movs	r2, #1
 718 0034 1A60     		str	r2, [r3]
 719              	.LBE81:
 720              	.LBE80:
 686:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 687:Generated_Source\PSoC5/SPI_Altitude.c **** 
 688:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_EnableRxInt();
 689:Generated_Source\PSoC5/SPI_Altitude.c **** 
 690:Generated_Source\PSoC5/SPI_Altitude.c ****     #else
 691:Generated_Source\PSoC5/SPI_Altitude.c **** 
 692:Generated_Source\PSoC5/SPI_Altitude.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC5/SPI_Altitude.c ****         size = (0u != (SPI_Altitude_RX_STATUS_REG & SPI_Altitude_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 694:Generated_Source\PSoC5/SPI_Altitude.c **** 
 695:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC5/SPI_Altitude.c **** 
 697:Generated_Source\PSoC5/SPI_Altitude.c ****     return(size);
 698:Generated_Source\PSoC5/SPI_Altitude.c **** }
 721              		.loc 1 698 0
 722 0036 7047     		bx	lr
 723              	.L60:
 724              		.align	2
 725              	.L59:
 726 0038 80E100E0 		.word	-536813184
 727 003c 00000000 		.word	SPI_Altitude_rxBufferRead
 728 0040 00000000 		.word	SPI_Altitude_rxBufferWrite
 729 0044 00E100E0 		.word	-536813312
 730              		.cfi_endproc
 731              	.LFE14:
 732              		.size	SPI_Altitude_GetRxBufferSize, .-SPI_Altitude_GetRxBufferSize
 733              		.section	.text.SPI_Altitude_GetTxBufferSize,"ax",%progbits
 734              		.align	1
 735              		.global	SPI_Altitude_GetTxBufferSize
 736              		.thumb
 737              		.thumb_func
 738              		.type	SPI_Altitude_GetTxBufferSize, %function
 739              	SPI_Altitude_GetTxBufferSize:
 740              	.LFB15:
 699:Generated_Source\PSoC5/SPI_Altitude.c **** 
 700:Generated_Source\PSoC5/SPI_Altitude.c **** 
 701:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 702:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_GetTxBufferSize
 703:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 704:Generated_Source\PSoC5/SPI_Altitude.c **** *
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 27


 705:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 706:Generated_Source\PSoC5/SPI_Altitude.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC5/SPI_Altitude.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC5/SPI_Altitude.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC5/SPI_Altitude.c **** *  Software Buffer.
 710:Generated_Source\PSoC5/SPI_Altitude.c **** *
 711:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 712:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 713:Generated_Source\PSoC5/SPI_Altitude.c **** *
 714:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 715:Generated_Source\PSoC5/SPI_Altitude.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC5/SPI_Altitude.c **** *
 717:Generated_Source\PSoC5/SPI_Altitude.c **** * Global variables:
 718:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC5/SPI_Altitude.c **** *
 723:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
 724:Generated_Source\PSoC5/SPI_Altitude.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC5/SPI_Altitude.c **** *
 726:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPI_Altitude.c **** uint8  SPI_Altitude_GetTxBufferSize(void) 
 728:Generated_Source\PSoC5/SPI_Altitude.c **** {
 741              		.loc 1 728 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746              	.LBB82:
 747              	.LBB83:
 280:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 748              		.loc 1 280 0
 749 0000 0D4B     		ldr	r3, .L66
 750 0002 0222     		movs	r2, #2
 751 0004 1A60     		str	r2, [r3]
 752              	.LBE83:
 753              	.LBE82:
 729:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPI_Altitude.c **** 
 731:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_DisableTxInt();
 734:Generated_Source\PSoC5/SPI_Altitude.c **** 
 735:Generated_Source\PSoC5/SPI_Altitude.c ****         if(SPI_Altitude_txBufferRead == SPI_Altitude_txBufferWrite)
 754              		.loc 1 735 0
 755 0006 0D4A     		ldr	r2, .L66+4
 756 0008 0D4B     		ldr	r3, .L66+8
 757 000a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 758 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 759 000e 8842     		cmp	r0, r1
 760 0010 0DD0     		beq	.L64
 736:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 737:Generated_Source\PSoC5/SPI_Altitude.c ****             size = 0u;
 738:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 739:Generated_Source\PSoC5/SPI_Altitude.c ****         else if(SPI_Altitude_txBufferRead < SPI_Altitude_txBufferWrite)
 761              		.loc 1 739 0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 28


 762 0012 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 763 0014 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 764 0016 8842     		cmp	r0, r1
 740:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 741:Generated_Source\PSoC5/SPI_Altitude.c ****             size = (SPI_Altitude_txBufferWrite - SPI_Altitude_txBufferRead);
 742:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 743:Generated_Source\PSoC5/SPI_Altitude.c ****         else
 744:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 745:Generated_Source\PSoC5/SPI_Altitude.c ****             size = (SPI_Altitude_TX_BUFFER_SIZE - SPI_Altitude_txBufferRead) + SPI_Altitude_txBuffe
 765              		.loc 1 745 0
 766 0018 2BBF     		itete	cs
 767 001a 1878     		ldrbcs	r0, [r3]	@ zero_extendqisi2
 741:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 768              		.loc 1 741 0
 769 001c 1B78     		ldrbcc	r3, [r3]	@ zero_extendqisi2
 770              		.loc 1 745 0
 771 001e 1378     		ldrbcs	r3, [r2]	@ zero_extendqisi2
 741:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 772              		.loc 1 741 0
 773 0020 1078     		ldrbcc	r0, [r2]	@ zero_extendqisi2
 774              		.loc 1 745 0
 775 0022 2ABF     		itet	cs
 776 0024 0830     		addcs	r0, r0, #8
 741:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 777              		.loc 1 741 0
 778 0026 181A     		subcc	r0, r3, r0
 779              		.loc 1 745 0
 780 0028 C01A     		subcs	r0, r0, r3
 781 002a C0B2     		uxtb	r0, r0
 782              	.LVL27:
 783 002c 00E0     		b	.L62
 784              	.LVL28:
 785              	.L64:
 737:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 786              		.loc 1 737 0
 787 002e 0020     		movs	r0, #0
 788              	.L62:
 789              	.LVL29:
 790              	.LBB84:
 791              	.LBB85:
 230:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 792              		.loc 1 230 0
 793 0030 044B     		ldr	r3, .L66+12
 794 0032 0222     		movs	r2, #2
 795 0034 1A60     		str	r2, [r3]
 796              	.LBE85:
 797              	.LBE84:
 746:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 747:Generated_Source\PSoC5/SPI_Altitude.c **** 
 748:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_EnableTxInt();
 749:Generated_Source\PSoC5/SPI_Altitude.c **** 
 750:Generated_Source\PSoC5/SPI_Altitude.c ****     #else
 751:Generated_Source\PSoC5/SPI_Altitude.c **** 
 752:Generated_Source\PSoC5/SPI_Altitude.c ****         size = SPI_Altitude_TX_STATUS_REG;
 753:Generated_Source\PSoC5/SPI_Altitude.c **** 
 754:Generated_Source\PSoC5/SPI_Altitude.c ****         if(0u != (size & SPI_Altitude_STS_TX_FIFO_EMPTY))
 755:Generated_Source\PSoC5/SPI_Altitude.c ****         {
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 29


 756:Generated_Source\PSoC5/SPI_Altitude.c ****             size = 0u;
 757:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 758:Generated_Source\PSoC5/SPI_Altitude.c ****         else if(0u != (size & SPI_Altitude_STS_TX_FIFO_NOT_FULL))
 759:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 760:Generated_Source\PSoC5/SPI_Altitude.c ****             size = 1u;
 761:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 762:Generated_Source\PSoC5/SPI_Altitude.c ****         else
 763:Generated_Source\PSoC5/SPI_Altitude.c ****         {
 764:Generated_Source\PSoC5/SPI_Altitude.c ****             size = SPI_Altitude_FIFO_SIZE;
 765:Generated_Source\PSoC5/SPI_Altitude.c ****         }
 766:Generated_Source\PSoC5/SPI_Altitude.c **** 
 767:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC5/SPI_Altitude.c **** 
 769:Generated_Source\PSoC5/SPI_Altitude.c ****     return(size);
 770:Generated_Source\PSoC5/SPI_Altitude.c **** }
 798              		.loc 1 770 0
 799 0036 7047     		bx	lr
 800              	.L67:
 801              		.align	2
 802              	.L66:
 803 0038 80E100E0 		.word	-536813184
 804 003c 00000000 		.word	SPI_Altitude_txBufferRead
 805 0040 00000000 		.word	SPI_Altitude_txBufferWrite
 806 0044 00E100E0 		.word	-536813312
 807              		.cfi_endproc
 808              	.LFE15:
 809              		.size	SPI_Altitude_GetTxBufferSize, .-SPI_Altitude_GetTxBufferSize
 810              		.section	.text.SPI_Altitude_ClearRxBuffer,"ax",%progbits
 811              		.align	1
 812              		.global	SPI_Altitude_ClearRxBuffer
 813              		.thumb
 814              		.thumb_func
 815              		.type	SPI_Altitude_ClearRxBuffer, %function
 816              	SPI_Altitude_ClearRxBuffer:
 817              	.LFB16:
 771:Generated_Source\PSoC5/SPI_Altitude.c **** 
 772:Generated_Source\PSoC5/SPI_Altitude.c **** 
 773:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 774:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_ClearRxBuffer
 775:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 776:Generated_Source\PSoC5/SPI_Altitude.c **** *
 777:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 778:Generated_Source\PSoC5/SPI_Altitude.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC5/SPI_Altitude.c **** *
 780:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 781:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 782:Generated_Source\PSoC5/SPI_Altitude.c **** *
 783:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 784:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 785:Generated_Source\PSoC5/SPI_Altitude.c **** *
 786:Generated_Source\PSoC5/SPI_Altitude.c **** * Global variables:
 787:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC5/SPI_Altitude.c **** *  call - resets to zero.
 790:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC5/SPI_Altitude.c **** *  resets to zero.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 30


 793:Generated_Source\PSoC5/SPI_Altitude.c **** *
 794:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 795:Generated_Source\PSoC5/SPI_Altitude.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC5/SPI_Altitude.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC5/SPI_Altitude.c **** *  remained in the RAM.
 798:Generated_Source\PSoC5/SPI_Altitude.c **** *
 799:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
 800:Generated_Source\PSoC5/SPI_Altitude.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC5/SPI_Altitude.c **** *
 802:Generated_Source\PSoC5/SPI_Altitude.c **** * Reentrant:
 803:Generated_Source\PSoC5/SPI_Altitude.c **** *  No.
 804:Generated_Source\PSoC5/SPI_Altitude.c **** *
 805:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_ClearRxBuffer(void) 
 807:Generated_Source\PSoC5/SPI_Altitude.c **** {
 818              		.loc 1 807 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 808:Generated_Source\PSoC5/SPI_Altitude.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC5/SPI_Altitude.c ****     while(0u !=(SPI_Altitude_RX_STATUS_REG & SPI_Altitude_STS_RX_FIFO_NOT_EMPTY))
 823              		.loc 1 809 0
 824 0000 0A49     		ldr	r1, .L72
 810:Generated_Source\PSoC5/SPI_Altitude.c ****     {
 811:Generated_Source\PSoC5/SPI_Altitude.c ****         (void) CY_GET_REG8(SPI_Altitude_RXDATA_PTR);
 825              		.loc 1 811 0
 826 0002 0B48     		ldr	r0, .L72+4
 827              	.L69:
 809:Generated_Source\PSoC5/SPI_Altitude.c ****     {
 828              		.loc 1 809 0
 829 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 830 0006 03F02003 		and	r3, r3, #32
 831 000a 03F0FF02 		and	r2, r3, #255
 832 000e 0BB1     		cbz	r3, .L71
 833              		.loc 1 811 0
 834 0010 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 835 0012 F7E7     		b	.L69
 836              	.L71:
 837              	.LBB86:
 838              	.LBB87:
 305:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 839              		.loc 1 305 0
 840 0014 0749     		ldr	r1, .L72+8
 841 0016 0123     		movs	r3, #1
 842 0018 0B60     		str	r3, [r1]
 843              	.LBE87:
 844              	.LBE86:
 812:Generated_Source\PSoC5/SPI_Altitude.c ****     }
 813:Generated_Source\PSoC5/SPI_Altitude.c **** 
 814:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_DisableRxInt();
 817:Generated_Source\PSoC5/SPI_Altitude.c **** 
 818:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_rxBufferFull  = 0u;
 845              		.loc 1 818 0
 846 001a 0749     		ldr	r1, .L72+12
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 31


 847 001c 0A70     		strb	r2, [r1]
 819:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_rxBufferRead  = 0u;
 848              		.loc 1 819 0
 849 001e 0749     		ldr	r1, .L72+16
 850 0020 0A70     		strb	r2, [r1]
 820:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_rxBufferWrite = 0u;
 851              		.loc 1 820 0
 852 0022 0749     		ldr	r1, .L72+20
 853 0024 0A70     		strb	r2, [r1]
 854              	.LBB88:
 855              	.LBB89:
 255:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 856              		.loc 1 255 0
 857 0026 074A     		ldr	r2, .L72+24
 858 0028 1360     		str	r3, [r2]
 859 002a 7047     		bx	lr
 860              	.L73:
 861              		.align	2
 862              	.L72:
 863 002c 64640040 		.word	1073767524
 864 0030 5B640040 		.word	1073767515
 865 0034 80E100E0 		.word	-536813184
 866 0038 00000000 		.word	SPI_Altitude_rxBufferFull
 867 003c 00000000 		.word	SPI_Altitude_rxBufferRead
 868 0040 00000000 		.word	SPI_Altitude_rxBufferWrite
 869 0044 00E100E0 		.word	-536813312
 870              	.LBE89:
 871              	.LBE88:
 872              		.cfi_endproc
 873              	.LFE16:
 874              		.size	SPI_Altitude_ClearRxBuffer, .-SPI_Altitude_ClearRxBuffer
 875              		.section	.text.SPI_Altitude_ClearTxBuffer,"ax",%progbits
 876              		.align	1
 877              		.global	SPI_Altitude_ClearTxBuffer
 878              		.thumb
 879              		.thumb_func
 880              		.type	SPI_Altitude_ClearTxBuffer, %function
 881              	SPI_Altitude_ClearTxBuffer:
 882              	.LFB17:
 821:Generated_Source\PSoC5/SPI_Altitude.c **** 
 822:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_EnableRxInt();
 823:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC5/SPI_Altitude.c **** }
 825:Generated_Source\PSoC5/SPI_Altitude.c **** 
 826:Generated_Source\PSoC5/SPI_Altitude.c **** 
 827:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 828:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_ClearTxBuffer
 829:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 830:Generated_Source\PSoC5/SPI_Altitude.c **** *
 831:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 832:Generated_Source\PSoC5/SPI_Altitude.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC5/SPI_Altitude.c **** *
 834:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 835:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 836:Generated_Source\PSoC5/SPI_Altitude.c **** *
 837:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 838:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 32


 839:Generated_Source\PSoC5/SPI_Altitude.c **** *
 840:Generated_Source\PSoC5/SPI_Altitude.c **** * Global variables:
 841:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC5/SPI_Altitude.c **** *  call - resets to zero.
 844:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC5/SPI_Altitude.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC5/SPI_Altitude.c **** *  resets to zero.
 847:Generated_Source\PSoC5/SPI_Altitude.c **** *
 848:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
 849:Generated_Source\PSoC5/SPI_Altitude.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC5/SPI_Altitude.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC5/SPI_Altitude.c **** *  remained in the RAM.
 852:Generated_Source\PSoC5/SPI_Altitude.c **** *
 853:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
 854:Generated_Source\PSoC5/SPI_Altitude.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC5/SPI_Altitude.c **** *  overwritten.
 856:Generated_Source\PSoC5/SPI_Altitude.c **** *
 857:Generated_Source\PSoC5/SPI_Altitude.c **** * Reentrant:
 858:Generated_Source\PSoC5/SPI_Altitude.c **** *  No.
 859:Generated_Source\PSoC5/SPI_Altitude.c **** *
 860:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 861:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_ClearTxBuffer(void) 
 862:Generated_Source\PSoC5/SPI_Altitude.c **** {
 883              		.loc 1 862 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887 0000 08B5     		push	{r3, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 3, -8
 890              		.cfi_offset 14, -4
 863:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC5/SPI_Altitude.c **** 
 865:Generated_Source\PSoC5/SPI_Altitude.c ****     enableInterrupts = CyEnterCriticalSection();
 891              		.loc 1 865 0
 892 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 893              	.LVL30:
 866:Generated_Source\PSoC5/SPI_Altitude.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_Altitude_TX_FIFO_CLR);
 894              		.loc 1 867 0
 895 0006 0E4B     		ldr	r3, .L75
 896 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 897 000a 42F00102 		orr	r2, r2, #1
 898 000e 1A70     		strb	r2, [r3]
 868:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_Altitude_TX_FIFO_CLR);
 899              		.loc 1 868 0
 900 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 901 0012 02F0FE02 		and	r2, r2, #254
 902 0016 1A70     		strb	r2, [r3]
 869:Generated_Source\PSoC5/SPI_Altitude.c **** 
 870:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_Altitude_TX_FIFO_CLR);
 873:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_Altitude_TX_FIFO_CLR);
 874:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC5/SPI_Altitude.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 33


 903              		.loc 1 875 0
 904 0018 FFF7FEFF 		bl	CyExitCriticalSection
 905              	.LVL31:
 906              	.LBB90:
 907              	.LBB91:
 280:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 908              		.loc 1 280 0
 909 001c 094B     		ldr	r3, .L75+4
 910 001e 0222     		movs	r2, #2
 911              	.LBE91:
 912              	.LBE90:
 876:Generated_Source\PSoC5/SPI_Altitude.c **** 
 877:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_DisableTxInt();
 880:Generated_Source\PSoC5/SPI_Altitude.c **** 
 881:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_txBufferFull  = 0u;
 913              		.loc 1 881 0
 914 0020 0949     		ldr	r1, .L75+8
 915              	.LBB93:
 916              	.LBB92:
 280:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 917              		.loc 1 280 0
 918 0022 1A60     		str	r2, [r3]
 919              	.LBE92:
 920              	.LBE93:
 921              		.loc 1 881 0
 922 0024 0023     		movs	r3, #0
 923 0026 0B70     		strb	r3, [r1]
 882:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_txBufferRead  = 0u;
 924              		.loc 1 882 0
 925 0028 0849     		ldr	r1, .L75+12
 926 002a 0B70     		strb	r3, [r1]
 883:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_txBufferWrite = 0u;
 927              		.loc 1 883 0
 928 002c 0849     		ldr	r1, .L75+16
 929 002e 0B70     		strb	r3, [r1]
 884:Generated_Source\PSoC5/SPI_Altitude.c **** 
 885:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_TX_STATUS_MASK_REG &= ((uint8) ~SPI_Altitude_STS_TX_FIFO_NOT_FULL);
 930              		.loc 1 886 0
 931 0030 0849     		ldr	r1, .L75+20
 932 0032 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 933 0034 03F0FB03 		and	r3, r3, #251
 934 0038 0B70     		strb	r3, [r1]
 935              	.LBB94:
 936              	.LBB95:
 230:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 937              		.loc 1 230 0
 938 003a 074B     		ldr	r3, .L75+24
 939 003c 1A60     		str	r2, [r3]
 940 003e 08BD     		pop	{r3, pc}
 941              	.L76:
 942              		.align	2
 943              	.L75:
 944 0040 9B640040 		.word	1073767579
 945 0044 80E100E0 		.word	-536813184
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 34


 946 0048 00000000 		.word	SPI_Altitude_txBufferFull
 947 004c 00000000 		.word	SPI_Altitude_txBufferRead
 948 0050 00000000 		.word	SPI_Altitude_txBufferWrite
 949 0054 8B650040 		.word	1073767819
 950 0058 00E100E0 		.word	-536813312
 951              	.LBE95:
 952              	.LBE94:
 953              		.cfi_endproc
 954              	.LFE17:
 955              		.size	SPI_Altitude_ClearTxBuffer, .-SPI_Altitude_ClearTxBuffer
 956              		.section	.text.SPI_Altitude_PutArray,"ax",%progbits
 957              		.align	1
 958              		.global	SPI_Altitude_PutArray
 959              		.thumb
 960              		.thumb_func
 961              		.type	SPI_Altitude_PutArray, %function
 962              	SPI_Altitude_PutArray:
 963              	.LFB18:
 887:Generated_Source\PSoC5/SPI_Altitude.c **** 
 888:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_EnableTxInt();
 889:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC5/SPI_Altitude.c **** }
 891:Generated_Source\PSoC5/SPI_Altitude.c **** 
 892:Generated_Source\PSoC5/SPI_Altitude.c **** 
 893:Generated_Source\PSoC5/SPI_Altitude.c **** #if(0u != SPI_Altitude_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC5/SPI_Altitude.c ****     /*******************************************************************************
 895:Generated_Source\PSoC5/SPI_Altitude.c ****     * Function Name: SPI_Altitude_TxEnable
 896:Generated_Source\PSoC5/SPI_Altitude.c ****     ********************************************************************************
 897:Generated_Source\PSoC5/SPI_Altitude.c ****     *
 898:Generated_Source\PSoC5/SPI_Altitude.c ****     * Summary:
 899:Generated_Source\PSoC5/SPI_Altitude.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC5/SPI_Altitude.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC5/SPI_Altitude.c ****     *
 902:Generated_Source\PSoC5/SPI_Altitude.c ****     * Parameters:
 903:Generated_Source\PSoC5/SPI_Altitude.c ****     *  None.
 904:Generated_Source\PSoC5/SPI_Altitude.c ****     *
 905:Generated_Source\PSoC5/SPI_Altitude.c ****     * Return:
 906:Generated_Source\PSoC5/SPI_Altitude.c ****     *  None.
 907:Generated_Source\PSoC5/SPI_Altitude.c ****     *
 908:Generated_Source\PSoC5/SPI_Altitude.c ****     *******************************************************************************/
 909:Generated_Source\PSoC5/SPI_Altitude.c ****     void SPI_Altitude_TxEnable(void) 
 910:Generated_Source\PSoC5/SPI_Altitude.c ****     {
 911:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_CONTROL_REG |= SPI_Altitude_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC5/SPI_Altitude.c ****     }
 913:Generated_Source\PSoC5/SPI_Altitude.c **** 
 914:Generated_Source\PSoC5/SPI_Altitude.c **** 
 915:Generated_Source\PSoC5/SPI_Altitude.c ****     /*******************************************************************************
 916:Generated_Source\PSoC5/SPI_Altitude.c ****     * Function Name: SPI_Altitude_TxDisable
 917:Generated_Source\PSoC5/SPI_Altitude.c ****     ********************************************************************************
 918:Generated_Source\PSoC5/SPI_Altitude.c ****     *
 919:Generated_Source\PSoC5/SPI_Altitude.c ****     * Summary:
 920:Generated_Source\PSoC5/SPI_Altitude.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC5/SPI_Altitude.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC5/SPI_Altitude.c ****     *
 923:Generated_Source\PSoC5/SPI_Altitude.c ****     * Parameters:
 924:Generated_Source\PSoC5/SPI_Altitude.c ****     *  None.
 925:Generated_Source\PSoC5/SPI_Altitude.c ****     *
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 35


 926:Generated_Source\PSoC5/SPI_Altitude.c ****     * Return:
 927:Generated_Source\PSoC5/SPI_Altitude.c ****     *  None.
 928:Generated_Source\PSoC5/SPI_Altitude.c ****     *
 929:Generated_Source\PSoC5/SPI_Altitude.c ****     *******************************************************************************/
 930:Generated_Source\PSoC5/SPI_Altitude.c ****     void SPI_Altitude_TxDisable(void) 
 931:Generated_Source\PSoC5/SPI_Altitude.c ****     {
 932:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_CONTROL_REG &= ((uint8) ~SPI_Altitude_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC5/SPI_Altitude.c ****     }
 934:Generated_Source\PSoC5/SPI_Altitude.c **** 
 935:Generated_Source\PSoC5/SPI_Altitude.c **** #endif /* (0u != SPI_Altitude_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC5/SPI_Altitude.c **** 
 937:Generated_Source\PSoC5/SPI_Altitude.c **** 
 938:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 939:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_PutArray
 940:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 941:Generated_Source\PSoC5/SPI_Altitude.c **** *
 942:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 943:Generated_Source\PSoC5/SPI_Altitude.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC5/SPI_Altitude.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC5/SPI_Altitude.c **** *
 946:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 947:Generated_Source\PSoC5/SPI_Altitude.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC5/SPI_Altitude.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC5/SPI_Altitude.c **** *
 950:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 951:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 952:Generated_Source\PSoC5/SPI_Altitude.c **** *
 953:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
 954:Generated_Source\PSoC5/SPI_Altitude.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC5/SPI_Altitude.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC5/SPI_Altitude.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC5/SPI_Altitude.c **** *
 958:Generated_Source\PSoC5/SPI_Altitude.c **** * Reentrant:
 959:Generated_Source\PSoC5/SPI_Altitude.c **** *  No.
 960:Generated_Source\PSoC5/SPI_Altitude.c **** *
 961:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 962:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC5/SPI_Altitude.c ****                                                                           
 964:Generated_Source\PSoC5/SPI_Altitude.c **** {
 964              		.loc 1 964 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              	.LVL32:
 969 0000 38B5     		push	{r3, r4, r5, lr}
 970              		.cfi_def_cfa_offset 16
 971              		.cfi_offset 3, -16
 972              		.cfi_offset 4, -12
 973              		.cfi_offset 5, -8
 974              		.cfi_offset 14, -4
 975              		.loc 1 964 0
 976 0002 0C46     		mov	r4, r1
 977 0004 451E     		subs	r5, r0, #1
 978              	.LVL33:
 979              	.L78:
 965:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC5/SPI_Altitude.c **** 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 36


 967:Generated_Source\PSoC5/SPI_Altitude.c ****     bufIndex = 0u;
 968:Generated_Source\PSoC5/SPI_Altitude.c **** 
 969:Generated_Source\PSoC5/SPI_Altitude.c ****     while(byteCount > 0u)
 980              		.loc 1 969 0
 981 0006 34B1     		cbz	r4, .L80
 970:Generated_Source\PSoC5/SPI_Altitude.c ****     {
 971:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_WriteTxData(buffer[bufIndex]);
 982              		.loc 1 971 0
 983 0008 15F8010F 		ldrb	r0, [r5, #1]!	@ zero_extendqisi2
 984              	.LVL34:
 972:Generated_Source\PSoC5/SPI_Altitude.c ****         bufIndex++;
 973:Generated_Source\PSoC5/SPI_Altitude.c ****         byteCount--;
 985              		.loc 1 973 0
 986 000c 013C     		subs	r4, r4, #1
 987              	.LVL35:
 971:Generated_Source\PSoC5/SPI_Altitude.c ****         bufIndex++;
 988              		.loc 1 971 0
 989 000e FFF7FEFF 		bl	SPI_Altitude_WriteTxData
 990              	.LVL36:
 991              		.loc 1 973 0
 992 0012 E4B2     		uxtb	r4, r4
 993              	.LVL37:
 994 0014 F7E7     		b	.L78
 995              	.L80:
 974:Generated_Source\PSoC5/SPI_Altitude.c ****     }
 975:Generated_Source\PSoC5/SPI_Altitude.c **** }
 996              		.loc 1 975 0
 997 0016 38BD     		pop	{r3, r4, r5, pc}
 998              		.cfi_endproc
 999              	.LFE18:
 1000              		.size	SPI_Altitude_PutArray, .-SPI_Altitude_PutArray
 1001              		.section	.text.SPI_Altitude_ClearFIFO,"ax",%progbits
 1002              		.align	1
 1003              		.global	SPI_Altitude_ClearFIFO
 1004              		.thumb
 1005              		.thumb_func
 1006              		.type	SPI_Altitude_ClearFIFO, %function
 1007              	SPI_Altitude_ClearFIFO:
 1008              	.LFB19:
 976:Generated_Source\PSoC5/SPI_Altitude.c **** 
 977:Generated_Source\PSoC5/SPI_Altitude.c **** 
 978:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
 979:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_ClearFIFO
 980:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
 981:Generated_Source\PSoC5/SPI_Altitude.c **** *
 982:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
 983:Generated_Source\PSoC5/SPI_Altitude.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC5/SPI_Altitude.c **** *
 985:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
 986:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 987:Generated_Source\PSoC5/SPI_Altitude.c **** *
 988:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
 989:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
 990:Generated_Source\PSoC5/SPI_Altitude.c **** *
 991:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
 992:Generated_Source\PSoC5/SPI_Altitude.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC5/SPI_Altitude.c **** *
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 37


 994:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_ClearFIFO(void) 
 996:Generated_Source\PSoC5/SPI_Altitude.c **** {
 1009              		.loc 1 996 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013 0000 08B5     		push	{r3, lr}
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 3, -8
 1016              		.cfi_offset 14, -4
 997:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC5/SPI_Altitude.c **** 
 999:Generated_Source\PSoC5/SPI_Altitude.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC5/SPI_Altitude.c ****     while(0u !=(SPI_Altitude_RX_STATUS_REG & SPI_Altitude_STS_RX_FIFO_NOT_EMPTY))
 1017              		.loc 1 1000 0
 1018 0002 0B4A     		ldr	r2, .L85
1001:Generated_Source\PSoC5/SPI_Altitude.c ****     {
1002:Generated_Source\PSoC5/SPI_Altitude.c ****         (void) CY_GET_REG8(SPI_Altitude_RXDATA_PTR);
 1019              		.loc 1 1002 0
 1020 0004 0B49     		ldr	r1, .L85+4
 1021              	.L82:
1000:Generated_Source\PSoC5/SPI_Altitude.c ****     {
 1022              		.loc 1 1000 0
 1023 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1024 0008 9B06     		lsls	r3, r3, #26
 1025 000a 01D5     		bpl	.L84
 1026              		.loc 1 1002 0
 1027 000c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1028 000e FAE7     		b	.L82
 1029              	.L84:
1003:Generated_Source\PSoC5/SPI_Altitude.c ****     }
1004:Generated_Source\PSoC5/SPI_Altitude.c **** 
1005:Generated_Source\PSoC5/SPI_Altitude.c ****     enableInterrupts = CyEnterCriticalSection();
 1030              		.loc 1 1005 0
 1031 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 1032              	.LVL38:
1006:Generated_Source\PSoC5/SPI_Altitude.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_Altitude_TX_FIFO_CLR);
 1033              		.loc 1 1007 0
 1034 0014 084B     		ldr	r3, .L85+8
 1035 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1036 0018 42F00102 		orr	r2, r2, #1
 1037 001c 1A70     		strb	r2, [r3]
1008:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_Altitude_TX_FIFO_CLR);
 1038              		.loc 1 1008 0
 1039 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1040 0020 02F0FE02 		and	r2, r2, #254
 1041 0024 1A70     		strb	r2, [r3]
1009:Generated_Source\PSoC5/SPI_Altitude.c **** 
1010:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC5/SPI_Altitude.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_Altitude_TX_FIFO_CLR);
1013:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_Altitude_TX_FIFO_CLR);
1014:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC5/SPI_Altitude.c ****     CyExitCriticalSection(enableInterrupts);
1016:Generated_Source\PSoC5/SPI_Altitude.c **** }
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 38


 1042              		.loc 1 1016 0
 1043 0026 BDE80840 		pop	{r3, lr}
 1044              		.cfi_restore 14
 1045              		.cfi_restore 3
 1046              		.cfi_def_cfa_offset 0
1015:Generated_Source\PSoC5/SPI_Altitude.c **** }
 1047              		.loc 1 1015 0
 1048 002a FFF7FEBF 		b	CyExitCriticalSection
 1049              	.LVL39:
 1050              	.L86:
 1051 002e 00BF     		.align	2
 1052              	.L85:
 1053 0030 64640040 		.word	1073767524
 1054 0034 5B640040 		.word	1073767515
 1055 0038 9B640040 		.word	1073767579
 1056              		.cfi_endproc
 1057              	.LFE19:
 1058              		.size	SPI_Altitude_ClearFIFO, .-SPI_Altitude_ClearFIFO
 1059              		.section	.text.SPI_Altitude_Init,"ax",%progbits
 1060              		.align	1
 1061              		.global	SPI_Altitude_Init
 1062              		.thumb
 1063              		.thumb_func
 1064              		.type	SPI_Altitude_Init, %function
 1065              	SPI_Altitude_Init:
 1066              	.LFB0:
  64:Generated_Source\PSoC5/SPI_Altitude.c ****     /* Initialize the Bit counter */
 1067              		.loc 1 64 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
  66:Generated_Source\PSoC5/SPI_Altitude.c **** 
 1071              		.loc 1 66 0
 1072 0000 194B     		ldr	r3, .L88
  64:Generated_Source\PSoC5/SPI_Altitude.c ****     /* Initialize the Bit counter */
 1073              		.loc 1 64 0
 1074 0002 10B5     		push	{r4, lr}
 1075              		.cfi_def_cfa_offset 8
 1076              		.cfi_offset 4, -8
 1077              		.cfi_offset 14, -4
  66:Generated_Source\PSoC5/SPI_Altitude.c **** 
 1078              		.loc 1 66 0
 1079 0004 0F22     		movs	r2, #15
  70:Generated_Source\PSoC5/SPI_Altitude.c ****         CyIntSetPriority     (SPI_Altitude_TX_ISR_NUMBER,  SPI_Altitude_TX_ISR_PRIORITY);
 1080              		.loc 1 70 0
 1081 0006 194C     		ldr	r4, .L88+4
  66:Generated_Source\PSoC5/SPI_Altitude.c **** 
 1082              		.loc 1 66 0
 1083 0008 1A70     		strb	r2, [r3]
  70:Generated_Source\PSoC5/SPI_Altitude.c ****         CyIntSetPriority     (SPI_Altitude_TX_ISR_NUMBER,  SPI_Altitude_TX_ISR_PRIORITY);
 1084              		.loc 1 70 0
 1085 000a 0223     		movs	r3, #2
 1086 000c 2360     		str	r3, [r4]
  71:Generated_Source\PSoC5/SPI_Altitude.c ****         (void) CyIntSetVector(SPI_Altitude_TX_ISR_NUMBER, &SPI_Altitude_TX_ISR);
 1087              		.loc 1 71 0
 1088 000e 0721     		movs	r1, #7
 1089 0010 0120     		movs	r0, #1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 39


 1090 0012 FFF7FEFF 		bl	CyIntSetPriority
 1091              	.LVL40:
  72:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 1092              		.loc 1 72 0
 1093 0016 1649     		ldr	r1, .L88+8
 1094 0018 0120     		movs	r0, #1
 1095 001a FFF7FEFF 		bl	CyIntSetVector
 1096              	.LVL41:
  77:Generated_Source\PSoC5/SPI_Altitude.c ****         CyIntSetPriority     (SPI_Altitude_RX_ISR_NUMBER,  SPI_Altitude_RX_ISR_PRIORITY);
 1097              		.loc 1 77 0
 1098 001e 0123     		movs	r3, #1
 1099 0020 2360     		str	r3, [r4]
  78:Generated_Source\PSoC5/SPI_Altitude.c ****         (void) CyIntSetVector(SPI_Altitude_RX_ISR_NUMBER, &SPI_Altitude_RX_ISR);
 1100              		.loc 1 78 0
 1101 0022 0721     		movs	r1, #7
 1102 0024 0020     		movs	r0, #0
 1103 0026 FFF7FEFF 		bl	CyIntSetPriority
 1104              	.LVL42:
  79:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 1105              		.loc 1 79 0
 1106 002a 1249     		ldr	r1, .L88+12
 1107 002c 0020     		movs	r0, #0
 1108 002e FFF7FEFF 		bl	CyIntSetVector
 1109              	.LVL43:
  83:Generated_Source\PSoC5/SPI_Altitude.c **** 
 1110              		.loc 1 83 0
 1111 0032 FFF7FEFF 		bl	SPI_Altitude_ClearFIFO
 1112              	.LVL44:
  86:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_rxBufferRead  = 0u;
 1113              		.loc 1 86 0
 1114 0036 104B     		ldr	r3, .L88+16
 1115 0038 0024     		movs	r4, #0
 1116 003a 1C70     		strb	r4, [r3]
  87:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_rxBufferWrite = 0u;
 1117              		.loc 1 87 0
 1118 003c 0F4B     		ldr	r3, .L88+20
 1119 003e 1C70     		strb	r4, [r3]
  88:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_RX_SOFTWARE_BUF_ENABLED) */
 1120              		.loc 1 88 0
 1121 0040 0F4B     		ldr	r3, .L88+24
 1122 0042 1C70     		strb	r4, [r3]
  92:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_txBufferRead  = 0u;
 1123              		.loc 1 92 0
 1124 0044 0F4B     		ldr	r3, .L88+28
 1125 0046 1C70     		strb	r4, [r3]
  93:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_txBufferWrite = 0u;
 1126              		.loc 1 93 0
 1127 0048 0F4B     		ldr	r3, .L88+32
 1128 004a 1C70     		strb	r4, [r3]
  94:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_TX_SOFTWARE_BUF_ENABLED) */
 1129              		.loc 1 94 0
 1130 004c 0F4B     		ldr	r3, .L88+36
 1131 004e 1C70     		strb	r4, [r3]
  97:Generated_Source\PSoC5/SPI_Altitude.c ****     (void) SPI_Altitude_ReadRxStatus(); /* Clear Rx status and swStatusRx */
 1132              		.loc 1 97 0
 1133 0050 FFF7FEFF 		bl	SPI_Altitude_ReadTxStatus
 1134              	.LVL45:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 40


  98:Generated_Source\PSoC5/SPI_Altitude.c **** 
 1135              		.loc 1 98 0
 1136 0054 FFF7FEFF 		bl	SPI_Altitude_ReadRxStatus
 1137              	.LVL46:
 101:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_RX_STATUS_MASK_REG = SPI_Altitude_RX_INIT_INTERRUPTS_MASK;
 1138              		.loc 1 101 0
 1139 0058 0D4B     		ldr	r3, .L88+40
 102:Generated_Source\PSoC5/SPI_Altitude.c **** }
 1140              		.loc 1 102 0
 1141 005a 6FF48371 		mvn	r1, #262
 101:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_RX_STATUS_MASK_REG = SPI_Altitude_RX_INIT_INTERRUPTS_MASK;
 1142              		.loc 1 101 0
 1143 005e 1C70     		strb	r4, [r3]
 102:Generated_Source\PSoC5/SPI_Altitude.c **** }
 1144              		.loc 1 102 0
 1145 0060 2022     		movs	r2, #32
 1146 0062 0B44     		add	r3, r3, r1
 1147 0064 1A70     		strb	r2, [r3]
 1148 0066 10BD     		pop	{r4, pc}
 1149              	.L89:
 1150              		.align	2
 1151              	.L88:
 1152 0068 88640040 		.word	1073767560
 1153 006c 80E100E0 		.word	-536813184
 1154 0070 00000000 		.word	SPI_Altitude_TX_ISR
 1155 0074 00000000 		.word	SPI_Altitude_RX_ISR
 1156 0078 00000000 		.word	SPI_Altitude_rxBufferFull
 1157 007c 00000000 		.word	SPI_Altitude_rxBufferRead
 1158 0080 00000000 		.word	SPI_Altitude_rxBufferWrite
 1159 0084 00000000 		.word	SPI_Altitude_txBufferFull
 1160 0088 00000000 		.word	SPI_Altitude_txBufferRead
 1161 008c 00000000 		.word	SPI_Altitude_txBufferWrite
 1162 0090 8B650040 		.word	1073767819
 1163              		.cfi_endproc
 1164              	.LFE0:
 1165              		.size	SPI_Altitude_Init, .-SPI_Altitude_Init
 1166              		.section	.text.SPI_Altitude_Start,"ax",%progbits
 1167              		.align	1
 1168              		.global	SPI_Altitude_Start
 1169              		.thumb
 1170              		.thumb_func
 1171              		.type	SPI_Altitude_Start, %function
 1172              	SPI_Altitude_Start:
 1173              	.LFB2:
 164:Generated_Source\PSoC5/SPI_Altitude.c ****     if(0u == SPI_Altitude_initVar)
 1174              		.loc 1 164 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 0
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178 0000 10B5     		push	{r4, lr}
 1179              		.cfi_def_cfa_offset 8
 1180              		.cfi_offset 4, -8
 1181              		.cfi_offset 14, -4
 165:Generated_Source\PSoC5/SPI_Altitude.c ****     {
 1182              		.loc 1 165 0
 1183 0002 054C     		ldr	r4, .L92
 1184 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 41


 1185 0006 1BB9     		cbnz	r3, .L91
 167:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_initVar = 1u;
 1186              		.loc 1 167 0
 1187 0008 FFF7FEFF 		bl	SPI_Altitude_Init
 1188              	.LVL47:
 168:Generated_Source\PSoC5/SPI_Altitude.c ****     }
 1189              		.loc 1 168 0
 1190 000c 0123     		movs	r3, #1
 1191 000e 2370     		strb	r3, [r4]
 1192              	.L91:
 172:Generated_Source\PSoC5/SPI_Altitude.c **** 
 1193              		.loc 1 172 0
 1194 0010 BDE81040 		pop	{r4, lr}
 1195              		.cfi_restore 14
 1196              		.cfi_restore 4
 1197              		.cfi_def_cfa_offset 0
 171:Generated_Source\PSoC5/SPI_Altitude.c **** }
 1198              		.loc 1 171 0
 1199 0014 FFF7FEBF 		b	SPI_Altitude_Enable
 1200              	.LVL48:
 1201              	.L93:
 1202              		.align	2
 1203              	.L92:
 1204 0018 00000000 		.word	.LANCHOR0
 1205              		.cfi_endproc
 1206              	.LFE2:
 1207              		.size	SPI_Altitude_Start, .-SPI_Altitude_Start
 1208              		.section	.text.SPI_Altitude_EnableInt,"ax",%progbits
 1209              		.align	1
 1210              		.global	SPI_Altitude_EnableInt
 1211              		.thumb
 1212              		.thumb_func
 1213              		.type	SPI_Altitude_EnableInt, %function
 1214              	SPI_Altitude_EnableInt:
 1215              	.LFB20:
1017:Generated_Source\PSoC5/SPI_Altitude.c **** 
1018:Generated_Source\PSoC5/SPI_Altitude.c **** 
1019:Generated_Source\PSoC5/SPI_Altitude.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC5/SPI_Altitude.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC5/SPI_Altitude.c **** */
1022:Generated_Source\PSoC5/SPI_Altitude.c **** 
1023:Generated_Source\PSoC5/SPI_Altitude.c **** 
1024:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
1025:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_EnableInt
1026:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
1027:Generated_Source\PSoC5/SPI_Altitude.c **** *
1028:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
1029:Generated_Source\PSoC5/SPI_Altitude.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC5/SPI_Altitude.c **** *
1031:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
1032:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
1033:Generated_Source\PSoC5/SPI_Altitude.c **** *
1034:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
1035:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
1036:Generated_Source\PSoC5/SPI_Altitude.c **** *
1037:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
1038:Generated_Source\PSoC5/SPI_Altitude.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 42


1039:Generated_Source\PSoC5/SPI_Altitude.c **** *
1040:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
1041:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_EnableInt(void) 
1042:Generated_Source\PSoC5/SPI_Altitude.c **** {
 1216              		.loc 1 1042 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
 1221              	.LBB96:
 1222              	.LBB97:
 255:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 1223              		.loc 1 255 0
 1224 0000 024B     		ldr	r3, .L95
 1225 0002 0122     		movs	r2, #1
 1226 0004 1A60     		str	r2, [r3]
 1227              	.LBE97:
 1228              	.LBE96:
 1229              	.LBB98:
 1230              	.LBB99:
 230:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 1231              		.loc 1 230 0
 1232 0006 0222     		movs	r2, #2
 1233 0008 1A60     		str	r2, [r3]
 1234 000a 7047     		bx	lr
 1235              	.L96:
 1236              		.align	2
 1237              	.L95:
 1238 000c 00E100E0 		.word	-536813312
 1239              	.LBE99:
 1240              	.LBE98:
 1241              		.cfi_endproc
 1242              	.LFE20:
 1243              		.size	SPI_Altitude_EnableInt, .-SPI_Altitude_EnableInt
 1244              		.section	.text.SPI_Altitude_DisableInt,"ax",%progbits
 1245              		.align	1
 1246              		.global	SPI_Altitude_DisableInt
 1247              		.thumb
 1248              		.thumb_func
 1249              		.type	SPI_Altitude_DisableInt, %function
 1250              	SPI_Altitude_DisableInt:
 1251              	.LFB21:
1043:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_EnableRxInt();
1044:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_EnableTxInt();
1045:Generated_Source\PSoC5/SPI_Altitude.c **** }
1046:Generated_Source\PSoC5/SPI_Altitude.c **** 
1047:Generated_Source\PSoC5/SPI_Altitude.c **** 
1048:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_DisableInt
1050:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
1051:Generated_Source\PSoC5/SPI_Altitude.c **** *
1052:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
1053:Generated_Source\PSoC5/SPI_Altitude.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC5/SPI_Altitude.c **** *
1055:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
1056:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
1057:Generated_Source\PSoC5/SPI_Altitude.c **** *
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 43


1058:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
1059:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
1060:Generated_Source\PSoC5/SPI_Altitude.c **** *
1061:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
1062:Generated_Source\PSoC5/SPI_Altitude.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC5/SPI_Altitude.c **** *
1064:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_DisableInt(void) 
1066:Generated_Source\PSoC5/SPI_Altitude.c **** {
 1252              		.loc 1 1066 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256              		@ link register save eliminated.
 1257              	.LBB100:
 1258              	.LBB101:
 280:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_TX_INT_ENABLED) */
 1259              		.loc 1 280 0
 1260 0000 024B     		ldr	r3, .L98
 1261 0002 0222     		movs	r2, #2
 1262 0004 1A60     		str	r2, [r3]
 1263              	.LBE101:
 1264              	.LBE100:
 1265              	.LBB102:
 1266              	.LBB103:
 305:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (0u != SPI_Altitude_INTERNAL_RX_INT_ENABLED) */
 1267              		.loc 1 305 0
 1268 0006 0122     		movs	r2, #1
 1269 0008 1A60     		str	r2, [r3]
 1270 000a 7047     		bx	lr
 1271              	.L99:
 1272              		.align	2
 1273              	.L98:
 1274 000c 80E100E0 		.word	-536813184
 1275              	.LBE103:
 1276              	.LBE102:
 1277              		.cfi_endproc
 1278              	.LFE21:
 1279              		.size	SPI_Altitude_DisableInt, .-SPI_Altitude_DisableInt
 1280              		.section	.text.SPI_Altitude_SetInterruptMode,"ax",%progbits
 1281              		.align	1
 1282              		.global	SPI_Altitude_SetInterruptMode
 1283              		.thumb
 1284              		.thumb_func
 1285              		.type	SPI_Altitude_SetInterruptMode, %function
 1286              	SPI_Altitude_SetInterruptMode:
 1287              	.LFB22:
1067:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_DisableTxInt();
1068:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_DisableRxInt();
1069:Generated_Source\PSoC5/SPI_Altitude.c **** }
1070:Generated_Source\PSoC5/SPI_Altitude.c **** 
1071:Generated_Source\PSoC5/SPI_Altitude.c **** 
1072:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_SetInterruptMode
1074:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
1075:Generated_Source\PSoC5/SPI_Altitude.c **** *
1076:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 44


1077:Generated_Source\PSoC5/SPI_Altitude.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC5/SPI_Altitude.c **** *
1079:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
1080:Generated_Source\PSoC5/SPI_Altitude.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC5/SPI_Altitude.c **** *  header file).
1082:Generated_Source\PSoC5/SPI_Altitude.c **** *
1083:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
1084:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
1085:Generated_Source\PSoC5/SPI_Altitude.c **** *
1086:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
1087:Generated_Source\PSoC5/SPI_Altitude.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC5/SPI_Altitude.c **** *
1089:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
1090:Generated_Source\PSoC5/SPI_Altitude.c **** void SPI_Altitude_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC5/SPI_Altitude.c **** {
 1288              		.loc 1 1091 0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 0
 1291              		@ frame_needed = 0, uses_anonymous_args = 0
 1292              		@ link register save eliminated.
 1293              	.LVL49:
1092:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPI_Altitude_STS_SPI_IDLE));
 1294              		.loc 1 1092 0
 1295 0000 044B     		ldr	r3, .L101
 1296 0002 00F0EF02 		and	r2, r0, #239
 1297 0006 1A70     		strb	r2, [r3]
1093:Generated_Source\PSoC5/SPI_Altitude.c ****     SPI_Altitude_RX_STATUS_MASK_REG  =  intSrc;
 1298              		.loc 1 1093 0
 1299 0008 6FF48372 		mvn	r2, #262
 1300 000c 1344     		add	r3, r3, r2
 1301 000e 1870     		strb	r0, [r3]
 1302 0010 7047     		bx	lr
 1303              	.L102:
 1304 0012 00BF     		.align	2
 1305              	.L101:
 1306 0014 8B650040 		.word	1073767819
 1307              		.cfi_endproc
 1308              	.LFE22:
 1309              		.size	SPI_Altitude_SetInterruptMode, .-SPI_Altitude_SetInterruptMode
 1310              		.section	.text.SPI_Altitude_ReadStatus,"ax",%progbits
 1311              		.align	1
 1312              		.global	SPI_Altitude_ReadStatus
 1313              		.thumb
 1314              		.thumb_func
 1315              		.type	SPI_Altitude_ReadStatus, %function
 1316              	SPI_Altitude_ReadStatus:
 1317              	.LFB23:
1094:Generated_Source\PSoC5/SPI_Altitude.c **** }
1095:Generated_Source\PSoC5/SPI_Altitude.c **** 
1096:Generated_Source\PSoC5/SPI_Altitude.c **** 
1097:Generated_Source\PSoC5/SPI_Altitude.c **** /*******************************************************************************
1098:Generated_Source\PSoC5/SPI_Altitude.c **** * Function Name: SPI_Altitude_ReadStatus
1099:Generated_Source\PSoC5/SPI_Altitude.c **** ********************************************************************************
1100:Generated_Source\PSoC5/SPI_Altitude.c **** *
1101:Generated_Source\PSoC5/SPI_Altitude.c **** * Summary:
1102:Generated_Source\PSoC5/SPI_Altitude.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC5/SPI_Altitude.c **** *
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 45


1104:Generated_Source\PSoC5/SPI_Altitude.c **** * Parameters:
1105:Generated_Source\PSoC5/SPI_Altitude.c **** *  None.
1106:Generated_Source\PSoC5/SPI_Altitude.c **** *
1107:Generated_Source\PSoC5/SPI_Altitude.c **** * Return:
1108:Generated_Source\PSoC5/SPI_Altitude.c **** *  Contents of the status register.
1109:Generated_Source\PSoC5/SPI_Altitude.c **** *
1110:Generated_Source\PSoC5/SPI_Altitude.c **** * Global variables:
1111:Generated_Source\PSoC5/SPI_Altitude.c **** *  SPI_Altitude_swStatus - used to store in software status register,
1112:Generated_Source\PSoC5/SPI_Altitude.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC5/SPI_Altitude.c **** *
1114:Generated_Source\PSoC5/SPI_Altitude.c **** * Theory:
1115:Generated_Source\PSoC5/SPI_Altitude.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC5/SPI_Altitude.c **** *  and flow control.
1117:Generated_Source\PSoC5/SPI_Altitude.c **** *
1118:Generated_Source\PSoC5/SPI_Altitude.c **** * Side Effects:
1119:Generated_Source\PSoC5/SPI_Altitude.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC5/SPI_Altitude.c **** *
1121:Generated_Source\PSoC5/SPI_Altitude.c **** * Reentrant:
1122:Generated_Source\PSoC5/SPI_Altitude.c **** *  No.
1123:Generated_Source\PSoC5/SPI_Altitude.c **** *
1124:Generated_Source\PSoC5/SPI_Altitude.c **** *******************************************************************************/
1125:Generated_Source\PSoC5/SPI_Altitude.c **** uint8 SPI_Altitude_ReadStatus(void) 
1126:Generated_Source\PSoC5/SPI_Altitude.c **** {
 1318              		.loc 1 1126 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322 0000 38B5     		push	{r3, r4, r5, lr}
 1323              		.cfi_def_cfa_offset 16
 1324              		.cfi_offset 3, -16
 1325              		.cfi_offset 4, -12
 1326              		.cfi_offset 5, -8
 1327              		.cfi_offset 14, -4
1127:Generated_Source\PSoC5/SPI_Altitude.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC5/SPI_Altitude.c **** 
1129:Generated_Source\PSoC5/SPI_Altitude.c ****     #if(SPI_Altitude_TX_SOFTWARE_BUF_ENABLED || SPI_Altitude_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC5/SPI_Altitude.c **** 
1131:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_DisableInt();
 1328              		.loc 1 1131 0
 1329 0002 FFF7FEFF 		bl	SPI_Altitude_DisableInt
 1330              	.LVL50:
1132:Generated_Source\PSoC5/SPI_Altitude.c **** 
1133:Generated_Source\PSoC5/SPI_Altitude.c ****         tmpStatus  = SPI_Altitude_GET_STATUS_RX(SPI_Altitude_swStatusRx);
 1331              		.loc 1 1133 0
 1332 0006 0B4C     		ldr	r4, .L104
 1333 0008 0B4B     		ldr	r3, .L104+4
1134:Generated_Source\PSoC5/SPI_Altitude.c ****         tmpStatus |= SPI_Altitude_GET_STATUS_TX(SPI_Altitude_swStatusTx);
 1334              		.loc 1 1134 0
 1335 000a 0C4D     		ldr	r5, .L104+8
1133:Generated_Source\PSoC5/SPI_Altitude.c ****         tmpStatus |= SPI_Altitude_GET_STATUS_TX(SPI_Altitude_swStatusTx);
 1336              		.loc 1 1133 0
 1337 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1338 000e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1339              	.LVL51:
 1340              		.loc 1 1134 0
 1341 0010 93F80721 		ldrb	r2, [r3, #263]	@ zero_extendqisi2
 1342 0014 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 46


 1343 0016 01F04001 		and	r1, r1, #64
 1344              	.LVL52:
 1345 001a 1043     		orrs	r0, r0, r2
 1346 001c 0843     		orrs	r0, r0, r1
 1347 001e 03F00903 		and	r3, r3, #9
 1348 0022 1843     		orrs	r0, r0, r3
 1349              	.LVL53:
1135:Generated_Source\PSoC5/SPI_Altitude.c ****         tmpStatus &= ((uint8) ~SPI_Altitude_STS_SPI_IDLE);
1136:Generated_Source\PSoC5/SPI_Altitude.c **** 
1137:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_swStatusTx = 0u;
 1350              		.loc 1 1137 0
 1351 0024 0023     		movs	r3, #0
 1352 0026 2B70     		strb	r3, [r5]
1138:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_swStatusRx = 0u;
 1353              		.loc 1 1138 0
 1354 0028 2370     		strb	r3, [r4]
1139:Generated_Source\PSoC5/SPI_Altitude.c **** 
1140:Generated_Source\PSoC5/SPI_Altitude.c ****         SPI_Altitude_EnableInt();
 1355              		.loc 1 1140 0
 1356 002a FFF7FEFF 		bl	SPI_Altitude_EnableInt
 1357              	.LVL54:
1141:Generated_Source\PSoC5/SPI_Altitude.c **** 
1142:Generated_Source\PSoC5/SPI_Altitude.c ****     #else
1143:Generated_Source\PSoC5/SPI_Altitude.c **** 
1144:Generated_Source\PSoC5/SPI_Altitude.c ****         tmpStatus  = SPI_Altitude_RX_STATUS_REG;
1145:Generated_Source\PSoC5/SPI_Altitude.c ****         tmpStatus |= SPI_Altitude_TX_STATUS_REG;
1146:Generated_Source\PSoC5/SPI_Altitude.c ****         tmpStatus &= ((uint8) ~SPI_Altitude_STS_SPI_IDLE);
1147:Generated_Source\PSoC5/SPI_Altitude.c **** 
1148:Generated_Source\PSoC5/SPI_Altitude.c ****     #endif /* (SPI_Altitude_TX_SOFTWARE_BUF_ENABLED || SPI_Altitude_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC5/SPI_Altitude.c **** 
1150:Generated_Source\PSoC5/SPI_Altitude.c ****     return(tmpStatus);
1151:Generated_Source\PSoC5/SPI_Altitude.c **** }
 1358              		.loc 1 1151 0
 1359 002e 00F0EF00 		and	r0, r0, #239
 1360 0032 38BD     		pop	{r3, r4, r5, pc}
 1361              	.L105:
 1362              		.align	2
 1363              	.L104:
 1364 0034 00000000 		.word	SPI_Altitude_swStatusRx
 1365 0038 64640040 		.word	1073767524
 1366 003c 00000000 		.word	SPI_Altitude_swStatusTx
 1367              		.cfi_endproc
 1368              	.LFE23:
 1369              		.size	SPI_Altitude_ReadStatus, .-SPI_Altitude_ReadStatus
 1370              		.comm	SPI_Altitude_swStatusRx,1,1
 1371              		.comm	SPI_Altitude_swStatusTx,1,1
 1372              		.global	SPI_Altitude_initVar
 1373              		.comm	SPI_Altitude_rxBufferWrite,1,1
 1374              		.comm	SPI_Altitude_rxBufferRead,1,1
 1375              		.comm	SPI_Altitude_rxBufferFull,1,1
 1376              		.comm	SPI_Altitude_rxBuffer,8,1
 1377              		.comm	SPI_Altitude_txBufferWrite,1,1
 1378              		.comm	SPI_Altitude_txBufferRead,1,1
 1379              		.comm	SPI_Altitude_txBufferFull,1,1
 1380              		.comm	SPI_Altitude_txBuffer,8,1
 1381              		.bss
 1382              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 47


 1383              		.type	SPI_Altitude_initVar, %object
 1384              		.size	SPI_Altitude_initVar, 1
 1385              	SPI_Altitude_initVar:
 1386 0000 00       		.space	1
 1387              		.text
 1388              	.Letext0:
 1389              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1390              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1391              		.file 4 "Generated_Source\\PSoC5\\SPI_Altitude_IntClock.h"
 1392              		.section	.debug_info,"",%progbits
 1393              	.Ldebug_info0:
 1394 0000 BD070000 		.4byte	0x7bd
 1395 0004 0400     		.2byte	0x4
 1396 0006 00000000 		.4byte	.Ldebug_abbrev0
 1397 000a 04       		.byte	0x4
 1398 000b 01       		.uleb128 0x1
 1399 000c F8000000 		.4byte	.LASF70
 1400 0010 0C       		.byte	0xc
 1401 0011 CF010000 		.4byte	.LASF71
 1402 0015 34030000 		.4byte	.LASF72
 1403 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 1404 001d 00000000 		.4byte	0
 1405 0021 00000000 		.4byte	.Ldebug_line0
 1406 0025 02       		.uleb128 0x2
 1407 0026 01       		.byte	0x1
 1408 0027 06       		.byte	0x6
 1409 0028 EC000000 		.4byte	.LASF0
 1410 002c 02       		.uleb128 0x2
 1411 002d 01       		.byte	0x1
 1412 002e 08       		.byte	0x8
 1413 002f 5F040000 		.4byte	.LASF1
 1414 0033 02       		.uleb128 0x2
 1415 0034 02       		.byte	0x2
 1416 0035 05       		.byte	0x5
 1417 0036 86040000 		.4byte	.LASF2
 1418 003a 02       		.uleb128 0x2
 1419 003b 02       		.byte	0x2
 1420 003c 07       		.byte	0x7
 1421 003d A6020000 		.4byte	.LASF3
 1422 0041 02       		.uleb128 0x2
 1423 0042 04       		.byte	0x4
 1424 0043 05       		.byte	0x5
 1425 0044 B0010000 		.4byte	.LASF4
 1426 0048 02       		.uleb128 0x2
 1427 0049 04       		.byte	0x4
 1428 004a 07       		.byte	0x7
 1429 004b 78020000 		.4byte	.LASF5
 1430 004f 02       		.uleb128 0x2
 1431 0050 08       		.byte	0x8
 1432 0051 05       		.byte	0x5
 1433 0052 DE000000 		.4byte	.LASF6
 1434 0056 02       		.uleb128 0x2
 1435 0057 08       		.byte	0x8
 1436 0058 07       		.byte	0x7
 1437 0059 8C000000 		.4byte	.LASF7
 1438 005d 03       		.uleb128 0x3
 1439 005e 04       		.byte	0x4
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 48


 1440 005f 05       		.byte	0x5
 1441 0060 696E7400 		.ascii	"int\000"
 1442 0064 02       		.uleb128 0x2
 1443 0065 04       		.byte	0x4
 1444 0066 07       		.byte	0x7
 1445 0067 53020000 		.4byte	.LASF8
 1446 006b 04       		.uleb128 0x4
 1447 006c C9010000 		.4byte	.LASF9
 1448 0070 02       		.byte	0x2
 1449 0071 9201     		.2byte	0x192
 1450 0073 2C000000 		.4byte	0x2c
 1451 0077 04       		.uleb128 0x4
 1452 0078 30020000 		.4byte	.LASF10
 1453 007c 02       		.byte	0x2
 1454 007d 9401     		.2byte	0x194
 1455 007f 48000000 		.4byte	0x48
 1456 0083 02       		.uleb128 0x2
 1457 0084 04       		.byte	0x4
 1458 0085 04       		.byte	0x4
 1459 0086 54040000 		.4byte	.LASF11
 1460 008a 02       		.uleb128 0x2
 1461 008b 08       		.byte	0x8
 1462 008c 04       		.byte	0x4
 1463 008d F5010000 		.4byte	.LASF12
 1464 0091 02       		.uleb128 0x2
 1465 0092 01       		.byte	0x1
 1466 0093 08       		.byte	0x8
 1467 0094 B8040000 		.4byte	.LASF13
 1468 0098 04       		.uleb128 0x4
 1469 0099 5A040000 		.4byte	.LASF14
 1470 009d 02       		.byte	0x2
 1471 009e 3C02     		.2byte	0x23c
 1472 00a0 A4000000 		.4byte	0xa4
 1473 00a4 05       		.uleb128 0x5
 1474 00a5 6B000000 		.4byte	0x6b
 1475 00a9 04       		.uleb128 0x4
 1476 00aa AF030000 		.4byte	.LASF15
 1477 00ae 02       		.byte	0x2
 1478 00af 3E02     		.2byte	0x23e
 1479 00b1 B5000000 		.4byte	0xb5
 1480 00b5 05       		.uleb128 0x5
 1481 00b6 77000000 		.4byte	0x77
 1482 00ba 02       		.uleb128 0x2
 1483 00bb 08       		.byte	0x8
 1484 00bc 04       		.byte	0x4
 1485 00bd D4030000 		.4byte	.LASF16
 1486 00c1 02       		.uleb128 0x2
 1487 00c2 04       		.byte	0x4
 1488 00c3 07       		.byte	0x7
 1489 00c4 CB030000 		.4byte	.LASF17
 1490 00c8 06       		.uleb128 0x6
 1491 00c9 67050000 		.4byte	.LASF18
 1492 00cd 01       		.byte	0x1
 1493 00ce FC       		.byte	0xfc
 1494 00cf 01       		.byte	0x1
 1495 00d0 06       		.uleb128 0x6
 1496 00d1 C5000000 		.4byte	.LASF19
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 49


 1497 00d5 01       		.byte	0x1
 1498 00d6 E3       		.byte	0xe3
 1499 00d7 01       		.byte	0x1
 1500 00d8 07       		.uleb128 0x7
 1501 00d9 FA050000 		.4byte	.LASF20
 1502 00dd 01       		.byte	0x1
 1503 00de 2E01     		.2byte	0x12e
 1504 00e0 01       		.byte	0x1
 1505 00e1 07       		.uleb128 0x7
 1506 00e2 16020000 		.4byte	.LASF21
 1507 00e6 01       		.byte	0x1
 1508 00e7 1501     		.2byte	0x115
 1509 00e9 01       		.byte	0x1
 1510 00ea 08       		.uleb128 0x8
 1511 00eb 42050000 		.4byte	.LASF22
 1512 00ef 01       		.byte	0x1
 1513 00f0 78       		.byte	0x78
 1514 00f1 00000000 		.4byte	.LFB1
 1515 00f5 44000000 		.4byte	.LFE1-.LFB1
 1516 00f9 01       		.uleb128 0x1
 1517 00fa 9C       		.byte	0x9c
 1518 00fb 48010000 		.4byte	0x148
 1519 00ff 09       		.uleb128 0x9
 1520 0100 56050000 		.4byte	.LASF24
 1521 0104 01       		.byte	0x1
 1522 0105 7A       		.byte	0x7a
 1523 0106 6B000000 		.4byte	0x6b
 1524 010a 00000000 		.4byte	.LLST0
 1525 010e 0A       		.uleb128 0xa
 1526 010f D0000000 		.4byte	0xd0
 1527 0113 2E000000 		.4byte	.LBB50
 1528 0117 06000000 		.4byte	.LBE50-.LBB50
 1529 011b 01       		.byte	0x1
 1530 011c 86       		.byte	0x86
 1531 011d 0A       		.uleb128 0xa
 1532 011e C8000000 		.4byte	0xc8
 1533 0122 34000000 		.4byte	.LBB52
 1534 0126 10000000 		.4byte	.LBE52-.LBB52
 1535 012a 01       		.byte	0x1
 1536 012b 87       		.byte	0x87
 1537 012c 0B       		.uleb128 0xb
 1538 012d 06000000 		.4byte	.LVL0
 1539 0131 7E070000 		.4byte	0x77e
 1540 0135 0B       		.uleb128 0xb
 1541 0136 2A000000 		.4byte	.LVL1
 1542 013a 89070000 		.4byte	0x789
 1543 013e 0B       		.uleb128 0xb
 1544 013f 2E000000 		.4byte	.LVL2
 1545 0143 94070000 		.4byte	0x794
 1546 0147 00       		.byte	0
 1547 0148 08       		.uleb128 0x8
 1548 0149 9E010000 		.4byte	.LASF23
 1549 014d 01       		.byte	0x1
 1550 014e C0       		.byte	0xc0
 1551 014f 00000000 		.4byte	.LFB3
 1552 0153 3C000000 		.4byte	.LFE3-.LFB3
 1553 0157 01       		.uleb128 0x1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 50


 1554 0158 9C       		.byte	0x9c
 1555 0159 A6010000 		.4byte	0x1a6
 1556 015d 09       		.uleb128 0x9
 1557 015e 56050000 		.4byte	.LASF24
 1558 0162 01       		.byte	0x1
 1559 0163 C2       		.byte	0xc2
 1560 0164 6B000000 		.4byte	0x6b
 1561 0168 13000000 		.4byte	.LLST1
 1562 016c 0A       		.uleb128 0xa
 1563 016d E1000000 		.4byte	0xe1
 1564 0171 26000000 		.4byte	.LBB54
 1565 0175 06000000 		.4byte	.LBE54-.LBB54
 1566 0179 01       		.byte	0x1
 1567 017a CD       		.byte	0xcd
 1568 017b 0A       		.uleb128 0xa
 1569 017c D8000000 		.4byte	0xd8
 1570 0180 2C000000 		.4byte	.LBB56
 1571 0184 10000000 		.4byte	.LBE56-.LBB56
 1572 0188 01       		.byte	0x1
 1573 0189 CE       		.byte	0xce
 1574 018a 0B       		.uleb128 0xb
 1575 018b 06000000 		.4byte	.LVL3
 1576 018f 7E070000 		.4byte	0x77e
 1577 0193 0B       		.uleb128 0xb
 1578 0194 22000000 		.4byte	.LVL4
 1579 0198 89070000 		.4byte	0x789
 1580 019c 0B       		.uleb128 0xb
 1581 019d 26000000 		.4byte	.LVL5
 1582 01a1 9F070000 		.4byte	0x79f
 1583 01a5 00       		.byte	0
 1584 01a6 0C       		.uleb128 0xc
 1585 01a7 D0000000 		.4byte	0xd0
 1586 01ab 00000000 		.4byte	.LFB4
 1587 01af 0C000000 		.4byte	.LFE4-.LFB4
 1588 01b3 01       		.uleb128 0x1
 1589 01b4 9C       		.byte	0x9c
 1590 01b5 0C       		.uleb128 0xc
 1591 01b6 C8000000 		.4byte	0xc8
 1592 01ba 00000000 		.4byte	.LFB5
 1593 01be 0C000000 		.4byte	.LFE5-.LFB5
 1594 01c2 01       		.uleb128 0x1
 1595 01c3 9C       		.byte	0x9c
 1596 01c4 0C       		.uleb128 0xc
 1597 01c5 E1000000 		.4byte	0xe1
 1598 01c9 00000000 		.4byte	.LFB6
 1599 01cd 0C000000 		.4byte	.LFE6-.LFB6
 1600 01d1 01       		.uleb128 0x1
 1601 01d2 9C       		.byte	0x9c
 1602 01d3 0C       		.uleb128 0xc
 1603 01d4 D8000000 		.4byte	0xd8
 1604 01d8 00000000 		.4byte	.LFB7
 1605 01dc 0C000000 		.4byte	.LFE7-.LFB7
 1606 01e0 01       		.uleb128 0x1
 1607 01e1 9C       		.byte	0x9c
 1608 01e2 0D       		.uleb128 0xd
 1609 01e3 FA030000 		.4byte	.LASF25
 1610 01e7 01       		.byte	0x1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 51


 1611 01e8 4801     		.2byte	0x148
 1612 01ea 00000000 		.4byte	.LFB8
 1613 01ee 0C000000 		.4byte	.LFE8-.LFB8
 1614 01f2 01       		.uleb128 0x1
 1615 01f3 9C       		.byte	0x9c
 1616 01f4 07020000 		.4byte	0x207
 1617 01f8 0E       		.uleb128 0xe
 1618 01f9 02030000 		.4byte	.LASF27
 1619 01fd 01       		.byte	0x1
 1620 01fe 4801     		.2byte	0x148
 1621 0200 6B000000 		.4byte	0x6b
 1622 0204 01       		.uleb128 0x1
 1623 0205 50       		.byte	0x50
 1624 0206 00       		.byte	0
 1625 0207 0D       		.uleb128 0xd
 1626 0208 9B050000 		.4byte	.LASF26
 1627 020c 01       		.byte	0x1
 1628 020d 6001     		.2byte	0x160
 1629 020f 00000000 		.4byte	.LFB9
 1630 0213 0C000000 		.4byte	.LFE9-.LFB9
 1631 0217 01       		.uleb128 0x1
 1632 0218 9C       		.byte	0x9c
 1633 0219 2C020000 		.4byte	0x22c
 1634 021d 0E       		.uleb128 0xe
 1635 021e 02030000 		.4byte	.LASF27
 1636 0222 01       		.byte	0x1
 1637 0223 6001     		.2byte	0x160
 1638 0225 6B000000 		.4byte	0x6b
 1639 0229 01       		.uleb128 0x1
 1640 022a 50       		.byte	0x50
 1641 022b 00       		.byte	0
 1642 022c 0F       		.uleb128 0xf
 1643 022d FC010000 		.4byte	.LASF29
 1644 0231 01       		.byte	0x1
 1645 0232 8201     		.2byte	0x182
 1646 0234 6B000000 		.4byte	0x6b
 1647 0238 00000000 		.4byte	.LFB10
 1648 023c 30000000 		.4byte	.LFE10-.LFB10
 1649 0240 01       		.uleb128 0x1
 1650 0241 9C       		.byte	0x9c
 1651 0242 77020000 		.4byte	0x277
 1652 0246 10       		.uleb128 0x10
 1653 0247 BB000000 		.4byte	.LASF28
 1654 024b 01       		.byte	0x1
 1655 024c 8401     		.2byte	0x184
 1656 024e 6B000000 		.4byte	0x6b
 1657 0252 26000000 		.4byte	.LLST2
 1658 0256 11       		.uleb128 0x11
 1659 0257 E1000000 		.4byte	0xe1
 1660 025b 02000000 		.4byte	.LBB58
 1661 025f 06000000 		.4byte	.LBE58-.LBB58
 1662 0263 01       		.byte	0x1
 1663 0264 8801     		.2byte	0x188
 1664 0266 12       		.uleb128 0x12
 1665 0267 D0000000 		.4byte	0xd0
 1666 026b 14000000 		.4byte	.LBB60
 1667 026f 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 52


 1668 0273 01       		.byte	0x1
 1669 0274 8D01     		.2byte	0x18d
 1670 0276 00       		.byte	0
 1671 0277 0F       		.uleb128 0xf
 1672 0278 E0030000 		.4byte	.LASF30
 1673 027c 01       		.byte	0x1
 1674 027d B501     		.2byte	0x1b5
 1675 027f 6B000000 		.4byte	0x6b
 1676 0283 00000000 		.4byte	.LFB11
 1677 0287 30000000 		.4byte	.LFE11-.LFB11
 1678 028b 01       		.uleb128 0x1
 1679 028c 9C       		.byte	0x9c
 1680 028d C2020000 		.4byte	0x2c2
 1681 0291 10       		.uleb128 0x10
 1682 0292 BB000000 		.4byte	.LASF28
 1683 0296 01       		.byte	0x1
 1684 0297 B701     		.2byte	0x1b7
 1685 0299 6B000000 		.4byte	0x6b
 1686 029d 40000000 		.4byte	.LLST3
 1687 02a1 11       		.uleb128 0x11
 1688 02a2 D8000000 		.4byte	0xd8
 1689 02a6 02000000 		.4byte	.LBB64
 1690 02aa 06000000 		.4byte	.LBE64-.LBB64
 1691 02ae 01       		.byte	0x1
 1692 02af BB01     		.2byte	0x1bb
 1693 02b1 12       		.uleb128 0x12
 1694 02b2 C8000000 		.4byte	0xc8
 1695 02b6 14000000 		.4byte	.LBB66
 1696 02ba 18000000 		.4byte	.Ldebug_ranges0+0x18
 1697 02be 01       		.byte	0x1
 1698 02bf C001     		.2byte	0x1c0
 1699 02c1 00       		.byte	0
 1700 02c2 0D       		.uleb128 0xd
 1701 02c3 6D040000 		.4byte	.LASF31
 1702 02c7 01       		.byte	0x1
 1703 02c8 EE01     		.2byte	0x1ee
 1704 02ca 00000000 		.4byte	.LFB12
 1705 02ce C4000000 		.4byte	.LFE12-.LFB12
 1706 02d2 01       		.uleb128 0x1
 1707 02d3 9C       		.byte	0x9c
 1708 02d4 27030000 		.4byte	0x327
 1709 02d8 0E       		.uleb128 0xe
 1710 02d9 D5050000 		.4byte	.LASF32
 1711 02dd 01       		.byte	0x1
 1712 02de EE01     		.2byte	0x1ee
 1713 02e0 6B000000 		.4byte	0x6b
 1714 02e4 01       		.uleb128 0x1
 1715 02e5 50       		.byte	0x50
 1716 02e6 10       		.uleb128 0x10
 1717 02e7 1A040000 		.4byte	.LASF33
 1718 02eb 01       		.byte	0x1
 1719 02ec F201     		.2byte	0x1f2
 1720 02ee 6B000000 		.4byte	0x6b
 1721 02f2 5B000000 		.4byte	.LLST4
 1722 02f6 10       		.uleb128 0x10
 1723 02f7 B9010000 		.4byte	.LASF34
 1724 02fb 01       		.byte	0x1
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 53


 1725 02fc F301     		.2byte	0x1f3
 1726 02fe 6B000000 		.4byte	0x6b
 1727 0302 8C000000 		.4byte	.LLST5
 1728 0306 11       		.uleb128 0x11
 1729 0307 E1000000 		.4byte	0xe1
 1730 030b 22000000 		.4byte	.LBB70
 1731 030f 06000000 		.4byte	.LBE70-.LBB70
 1732 0313 01       		.byte	0x1
 1733 0314 0502     		.2byte	0x205
 1734 0316 11       		.uleb128 0x11
 1735 0317 D0000000 		.4byte	0xd0
 1736 031b 94000000 		.4byte	.LBB72
 1737 031f 30000000 		.4byte	.LBE72-.LBB72
 1738 0323 01       		.byte	0x1
 1739 0324 2902     		.2byte	0x229
 1740 0326 00       		.byte	0
 1741 0327 0F       		.uleb128 0xf
 1742 0328 00000000 		.4byte	.LASF35
 1743 032c 01       		.byte	0x1
 1744 032d 5A02     		.2byte	0x25a
 1745 032f 6B000000 		.4byte	0x6b
 1746 0333 00000000 		.4byte	.LFB13
 1747 0337 5C000000 		.4byte	.LFE13-.LFB13
 1748 033b 01       		.uleb128 0x1
 1749 033c 9C       		.byte	0x9c
 1750 033d 70030000 		.4byte	0x370
 1751 0341 13       		.uleb128 0x13
 1752 0342 B1040000 		.4byte	.LASF36
 1753 0346 01       		.byte	0x1
 1754 0347 5C02     		.2byte	0x25c
 1755 0349 6B000000 		.4byte	0x6b
 1756 034d 01       		.uleb128 0x1
 1757 034e 50       		.byte	0x50
 1758 034f 11       		.uleb128 0x11
 1759 0350 D8000000 		.4byte	0xd8
 1760 0354 00000000 		.4byte	.LBB74
 1761 0358 06000000 		.4byte	.LBE74-.LBB74
 1762 035c 01       		.byte	0x1
 1763 035d 6102     		.2byte	0x261
 1764 035f 11       		.uleb128 0x11
 1765 0360 C8000000 		.4byte	0xc8
 1766 0364 3A000000 		.4byte	.LBB76
 1767 0368 06000000 		.4byte	.LBE76-.LBB76
 1768 036c 01       		.byte	0x1
 1769 036d 7502     		.2byte	0x275
 1770 036f 00       		.byte	0
 1771 0370 0F       		.uleb128 0xf
 1772 0371 25050000 		.4byte	.LASF37
 1773 0375 01       		.byte	0x1
 1774 0376 9A02     		.2byte	0x29a
 1775 0378 6B000000 		.4byte	0x6b
 1776 037c 00000000 		.4byte	.LFB14
 1777 0380 48000000 		.4byte	.LFE14-.LFB14
 1778 0384 01       		.uleb128 0x1
 1779 0385 9C       		.byte	0x9c
 1780 0386 BB030000 		.4byte	0x3bb
 1781 038a 10       		.uleb128 0x10
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 54


 1782 038b A1020000 		.4byte	.LASF38
 1783 038f 01       		.byte	0x1
 1784 0390 9C02     		.2byte	0x29c
 1785 0392 6B000000 		.4byte	0x6b
 1786 0396 C0000000 		.4byte	.LLST6
 1787 039a 11       		.uleb128 0x11
 1788 039b D8000000 		.4byte	0xd8
 1789 039f 00000000 		.4byte	.LBB78
 1790 03a3 06000000 		.4byte	.LBE78-.LBB78
 1791 03a7 01       		.byte	0x1
 1792 03a8 A102     		.2byte	0x2a1
 1793 03aa 11       		.uleb128 0x11
 1794 03ab C8000000 		.4byte	0xc8
 1795 03af 30000000 		.4byte	.LBB80
 1796 03b3 06000000 		.4byte	.LBE80-.LBB80
 1797 03b7 01       		.byte	0x1
 1798 03b8 B002     		.2byte	0x2b0
 1799 03ba 00       		.byte	0
 1800 03bb 0F       		.uleb128 0xf
 1801 03bc 37040000 		.4byte	.LASF39
 1802 03c0 01       		.byte	0x1
 1803 03c1 D702     		.2byte	0x2d7
 1804 03c3 6B000000 		.4byte	0x6b
 1805 03c7 00000000 		.4byte	.LFB15
 1806 03cb 48000000 		.4byte	.LFE15-.LFB15
 1807 03cf 01       		.uleb128 0x1
 1808 03d0 9C       		.byte	0x9c
 1809 03d1 06040000 		.4byte	0x406
 1810 03d5 10       		.uleb128 0x10
 1811 03d6 A1020000 		.4byte	.LASF38
 1812 03da 01       		.byte	0x1
 1813 03db D902     		.2byte	0x2d9
 1814 03dd 6B000000 		.4byte	0x6b
 1815 03e1 DE000000 		.4byte	.LLST7
 1816 03e5 11       		.uleb128 0x11
 1817 03e6 E1000000 		.4byte	0xe1
 1818 03ea 00000000 		.4byte	.LBB82
 1819 03ee 06000000 		.4byte	.LBE82-.LBB82
 1820 03f2 01       		.byte	0x1
 1821 03f3 DD02     		.2byte	0x2dd
 1822 03f5 11       		.uleb128 0x11
 1823 03f6 D0000000 		.4byte	0xd0
 1824 03fa 30000000 		.4byte	.LBB84
 1825 03fe 06000000 		.4byte	.LBE84-.LBB84
 1826 0402 01       		.byte	0x1
 1827 0403 EC02     		.2byte	0x2ec
 1828 0405 00       		.byte	0
 1829 0406 0D       		.uleb128 0xd
 1830 0407 BD040000 		.4byte	.LASF40
 1831 040b 01       		.byte	0x1
 1832 040c 2603     		.2byte	0x326
 1833 040e 00000000 		.4byte	.LFB16
 1834 0412 48000000 		.4byte	.LFE16-.LFB16
 1835 0416 01       		.uleb128 0x1
 1836 0417 9C       		.byte	0x9c
 1837 0418 3D040000 		.4byte	0x43d
 1838 041c 11       		.uleb128 0x11
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 55


 1839 041d D8000000 		.4byte	0xd8
 1840 0421 14000000 		.4byte	.LBB86
 1841 0425 06000000 		.4byte	.LBE86-.LBB86
 1842 0429 01       		.byte	0x1
 1843 042a 3003     		.2byte	0x330
 1844 042c 11       		.uleb128 0x11
 1845 042d C8000000 		.4byte	0xc8
 1846 0431 26000000 		.4byte	.LBB88
 1847 0435 22000000 		.4byte	.LBE88-.LBB88
 1848 0439 01       		.byte	0x1
 1849 043a 3603     		.2byte	0x336
 1850 043c 00       		.byte	0
 1851 043d 0D       		.uleb128 0xd
 1852 043e 94030000 		.4byte	.LASF41
 1853 0442 01       		.byte	0x1
 1854 0443 5D03     		.2byte	0x35d
 1855 0445 00000000 		.4byte	.LFB17
 1856 0449 5C000000 		.4byte	.LFE17-.LFB17
 1857 044d 01       		.uleb128 0x1
 1858 044e 9C       		.byte	0x9c
 1859 044f 96040000 		.4byte	0x496
 1860 0453 10       		.uleb128 0x10
 1861 0454 56050000 		.4byte	.LASF24
 1862 0458 01       		.byte	0x1
 1863 0459 5F03     		.2byte	0x35f
 1864 045b 6B000000 		.4byte	0x6b
 1865 045f FC000000 		.4byte	.LLST8
 1866 0463 12       		.uleb128 0x12
 1867 0464 E1000000 		.4byte	0xe1
 1868 0468 1C000000 		.4byte	.LBB90
 1869 046c 30000000 		.4byte	.Ldebug_ranges0+0x30
 1870 0470 01       		.byte	0x1
 1871 0471 6F03     		.2byte	0x36f
 1872 0473 11       		.uleb128 0x11
 1873 0474 D0000000 		.4byte	0xd0
 1874 0478 3A000000 		.4byte	.LBB94
 1875 047c 22000000 		.4byte	.LBE94-.LBB94
 1876 0480 01       		.byte	0x1
 1877 0481 7803     		.2byte	0x378
 1878 0483 0B       		.uleb128 0xb
 1879 0484 06000000 		.4byte	.LVL30
 1880 0488 7E070000 		.4byte	0x77e
 1881 048c 0B       		.uleb128 0xb
 1882 048d 1C000000 		.4byte	.LVL31
 1883 0491 89070000 		.4byte	0x789
 1884 0495 00       		.byte	0
 1885 0496 0D       		.uleb128 0xd
 1886 0497 B5030000 		.4byte	.LASF42
 1887 049b 01       		.byte	0x1
 1888 049c C203     		.2byte	0x3c2
 1889 049e 00000000 		.4byte	.LFB18
 1890 04a2 18000000 		.4byte	.LFE18-.LFB18
 1891 04a6 01       		.uleb128 0x1
 1892 04a7 9C       		.byte	0x9c
 1893 04a8 E6040000 		.4byte	0x4e6
 1894 04ac 14       		.uleb128 0x14
 1895 04ad D8040000 		.4byte	.LASF43
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 56


 1896 04b1 01       		.byte	0x1
 1897 04b2 C203     		.2byte	0x3c2
 1898 04b4 E6040000 		.4byte	0x4e6
 1899 04b8 0F010000 		.4byte	.LLST9
 1900 04bc 14       		.uleb128 0x14
 1901 04bd 90040000 		.4byte	.LASF44
 1902 04c1 01       		.byte	0x1
 1903 04c2 C203     		.2byte	0x3c2
 1904 04c4 6B000000 		.4byte	0x6b
 1905 04c8 30010000 		.4byte	.LLST10
 1906 04cc 10       		.uleb128 0x10
 1907 04cd E3020000 		.4byte	.LASF45
 1908 04d1 01       		.byte	0x1
 1909 04d2 C503     		.2byte	0x3c5
 1910 04d4 6B000000 		.4byte	0x6b
 1911 04d8 59010000 		.4byte	.LLST11
 1912 04dc 0B       		.uleb128 0xb
 1913 04dd 12000000 		.4byte	.LVL36
 1914 04e1 C2020000 		.4byte	0x2c2
 1915 04e5 00       		.byte	0
 1916 04e6 15       		.uleb128 0x15
 1917 04e7 04       		.byte	0x4
 1918 04e8 EC040000 		.4byte	0x4ec
 1919 04ec 16       		.uleb128 0x16
 1920 04ed 6B000000 		.4byte	0x6b
 1921 04f1 0D       		.uleb128 0xd
 1922 04f2 DF040000 		.4byte	.LASF46
 1923 04f6 01       		.byte	0x1
 1924 04f7 E303     		.2byte	0x3e3
 1925 04f9 00000000 		.4byte	.LFB19
 1926 04fd 3C000000 		.4byte	.LFE19-.LFB19
 1927 0501 01       		.uleb128 0x1
 1928 0502 9C       		.byte	0x9c
 1929 0503 2A050000 		.4byte	0x52a
 1930 0507 10       		.uleb128 0x10
 1931 0508 56050000 		.4byte	.LASF24
 1932 050c 01       		.byte	0x1
 1933 050d E503     		.2byte	0x3e5
 1934 050f 6B000000 		.4byte	0x6b
 1935 0513 93010000 		.4byte	.LLST12
 1936 0517 0B       		.uleb128 0xb
 1937 0518 14000000 		.4byte	.LVL38
 1938 051c 7E070000 		.4byte	0x77e
 1939 0520 17       		.uleb128 0x17
 1940 0521 2E000000 		.4byte	.LVL39
 1941 0525 89070000 		.4byte	0x789
 1942 0529 00       		.byte	0
 1943 052a 08       		.uleb128 0x8
 1944 052b 25040000 		.4byte	.LASF47
 1945 052f 01       		.byte	0x1
 1946 0530 3F       		.byte	0x3f
 1947 0531 00000000 		.4byte	.LFB0
 1948 0535 94000000 		.4byte	.LFE0-.LFB0
 1949 0539 01       		.uleb128 0x1
 1950 053a 9C       		.byte	0x9c
 1951 053b B1050000 		.4byte	0x5b1
 1952 053f 18       		.uleb128 0x18
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 57


 1953 0540 16000000 		.4byte	.LVL40
 1954 0544 AA070000 		.4byte	0x7aa
 1955 0548 57050000 		.4byte	0x557
 1956 054c 19       		.uleb128 0x19
 1957 054d 01       		.uleb128 0x1
 1958 054e 50       		.byte	0x50
 1959 054f 01       		.uleb128 0x1
 1960 0550 31       		.byte	0x31
 1961 0551 19       		.uleb128 0x19
 1962 0552 01       		.uleb128 0x1
 1963 0553 51       		.byte	0x51
 1964 0554 01       		.uleb128 0x1
 1965 0555 37       		.byte	0x37
 1966 0556 00       		.byte	0
 1967 0557 18       		.uleb128 0x18
 1968 0558 1E000000 		.4byte	.LVL41
 1969 055c B5070000 		.4byte	0x7b5
 1970 0560 6A050000 		.4byte	0x56a
 1971 0564 19       		.uleb128 0x19
 1972 0565 01       		.uleb128 0x1
 1973 0566 50       		.byte	0x50
 1974 0567 01       		.uleb128 0x1
 1975 0568 31       		.byte	0x31
 1976 0569 00       		.byte	0
 1977 056a 18       		.uleb128 0x18
 1978 056b 2A000000 		.4byte	.LVL42
 1979 056f AA070000 		.4byte	0x7aa
 1980 0573 82050000 		.4byte	0x582
 1981 0577 19       		.uleb128 0x19
 1982 0578 01       		.uleb128 0x1
 1983 0579 50       		.byte	0x50
 1984 057a 01       		.uleb128 0x1
 1985 057b 30       		.byte	0x30
 1986 057c 19       		.uleb128 0x19
 1987 057d 01       		.uleb128 0x1
 1988 057e 51       		.byte	0x51
 1989 057f 01       		.uleb128 0x1
 1990 0580 37       		.byte	0x37
 1991 0581 00       		.byte	0
 1992 0582 18       		.uleb128 0x18
 1993 0583 32000000 		.4byte	.LVL43
 1994 0587 B5070000 		.4byte	0x7b5
 1995 058b 95050000 		.4byte	0x595
 1996 058f 19       		.uleb128 0x19
 1997 0590 01       		.uleb128 0x1
 1998 0591 50       		.byte	0x50
 1999 0592 01       		.uleb128 0x1
 2000 0593 30       		.byte	0x30
 2001 0594 00       		.byte	0
 2002 0595 0B       		.uleb128 0xb
 2003 0596 36000000 		.4byte	.LVL44
 2004 059a F1040000 		.4byte	0x4f1
 2005 059e 0B       		.uleb128 0xb
 2006 059f 54000000 		.4byte	.LVL45
 2007 05a3 2C020000 		.4byte	0x22c
 2008 05a7 0B       		.uleb128 0xb
 2009 05a8 58000000 		.4byte	.LVL46
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 58


 2010 05ac 77020000 		.4byte	0x277
 2011 05b0 00       		.byte	0
 2012 05b1 08       		.uleb128 0x8
 2013 05b2 44000000 		.4byte	.LASF48
 2014 05b6 01       		.byte	0x1
 2015 05b7 A3       		.byte	0xa3
 2016 05b8 00000000 		.4byte	.LFB2
 2017 05bc 1C000000 		.4byte	.LFE2-.LFB2
 2018 05c0 01       		.uleb128 0x1
 2019 05c1 9C       		.byte	0x9c
 2020 05c2 D9050000 		.4byte	0x5d9
 2021 05c6 0B       		.uleb128 0xb
 2022 05c7 0C000000 		.4byte	.LVL47
 2023 05cb 2A050000 		.4byte	0x52a
 2024 05cf 17       		.uleb128 0x17
 2025 05d0 18000000 		.4byte	.LVL48
 2026 05d4 EA000000 		.4byte	0xea
 2027 05d8 00       		.byte	0
 2028 05d9 0D       		.uleb128 0xd
 2029 05da 9A040000 		.4byte	.LASF49
 2030 05de 01       		.byte	0x1
 2031 05df 1104     		.2byte	0x411
 2032 05e1 00000000 		.4byte	.LFB20
 2033 05e5 10000000 		.4byte	.LFE20-.LFB20
 2034 05e9 01       		.uleb128 0x1
 2035 05ea 9C       		.byte	0x9c
 2036 05eb 10060000 		.4byte	0x610
 2037 05ef 11       		.uleb128 0x11
 2038 05f0 C8000000 		.4byte	0xc8
 2039 05f4 00000000 		.4byte	.LBB96
 2040 05f8 06000000 		.4byte	.LBE96-.LBB96
 2041 05fc 01       		.byte	0x1
 2042 05fd 1304     		.2byte	0x413
 2043 05ff 11       		.uleb128 0x11
 2044 0600 D0000000 		.4byte	0xd0
 2045 0604 06000000 		.4byte	.LBB98
 2046 0608 0A000000 		.4byte	.LBE98-.LBB98
 2047 060c 01       		.byte	0x1
 2048 060d 1404     		.2byte	0x414
 2049 060f 00       		.byte	0
 2050 0610 0D       		.uleb128 0xd
 2051 0611 60020000 		.4byte	.LASF50
 2052 0615 01       		.byte	0x1
 2053 0616 2904     		.2byte	0x429
 2054 0618 00000000 		.4byte	.LFB21
 2055 061c 10000000 		.4byte	.LFE21-.LFB21
 2056 0620 01       		.uleb128 0x1
 2057 0621 9C       		.byte	0x9c
 2058 0622 47060000 		.4byte	0x647
 2059 0626 11       		.uleb128 0x11
 2060 0627 E1000000 		.4byte	0xe1
 2061 062b 00000000 		.4byte	.LBB100
 2062 062f 06000000 		.4byte	.LBE100-.LBB100
 2063 0633 01       		.byte	0x1
 2064 0634 2B04     		.2byte	0x42b
 2065 0636 11       		.uleb128 0x11
 2066 0637 D8000000 		.4byte	0xd8
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 59


 2067 063b 06000000 		.4byte	.LBB102
 2068 063f 0A000000 		.4byte	.LBE102-.LBB102
 2069 0643 01       		.byte	0x1
 2070 0644 2C04     		.2byte	0x42c
 2071 0646 00       		.byte	0
 2072 0647 0D       		.uleb128 0xd
 2073 0648 DC050000 		.4byte	.LASF51
 2074 064c 01       		.byte	0x1
 2075 064d 4204     		.2byte	0x442
 2076 064f 00000000 		.4byte	.LFB22
 2077 0653 18000000 		.4byte	.LFE22-.LFB22
 2078 0657 01       		.uleb128 0x1
 2079 0658 9C       		.byte	0x9c
 2080 0659 6C060000 		.4byte	0x66c
 2081 065d 0E       		.uleb128 0xe
 2082 065e 02030000 		.4byte	.LASF27
 2083 0662 01       		.byte	0x1
 2084 0663 4204     		.2byte	0x442
 2085 0665 6B000000 		.4byte	0x6b
 2086 0669 01       		.uleb128 0x1
 2087 066a 50       		.byte	0x50
 2088 066b 00       		.byte	0
 2089 066c 0F       		.uleb128 0xf
 2090 066d 86010000 		.4byte	.LASF52
 2091 0671 01       		.byte	0x1
 2092 0672 6504     		.2byte	0x465
 2093 0674 6B000000 		.4byte	0x6b
 2094 0678 00000000 		.4byte	.LFB23
 2095 067c 40000000 		.4byte	.LFE23-.LFB23
 2096 0680 01       		.uleb128 0x1
 2097 0681 9C       		.byte	0x9c
 2098 0682 A9060000 		.4byte	0x6a9
 2099 0686 10       		.uleb128 0x10
 2100 0687 BB000000 		.4byte	.LASF28
 2101 068b 01       		.byte	0x1
 2102 068c 6704     		.2byte	0x467
 2103 068e 6B000000 		.4byte	0x6b
 2104 0692 A6010000 		.4byte	.LLST13
 2105 0696 0B       		.uleb128 0xb
 2106 0697 06000000 		.4byte	.LVL50
 2107 069b 10060000 		.4byte	0x610
 2108 069f 0B       		.uleb128 0xb
 2109 06a0 2E000000 		.4byte	.LVL54
 2110 06a4 D9050000 		.4byte	0x5d9
 2111 06a8 00       		.byte	0
 2112 06a9 1A       		.uleb128 0x1a
 2113 06aa 10050000 		.4byte	.LASF53
 2114 06ae 01       		.byte	0x1
 2115 06af 22       		.byte	0x22
 2116 06b0 6B000000 		.4byte	0x6b
 2117 06b4 05       		.uleb128 0x5
 2118 06b5 03       		.byte	0x3
 2119 06b6 00000000 		.4byte	SPI_Altitude_initVar
 2120 06ba 1A       		.uleb128 0x1a
 2121 06bb A3000000 		.4byte	.LASF54
 2122 06bf 01       		.byte	0x1
 2123 06c0 24       		.byte	0x24
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 60


 2124 06c1 A4000000 		.4byte	0xa4
 2125 06c5 05       		.uleb128 0x5
 2126 06c6 03       		.byte	0x3
 2127 06c7 00000000 		.4byte	SPI_Altitude_swStatusTx
 2128 06cb 1A       		.uleb128 0x1a
 2129 06cc 7C030000 		.4byte	.LASF55
 2130 06d0 01       		.byte	0x1
 2131 06d1 25       		.byte	0x25
 2132 06d2 A4000000 		.4byte	0xa4
 2133 06d6 05       		.uleb128 0x5
 2134 06d7 03       		.byte	0x3
 2135 06d8 00000000 		.4byte	SPI_Altitude_swStatusRx
 2136 06dc 1B       		.uleb128 0x1b
 2137 06dd A4000000 		.4byte	0xa4
 2138 06e1 EC060000 		.4byte	0x6ec
 2139 06e5 1C       		.uleb128 0x1c
 2140 06e6 C1000000 		.4byte	0xc1
 2141 06ea 07       		.byte	0x7
 2142 06eb 00       		.byte	0
 2143 06ec 1A       		.uleb128 0x1a
 2144 06ed EC020000 		.4byte	.LASF56
 2145 06f1 01       		.byte	0x1
 2146 06f2 15       		.byte	0x15
 2147 06f3 FD060000 		.4byte	0x6fd
 2148 06f7 05       		.uleb128 0x5
 2149 06f8 03       		.byte	0x3
 2150 06f9 00000000 		.4byte	SPI_Altitude_txBuffer
 2151 06fd 05       		.uleb128 0x5
 2152 06fe DC060000 		.4byte	0x6dc
 2153 0702 1A       		.uleb128 0x1a
 2154 0703 BB050000 		.4byte	.LASF57
 2155 0707 01       		.byte	0x1
 2156 0708 17       		.byte	0x17
 2157 0709 A4000000 		.4byte	0xa4
 2158 070d 05       		.uleb128 0x5
 2159 070e 03       		.byte	0x3
 2160 070f 00000000 		.4byte	SPI_Altitude_txBufferRead
 2161 0713 1A       		.uleb128 0x1a
 2162 0714 80050000 		.4byte	.LASF58
 2163 0718 01       		.byte	0x1
 2164 0719 18       		.byte	0x18
 2165 071a A4000000 		.4byte	0xa4
 2166 071e 05       		.uleb128 0x5
 2167 071f 03       		.byte	0x3
 2168 0720 00000000 		.4byte	SPI_Altitude_txBufferWrite
 2169 0724 1A       		.uleb128 0x1a
 2170 0725 F6040000 		.4byte	.LASF59
 2171 0729 01       		.byte	0x1
 2172 072a 16       		.byte	0x16
 2173 072b A4000000 		.4byte	0xa4
 2174 072f 05       		.uleb128 0x5
 2175 0730 03       		.byte	0x3
 2176 0731 00000000 		.4byte	SPI_Altitude_txBufferFull
 2177 0735 1A       		.uleb128 0x1a
 2178 0736 2E000000 		.4byte	.LASF60
 2179 073a 01       		.byte	0x1
 2180 073b 1C       		.byte	0x1c
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 61


 2181 073c 46070000 		.4byte	0x746
 2182 0740 05       		.uleb128 0x5
 2183 0741 03       		.byte	0x3
 2184 0742 00000000 		.4byte	SPI_Altitude_rxBuffer
 2185 0746 05       		.uleb128 0x5
 2186 0747 DC060000 		.4byte	0x6dc
 2187 074b 1A       		.uleb128 0x1a
 2188 074c 57000000 		.4byte	.LASF61
 2189 0750 01       		.byte	0x1
 2190 0751 1E       		.byte	0x1e
 2191 0752 A4000000 		.4byte	0xa4
 2192 0756 05       		.uleb128 0x5
 2193 0757 03       		.byte	0x3
 2194 0758 00000000 		.4byte	SPI_Altitude_rxBufferRead
 2195 075c 1A       		.uleb128 0x1a
 2196 075d 71000000 		.4byte	.LASF62
 2197 0761 01       		.byte	0x1
 2198 0762 1F       		.byte	0x1f
 2199 0763 A4000000 		.4byte	0xa4
 2200 0767 05       		.uleb128 0x5
 2201 0768 03       		.byte	0x3
 2202 0769 00000000 		.4byte	SPI_Altitude_rxBufferWrite
 2203 076d 1A       		.uleb128 0x1a
 2204 076e 09030000 		.4byte	.LASF63
 2205 0772 01       		.byte	0x1
 2206 0773 1D       		.byte	0x1d
 2207 0774 A4000000 		.4byte	0xa4
 2208 0778 05       		.uleb128 0x5
 2209 0779 03       		.byte	0x3
 2210 077a 00000000 		.4byte	SPI_Altitude_rxBufferFull
 2211 077e 1D       		.uleb128 0x1d
 2212 077f 8A020000 		.4byte	.LASF64
 2213 0783 8A020000 		.4byte	.LASF64
 2214 0787 03       		.byte	0x3
 2215 0788 7D       		.byte	0x7d
 2216 0789 1D       		.uleb128 0x1d
 2217 078a 18000000 		.4byte	.LASF65
 2218 078e 18000000 		.4byte	.LASF65
 2219 0792 03       		.byte	0x3
 2220 0793 7E       		.byte	0x7e
 2221 0794 1D       		.uleb128 0x1d
 2222 0795 37020000 		.4byte	.LASF66
 2223 0799 37020000 		.4byte	.LASF66
 2224 079d 04       		.byte	0x4
 2225 079e 27       		.byte	0x27
 2226 079f 1D       		.uleb128 0x1d
 2227 07a0 C8020000 		.4byte	.LASF67
 2228 07a4 C8020000 		.4byte	.LASF67
 2229 07a8 04       		.byte	0x4
 2230 07a9 28       		.byte	0x28
 2231 07aa 1D       		.uleb128 0x1d
 2232 07ab 23030000 		.4byte	.LASF68
 2233 07af 23030000 		.4byte	.LASF68
 2234 07b3 03       		.byte	0x3
 2235 07b4 8B       		.byte	0x8b
 2236 07b5 1D       		.uleb128 0x1d
 2237 07b6 B9020000 		.4byte	.LASF69
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 62


 2238 07ba B9020000 		.4byte	.LASF69
 2239 07be 03       		.byte	0x3
 2240 07bf 88       		.byte	0x88
 2241 07c0 00       		.byte	0
 2242              		.section	.debug_abbrev,"",%progbits
 2243              	.Ldebug_abbrev0:
 2244 0000 01       		.uleb128 0x1
 2245 0001 11       		.uleb128 0x11
 2246 0002 01       		.byte	0x1
 2247 0003 25       		.uleb128 0x25
 2248 0004 0E       		.uleb128 0xe
 2249 0005 13       		.uleb128 0x13
 2250 0006 0B       		.uleb128 0xb
 2251 0007 03       		.uleb128 0x3
 2252 0008 0E       		.uleb128 0xe
 2253 0009 1B       		.uleb128 0x1b
 2254 000a 0E       		.uleb128 0xe
 2255 000b 55       		.uleb128 0x55
 2256 000c 17       		.uleb128 0x17
 2257 000d 11       		.uleb128 0x11
 2258 000e 01       		.uleb128 0x1
 2259 000f 10       		.uleb128 0x10
 2260 0010 17       		.uleb128 0x17
 2261 0011 00       		.byte	0
 2262 0012 00       		.byte	0
 2263 0013 02       		.uleb128 0x2
 2264 0014 24       		.uleb128 0x24
 2265 0015 00       		.byte	0
 2266 0016 0B       		.uleb128 0xb
 2267 0017 0B       		.uleb128 0xb
 2268 0018 3E       		.uleb128 0x3e
 2269 0019 0B       		.uleb128 0xb
 2270 001a 03       		.uleb128 0x3
 2271 001b 0E       		.uleb128 0xe
 2272 001c 00       		.byte	0
 2273 001d 00       		.byte	0
 2274 001e 03       		.uleb128 0x3
 2275 001f 24       		.uleb128 0x24
 2276 0020 00       		.byte	0
 2277 0021 0B       		.uleb128 0xb
 2278 0022 0B       		.uleb128 0xb
 2279 0023 3E       		.uleb128 0x3e
 2280 0024 0B       		.uleb128 0xb
 2281 0025 03       		.uleb128 0x3
 2282 0026 08       		.uleb128 0x8
 2283 0027 00       		.byte	0
 2284 0028 00       		.byte	0
 2285 0029 04       		.uleb128 0x4
 2286 002a 16       		.uleb128 0x16
 2287 002b 00       		.byte	0
 2288 002c 03       		.uleb128 0x3
 2289 002d 0E       		.uleb128 0xe
 2290 002e 3A       		.uleb128 0x3a
 2291 002f 0B       		.uleb128 0xb
 2292 0030 3B       		.uleb128 0x3b
 2293 0031 05       		.uleb128 0x5
 2294 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 63


 2295 0033 13       		.uleb128 0x13
 2296 0034 00       		.byte	0
 2297 0035 00       		.byte	0
 2298 0036 05       		.uleb128 0x5
 2299 0037 35       		.uleb128 0x35
 2300 0038 00       		.byte	0
 2301 0039 49       		.uleb128 0x49
 2302 003a 13       		.uleb128 0x13
 2303 003b 00       		.byte	0
 2304 003c 00       		.byte	0
 2305 003d 06       		.uleb128 0x6
 2306 003e 2E       		.uleb128 0x2e
 2307 003f 00       		.byte	0
 2308 0040 3F       		.uleb128 0x3f
 2309 0041 19       		.uleb128 0x19
 2310 0042 03       		.uleb128 0x3
 2311 0043 0E       		.uleb128 0xe
 2312 0044 3A       		.uleb128 0x3a
 2313 0045 0B       		.uleb128 0xb
 2314 0046 3B       		.uleb128 0x3b
 2315 0047 0B       		.uleb128 0xb
 2316 0048 27       		.uleb128 0x27
 2317 0049 19       		.uleb128 0x19
 2318 004a 20       		.uleb128 0x20
 2319 004b 0B       		.uleb128 0xb
 2320 004c 00       		.byte	0
 2321 004d 00       		.byte	0
 2322 004e 07       		.uleb128 0x7
 2323 004f 2E       		.uleb128 0x2e
 2324 0050 00       		.byte	0
 2325 0051 3F       		.uleb128 0x3f
 2326 0052 19       		.uleb128 0x19
 2327 0053 03       		.uleb128 0x3
 2328 0054 0E       		.uleb128 0xe
 2329 0055 3A       		.uleb128 0x3a
 2330 0056 0B       		.uleb128 0xb
 2331 0057 3B       		.uleb128 0x3b
 2332 0058 05       		.uleb128 0x5
 2333 0059 27       		.uleb128 0x27
 2334 005a 19       		.uleb128 0x19
 2335 005b 20       		.uleb128 0x20
 2336 005c 0B       		.uleb128 0xb
 2337 005d 00       		.byte	0
 2338 005e 00       		.byte	0
 2339 005f 08       		.uleb128 0x8
 2340 0060 2E       		.uleb128 0x2e
 2341 0061 01       		.byte	0x1
 2342 0062 3F       		.uleb128 0x3f
 2343 0063 19       		.uleb128 0x19
 2344 0064 03       		.uleb128 0x3
 2345 0065 0E       		.uleb128 0xe
 2346 0066 3A       		.uleb128 0x3a
 2347 0067 0B       		.uleb128 0xb
 2348 0068 3B       		.uleb128 0x3b
 2349 0069 0B       		.uleb128 0xb
 2350 006a 27       		.uleb128 0x27
 2351 006b 19       		.uleb128 0x19
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 64


 2352 006c 11       		.uleb128 0x11
 2353 006d 01       		.uleb128 0x1
 2354 006e 12       		.uleb128 0x12
 2355 006f 06       		.uleb128 0x6
 2356 0070 40       		.uleb128 0x40
 2357 0071 18       		.uleb128 0x18
 2358 0072 9742     		.uleb128 0x2117
 2359 0074 19       		.uleb128 0x19
 2360 0075 01       		.uleb128 0x1
 2361 0076 13       		.uleb128 0x13
 2362 0077 00       		.byte	0
 2363 0078 00       		.byte	0
 2364 0079 09       		.uleb128 0x9
 2365 007a 34       		.uleb128 0x34
 2366 007b 00       		.byte	0
 2367 007c 03       		.uleb128 0x3
 2368 007d 0E       		.uleb128 0xe
 2369 007e 3A       		.uleb128 0x3a
 2370 007f 0B       		.uleb128 0xb
 2371 0080 3B       		.uleb128 0x3b
 2372 0081 0B       		.uleb128 0xb
 2373 0082 49       		.uleb128 0x49
 2374 0083 13       		.uleb128 0x13
 2375 0084 02       		.uleb128 0x2
 2376 0085 17       		.uleb128 0x17
 2377 0086 00       		.byte	0
 2378 0087 00       		.byte	0
 2379 0088 0A       		.uleb128 0xa
 2380 0089 1D       		.uleb128 0x1d
 2381 008a 00       		.byte	0
 2382 008b 31       		.uleb128 0x31
 2383 008c 13       		.uleb128 0x13
 2384 008d 11       		.uleb128 0x11
 2385 008e 01       		.uleb128 0x1
 2386 008f 12       		.uleb128 0x12
 2387 0090 06       		.uleb128 0x6
 2388 0091 58       		.uleb128 0x58
 2389 0092 0B       		.uleb128 0xb
 2390 0093 59       		.uleb128 0x59
 2391 0094 0B       		.uleb128 0xb
 2392 0095 00       		.byte	0
 2393 0096 00       		.byte	0
 2394 0097 0B       		.uleb128 0xb
 2395 0098 898201   		.uleb128 0x4109
 2396 009b 00       		.byte	0
 2397 009c 11       		.uleb128 0x11
 2398 009d 01       		.uleb128 0x1
 2399 009e 31       		.uleb128 0x31
 2400 009f 13       		.uleb128 0x13
 2401 00a0 00       		.byte	0
 2402 00a1 00       		.byte	0
 2403 00a2 0C       		.uleb128 0xc
 2404 00a3 2E       		.uleb128 0x2e
 2405 00a4 00       		.byte	0
 2406 00a5 31       		.uleb128 0x31
 2407 00a6 13       		.uleb128 0x13
 2408 00a7 11       		.uleb128 0x11
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 65


 2409 00a8 01       		.uleb128 0x1
 2410 00a9 12       		.uleb128 0x12
 2411 00aa 06       		.uleb128 0x6
 2412 00ab 40       		.uleb128 0x40
 2413 00ac 18       		.uleb128 0x18
 2414 00ad 9742     		.uleb128 0x2117
 2415 00af 19       		.uleb128 0x19
 2416 00b0 00       		.byte	0
 2417 00b1 00       		.byte	0
 2418 00b2 0D       		.uleb128 0xd
 2419 00b3 2E       		.uleb128 0x2e
 2420 00b4 01       		.byte	0x1
 2421 00b5 3F       		.uleb128 0x3f
 2422 00b6 19       		.uleb128 0x19
 2423 00b7 03       		.uleb128 0x3
 2424 00b8 0E       		.uleb128 0xe
 2425 00b9 3A       		.uleb128 0x3a
 2426 00ba 0B       		.uleb128 0xb
 2427 00bb 3B       		.uleb128 0x3b
 2428 00bc 05       		.uleb128 0x5
 2429 00bd 27       		.uleb128 0x27
 2430 00be 19       		.uleb128 0x19
 2431 00bf 11       		.uleb128 0x11
 2432 00c0 01       		.uleb128 0x1
 2433 00c1 12       		.uleb128 0x12
 2434 00c2 06       		.uleb128 0x6
 2435 00c3 40       		.uleb128 0x40
 2436 00c4 18       		.uleb128 0x18
 2437 00c5 9742     		.uleb128 0x2117
 2438 00c7 19       		.uleb128 0x19
 2439 00c8 01       		.uleb128 0x1
 2440 00c9 13       		.uleb128 0x13
 2441 00ca 00       		.byte	0
 2442 00cb 00       		.byte	0
 2443 00cc 0E       		.uleb128 0xe
 2444 00cd 05       		.uleb128 0x5
 2445 00ce 00       		.byte	0
 2446 00cf 03       		.uleb128 0x3
 2447 00d0 0E       		.uleb128 0xe
 2448 00d1 3A       		.uleb128 0x3a
 2449 00d2 0B       		.uleb128 0xb
 2450 00d3 3B       		.uleb128 0x3b
 2451 00d4 05       		.uleb128 0x5
 2452 00d5 49       		.uleb128 0x49
 2453 00d6 13       		.uleb128 0x13
 2454 00d7 02       		.uleb128 0x2
 2455 00d8 18       		.uleb128 0x18
 2456 00d9 00       		.byte	0
 2457 00da 00       		.byte	0
 2458 00db 0F       		.uleb128 0xf
 2459 00dc 2E       		.uleb128 0x2e
 2460 00dd 01       		.byte	0x1
 2461 00de 3F       		.uleb128 0x3f
 2462 00df 19       		.uleb128 0x19
 2463 00e0 03       		.uleb128 0x3
 2464 00e1 0E       		.uleb128 0xe
 2465 00e2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 66


 2466 00e3 0B       		.uleb128 0xb
 2467 00e4 3B       		.uleb128 0x3b
 2468 00e5 05       		.uleb128 0x5
 2469 00e6 27       		.uleb128 0x27
 2470 00e7 19       		.uleb128 0x19
 2471 00e8 49       		.uleb128 0x49
 2472 00e9 13       		.uleb128 0x13
 2473 00ea 11       		.uleb128 0x11
 2474 00eb 01       		.uleb128 0x1
 2475 00ec 12       		.uleb128 0x12
 2476 00ed 06       		.uleb128 0x6
 2477 00ee 40       		.uleb128 0x40
 2478 00ef 18       		.uleb128 0x18
 2479 00f0 9742     		.uleb128 0x2117
 2480 00f2 19       		.uleb128 0x19
 2481 00f3 01       		.uleb128 0x1
 2482 00f4 13       		.uleb128 0x13
 2483 00f5 00       		.byte	0
 2484 00f6 00       		.byte	0
 2485 00f7 10       		.uleb128 0x10
 2486 00f8 34       		.uleb128 0x34
 2487 00f9 00       		.byte	0
 2488 00fa 03       		.uleb128 0x3
 2489 00fb 0E       		.uleb128 0xe
 2490 00fc 3A       		.uleb128 0x3a
 2491 00fd 0B       		.uleb128 0xb
 2492 00fe 3B       		.uleb128 0x3b
 2493 00ff 05       		.uleb128 0x5
 2494 0100 49       		.uleb128 0x49
 2495 0101 13       		.uleb128 0x13
 2496 0102 02       		.uleb128 0x2
 2497 0103 17       		.uleb128 0x17
 2498 0104 00       		.byte	0
 2499 0105 00       		.byte	0
 2500 0106 11       		.uleb128 0x11
 2501 0107 1D       		.uleb128 0x1d
 2502 0108 00       		.byte	0
 2503 0109 31       		.uleb128 0x31
 2504 010a 13       		.uleb128 0x13
 2505 010b 11       		.uleb128 0x11
 2506 010c 01       		.uleb128 0x1
 2507 010d 12       		.uleb128 0x12
 2508 010e 06       		.uleb128 0x6
 2509 010f 58       		.uleb128 0x58
 2510 0110 0B       		.uleb128 0xb
 2511 0111 59       		.uleb128 0x59
 2512 0112 05       		.uleb128 0x5
 2513 0113 00       		.byte	0
 2514 0114 00       		.byte	0
 2515 0115 12       		.uleb128 0x12
 2516 0116 1D       		.uleb128 0x1d
 2517 0117 00       		.byte	0
 2518 0118 31       		.uleb128 0x31
 2519 0119 13       		.uleb128 0x13
 2520 011a 52       		.uleb128 0x52
 2521 011b 01       		.uleb128 0x1
 2522 011c 55       		.uleb128 0x55
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 67


 2523 011d 17       		.uleb128 0x17
 2524 011e 58       		.uleb128 0x58
 2525 011f 0B       		.uleb128 0xb
 2526 0120 59       		.uleb128 0x59
 2527 0121 05       		.uleb128 0x5
 2528 0122 00       		.byte	0
 2529 0123 00       		.byte	0
 2530 0124 13       		.uleb128 0x13
 2531 0125 34       		.uleb128 0x34
 2532 0126 00       		.byte	0
 2533 0127 03       		.uleb128 0x3
 2534 0128 0E       		.uleb128 0xe
 2535 0129 3A       		.uleb128 0x3a
 2536 012a 0B       		.uleb128 0xb
 2537 012b 3B       		.uleb128 0x3b
 2538 012c 05       		.uleb128 0x5
 2539 012d 49       		.uleb128 0x49
 2540 012e 13       		.uleb128 0x13
 2541 012f 02       		.uleb128 0x2
 2542 0130 18       		.uleb128 0x18
 2543 0131 00       		.byte	0
 2544 0132 00       		.byte	0
 2545 0133 14       		.uleb128 0x14
 2546 0134 05       		.uleb128 0x5
 2547 0135 00       		.byte	0
 2548 0136 03       		.uleb128 0x3
 2549 0137 0E       		.uleb128 0xe
 2550 0138 3A       		.uleb128 0x3a
 2551 0139 0B       		.uleb128 0xb
 2552 013a 3B       		.uleb128 0x3b
 2553 013b 05       		.uleb128 0x5
 2554 013c 49       		.uleb128 0x49
 2555 013d 13       		.uleb128 0x13
 2556 013e 02       		.uleb128 0x2
 2557 013f 17       		.uleb128 0x17
 2558 0140 00       		.byte	0
 2559 0141 00       		.byte	0
 2560 0142 15       		.uleb128 0x15
 2561 0143 0F       		.uleb128 0xf
 2562 0144 00       		.byte	0
 2563 0145 0B       		.uleb128 0xb
 2564 0146 0B       		.uleb128 0xb
 2565 0147 49       		.uleb128 0x49
 2566 0148 13       		.uleb128 0x13
 2567 0149 00       		.byte	0
 2568 014a 00       		.byte	0
 2569 014b 16       		.uleb128 0x16
 2570 014c 26       		.uleb128 0x26
 2571 014d 00       		.byte	0
 2572 014e 49       		.uleb128 0x49
 2573 014f 13       		.uleb128 0x13
 2574 0150 00       		.byte	0
 2575 0151 00       		.byte	0
 2576 0152 17       		.uleb128 0x17
 2577 0153 898201   		.uleb128 0x4109
 2578 0156 00       		.byte	0
 2579 0157 11       		.uleb128 0x11
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 68


 2580 0158 01       		.uleb128 0x1
 2581 0159 9542     		.uleb128 0x2115
 2582 015b 19       		.uleb128 0x19
 2583 015c 31       		.uleb128 0x31
 2584 015d 13       		.uleb128 0x13
 2585 015e 00       		.byte	0
 2586 015f 00       		.byte	0
 2587 0160 18       		.uleb128 0x18
 2588 0161 898201   		.uleb128 0x4109
 2589 0164 01       		.byte	0x1
 2590 0165 11       		.uleb128 0x11
 2591 0166 01       		.uleb128 0x1
 2592 0167 31       		.uleb128 0x31
 2593 0168 13       		.uleb128 0x13
 2594 0169 01       		.uleb128 0x1
 2595 016a 13       		.uleb128 0x13
 2596 016b 00       		.byte	0
 2597 016c 00       		.byte	0
 2598 016d 19       		.uleb128 0x19
 2599 016e 8A8201   		.uleb128 0x410a
 2600 0171 00       		.byte	0
 2601 0172 02       		.uleb128 0x2
 2602 0173 18       		.uleb128 0x18
 2603 0174 9142     		.uleb128 0x2111
 2604 0176 18       		.uleb128 0x18
 2605 0177 00       		.byte	0
 2606 0178 00       		.byte	0
 2607 0179 1A       		.uleb128 0x1a
 2608 017a 34       		.uleb128 0x34
 2609 017b 00       		.byte	0
 2610 017c 03       		.uleb128 0x3
 2611 017d 0E       		.uleb128 0xe
 2612 017e 3A       		.uleb128 0x3a
 2613 017f 0B       		.uleb128 0xb
 2614 0180 3B       		.uleb128 0x3b
 2615 0181 0B       		.uleb128 0xb
 2616 0182 49       		.uleb128 0x49
 2617 0183 13       		.uleb128 0x13
 2618 0184 3F       		.uleb128 0x3f
 2619 0185 19       		.uleb128 0x19
 2620 0186 02       		.uleb128 0x2
 2621 0187 18       		.uleb128 0x18
 2622 0188 00       		.byte	0
 2623 0189 00       		.byte	0
 2624 018a 1B       		.uleb128 0x1b
 2625 018b 01       		.uleb128 0x1
 2626 018c 01       		.byte	0x1
 2627 018d 49       		.uleb128 0x49
 2628 018e 13       		.uleb128 0x13
 2629 018f 01       		.uleb128 0x1
 2630 0190 13       		.uleb128 0x13
 2631 0191 00       		.byte	0
 2632 0192 00       		.byte	0
 2633 0193 1C       		.uleb128 0x1c
 2634 0194 21       		.uleb128 0x21
 2635 0195 00       		.byte	0
 2636 0196 49       		.uleb128 0x49
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 69


 2637 0197 13       		.uleb128 0x13
 2638 0198 2F       		.uleb128 0x2f
 2639 0199 0B       		.uleb128 0xb
 2640 019a 00       		.byte	0
 2641 019b 00       		.byte	0
 2642 019c 1D       		.uleb128 0x1d
 2643 019d 2E       		.uleb128 0x2e
 2644 019e 00       		.byte	0
 2645 019f 3F       		.uleb128 0x3f
 2646 01a0 19       		.uleb128 0x19
 2647 01a1 3C       		.uleb128 0x3c
 2648 01a2 19       		.uleb128 0x19
 2649 01a3 6E       		.uleb128 0x6e
 2650 01a4 0E       		.uleb128 0xe
 2651 01a5 03       		.uleb128 0x3
 2652 01a6 0E       		.uleb128 0xe
 2653 01a7 3A       		.uleb128 0x3a
 2654 01a8 0B       		.uleb128 0xb
 2655 01a9 3B       		.uleb128 0x3b
 2656 01aa 0B       		.uleb128 0xb
 2657 01ab 00       		.byte	0
 2658 01ac 00       		.byte	0
 2659 01ad 00       		.byte	0
 2660              		.section	.debug_loc,"",%progbits
 2661              	.Ldebug_loc0:
 2662              	.LLST0:
 2663 0000 06000000 		.4byte	.LVL0
 2664 0004 29000000 		.4byte	.LVL1-1
 2665 0008 0100     		.2byte	0x1
 2666 000a 50       		.byte	0x50
 2667 000b 00000000 		.4byte	0
 2668 000f 00000000 		.4byte	0
 2669              	.LLST1:
 2670 0013 06000000 		.4byte	.LVL3
 2671 0017 21000000 		.4byte	.LVL4-1
 2672 001b 0100     		.2byte	0x1
 2673 001d 50       		.byte	0x50
 2674 001e 00000000 		.4byte	0
 2675 0022 00000000 		.4byte	0
 2676              	.LLST2:
 2677 0026 12000000 		.4byte	.LVL8
 2678 002a 1A000000 		.4byte	.LVL9
 2679 002e 0800     		.2byte	0x8
 2680 0030 73       		.byte	0x73
 2681 0031 00       		.sleb128 0
 2682 0032 39       		.byte	0x39
 2683 0033 1A       		.byte	0x1a
 2684 0034 70       		.byte	0x70
 2685 0035 00       		.sleb128 0
 2686 0036 21       		.byte	0x21
 2687 0037 9F       		.byte	0x9f
 2688 0038 00000000 		.4byte	0
 2689 003c 00000000 		.4byte	0
 2690              	.LLST3:
 2691 0040 12000000 		.4byte	.LVL10
 2692 0044 1A000000 		.4byte	.LVL11
 2693 0048 0900     		.2byte	0x9
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 70


 2694 004a 73       		.byte	0x73
 2695 004b 00       		.sleb128 0
 2696 004c 08       		.byte	0x8
 2697 004d 40       		.byte	0x40
 2698 004e 1A       		.byte	0x1a
 2699 004f 70       		.byte	0x70
 2700 0050 00       		.sleb128 0
 2701 0051 21       		.byte	0x21
 2702 0052 9F       		.byte	0x9f
 2703 0053 00000000 		.4byte	0
 2704 0057 00000000 		.4byte	0
 2705              	.LLST4:
 2706 005b 36000000 		.4byte	.LVL18
 2707 005f 3C000000 		.4byte	.LVL19
 2708 0063 0100     		.2byte	0x1
 2709 0065 52       		.byte	0x52
 2710 0066 3C000000 		.4byte	.LVL19
 2711 006a 4A000000 		.4byte	.LVL20
 2712 006e 0500     		.2byte	0x5
 2713 0070 03       		.byte	0x3
 2714 0071 00000000 		.4byte	SPI_Altitude_swStatusTx
 2715 0075 4C000000 		.4byte	.LVL21
 2716 0079 54000000 		.4byte	.LVL22
 2717 007d 0500     		.2byte	0x5
 2718 007f 03       		.byte	0x3
 2719 0080 00000000 		.4byte	SPI_Altitude_swStatusTx
 2720 0084 00000000 		.4byte	0
 2721 0088 00000000 		.4byte	0
 2722              	.LLST5:
 2723 008c 08000000 		.4byte	.LVL13
 2724 0090 14000000 		.4byte	.LVL14
 2725 0094 0100     		.2byte	0x1
 2726 0096 52       		.byte	0x52
 2727 0097 14000000 		.4byte	.LVL14
 2728 009b 16000000 		.4byte	.LVL15
 2729 009f 0100     		.2byte	0x1
 2730 00a1 53       		.byte	0x53
 2731 00a2 16000000 		.4byte	.LVL15
 2732 00a6 18000000 		.4byte	.LVL16
 2733 00aa 0100     		.2byte	0x1
 2734 00ac 52       		.byte	0x52
 2735 00ad 18000000 		.4byte	.LVL16
 2736 00b1 20000000 		.4byte	.LVL17
 2737 00b5 0100     		.2byte	0x1
 2738 00b7 53       		.byte	0x53
 2739 00b8 00000000 		.4byte	0
 2740 00bc 00000000 		.4byte	0
 2741              	.LLST6:
 2742 00c0 2C000000 		.4byte	.LVL24
 2743 00c4 2E000000 		.4byte	.LVL25
 2744 00c8 0100     		.2byte	0x1
 2745 00ca 50       		.byte	0x50
 2746 00cb 30000000 		.4byte	.LVL26
 2747 00cf 48000000 		.4byte	.LFE14
 2748 00d3 0100     		.2byte	0x1
 2749 00d5 50       		.byte	0x50
 2750 00d6 00000000 		.4byte	0
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 71


 2751 00da 00000000 		.4byte	0
 2752              	.LLST7:
 2753 00de 2C000000 		.4byte	.LVL27
 2754 00e2 2E000000 		.4byte	.LVL28
 2755 00e6 0100     		.2byte	0x1
 2756 00e8 50       		.byte	0x50
 2757 00e9 30000000 		.4byte	.LVL29
 2758 00ed 48000000 		.4byte	.LFE15
 2759 00f1 0100     		.2byte	0x1
 2760 00f3 50       		.byte	0x50
 2761 00f4 00000000 		.4byte	0
 2762 00f8 00000000 		.4byte	0
 2763              	.LLST8:
 2764 00fc 06000000 		.4byte	.LVL30
 2765 0100 1B000000 		.4byte	.LVL31-1
 2766 0104 0100     		.2byte	0x1
 2767 0106 50       		.byte	0x50
 2768 0107 00000000 		.4byte	0
 2769 010b 00000000 		.4byte	0
 2770              	.LLST9:
 2771 010f 00000000 		.4byte	.LVL32
 2772 0113 06000000 		.4byte	.LVL33
 2773 0117 0100     		.2byte	0x1
 2774 0119 50       		.byte	0x50
 2775 011a 06000000 		.4byte	.LVL33
 2776 011e 18000000 		.4byte	.LFE18
 2777 0122 0400     		.2byte	0x4
 2778 0124 F3       		.byte	0xf3
 2779 0125 01       		.uleb128 0x1
 2780 0126 50       		.byte	0x50
 2781 0127 9F       		.byte	0x9f
 2782 0128 00000000 		.4byte	0
 2783 012c 00000000 		.4byte	0
 2784              	.LLST10:
 2785 0130 00000000 		.4byte	.LVL32
 2786 0134 06000000 		.4byte	.LVL33
 2787 0138 0100     		.2byte	0x1
 2788 013a 51       		.byte	0x51
 2789 013b 06000000 		.4byte	.LVL33
 2790 013f 0E000000 		.4byte	.LVL35
 2791 0143 0100     		.2byte	0x1
 2792 0145 54       		.byte	0x54
 2793 0146 14000000 		.4byte	.LVL37
 2794 014a 18000000 		.4byte	.LFE18
 2795 014e 0100     		.2byte	0x1
 2796 0150 54       		.byte	0x54
 2797 0151 00000000 		.4byte	0
 2798 0155 00000000 		.4byte	0
 2799              	.LLST11:
 2800 0159 00000000 		.4byte	.LVL32
 2801 015d 06000000 		.4byte	.LVL33
 2802 0161 0200     		.2byte	0x2
 2803 0163 30       		.byte	0x30
 2804 0164 9F       		.byte	0x9f
 2805 0165 06000000 		.4byte	.LVL33
 2806 0169 0C000000 		.4byte	.LVL34
 2807 016d 0900     		.2byte	0x9
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 72


 2808 016f 75       		.byte	0x75
 2809 0170 00       		.sleb128 0
 2810 0171 F3       		.byte	0xf3
 2811 0172 01       		.uleb128 0x1
 2812 0173 50       		.byte	0x50
 2813 0174 31       		.byte	0x31
 2814 0175 1C       		.byte	0x1c
 2815 0176 1C       		.byte	0x1c
 2816 0177 9F       		.byte	0x9f
 2817 0178 12000000 		.4byte	.LVL36
 2818 017c 18000000 		.4byte	.LFE18
 2819 0180 0900     		.2byte	0x9
 2820 0182 75       		.byte	0x75
 2821 0183 00       		.sleb128 0
 2822 0184 F3       		.byte	0xf3
 2823 0185 01       		.uleb128 0x1
 2824 0186 50       		.byte	0x50
 2825 0187 31       		.byte	0x31
 2826 0188 1C       		.byte	0x1c
 2827 0189 1C       		.byte	0x1c
 2828 018a 9F       		.byte	0x9f
 2829 018b 00000000 		.4byte	0
 2830 018f 00000000 		.4byte	0
 2831              	.LLST12:
 2832 0193 14000000 		.4byte	.LVL38
 2833 0197 2D000000 		.4byte	.LVL39-1
 2834 019b 0100     		.2byte	0x1
 2835 019d 50       		.byte	0x50
 2836 019e 00000000 		.4byte	0
 2837 01a2 00000000 		.4byte	0
 2838              	.LLST13:
 2839 01a6 10000000 		.4byte	.LVL51
 2840 01aa 1A000000 		.4byte	.LVL52
 2841 01ae 0900     		.2byte	0x9
 2842 01b0 71       		.byte	0x71
 2843 01b1 00       		.sleb128 0
 2844 01b2 08       		.byte	0x8
 2845 01b3 40       		.byte	0x40
 2846 01b4 1A       		.byte	0x1a
 2847 01b5 70       		.byte	0x70
 2848 01b6 00       		.sleb128 0
 2849 01b7 21       		.byte	0x21
 2850 01b8 9F       		.byte	0x9f
 2851 01b9 24000000 		.4byte	.LVL53
 2852 01bd 2D000000 		.4byte	.LVL54-1
 2853 01c1 0600     		.2byte	0x6
 2854 01c3 70       		.byte	0x70
 2855 01c4 00       		.sleb128 0
 2856 01c5 09       		.byte	0x9
 2857 01c6 EF       		.byte	0xef
 2858 01c7 1A       		.byte	0x1a
 2859 01c8 9F       		.byte	0x9f
 2860 01c9 00000000 		.4byte	0
 2861 01cd 00000000 		.4byte	0
 2862              		.section	.debug_aranges,"",%progbits
 2863 0000 D4000000 		.4byte	0xd4
 2864 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 73


 2865 0006 00000000 		.4byte	.Ldebug_info0
 2866 000a 04       		.byte	0x4
 2867 000b 00       		.byte	0
 2868 000c 0000     		.2byte	0
 2869 000e 0000     		.2byte	0
 2870 0010 00000000 		.4byte	.LFB1
 2871 0014 44000000 		.4byte	.LFE1-.LFB1
 2872 0018 00000000 		.4byte	.LFB3
 2873 001c 3C000000 		.4byte	.LFE3-.LFB3
 2874 0020 00000000 		.4byte	.LFB4
 2875 0024 0C000000 		.4byte	.LFE4-.LFB4
 2876 0028 00000000 		.4byte	.LFB5
 2877 002c 0C000000 		.4byte	.LFE5-.LFB5
 2878 0030 00000000 		.4byte	.LFB6
 2879 0034 0C000000 		.4byte	.LFE6-.LFB6
 2880 0038 00000000 		.4byte	.LFB7
 2881 003c 0C000000 		.4byte	.LFE7-.LFB7
 2882 0040 00000000 		.4byte	.LFB8
 2883 0044 0C000000 		.4byte	.LFE8-.LFB8
 2884 0048 00000000 		.4byte	.LFB9
 2885 004c 0C000000 		.4byte	.LFE9-.LFB9
 2886 0050 00000000 		.4byte	.LFB10
 2887 0054 30000000 		.4byte	.LFE10-.LFB10
 2888 0058 00000000 		.4byte	.LFB11
 2889 005c 30000000 		.4byte	.LFE11-.LFB11
 2890 0060 00000000 		.4byte	.LFB12
 2891 0064 C4000000 		.4byte	.LFE12-.LFB12
 2892 0068 00000000 		.4byte	.LFB13
 2893 006c 5C000000 		.4byte	.LFE13-.LFB13
 2894 0070 00000000 		.4byte	.LFB14
 2895 0074 48000000 		.4byte	.LFE14-.LFB14
 2896 0078 00000000 		.4byte	.LFB15
 2897 007c 48000000 		.4byte	.LFE15-.LFB15
 2898 0080 00000000 		.4byte	.LFB16
 2899 0084 48000000 		.4byte	.LFE16-.LFB16
 2900 0088 00000000 		.4byte	.LFB17
 2901 008c 5C000000 		.4byte	.LFE17-.LFB17
 2902 0090 00000000 		.4byte	.LFB18
 2903 0094 18000000 		.4byte	.LFE18-.LFB18
 2904 0098 00000000 		.4byte	.LFB19
 2905 009c 3C000000 		.4byte	.LFE19-.LFB19
 2906 00a0 00000000 		.4byte	.LFB0
 2907 00a4 94000000 		.4byte	.LFE0-.LFB0
 2908 00a8 00000000 		.4byte	.LFB2
 2909 00ac 1C000000 		.4byte	.LFE2-.LFB2
 2910 00b0 00000000 		.4byte	.LFB20
 2911 00b4 10000000 		.4byte	.LFE20-.LFB20
 2912 00b8 00000000 		.4byte	.LFB21
 2913 00bc 10000000 		.4byte	.LFE21-.LFB21
 2914 00c0 00000000 		.4byte	.LFB22
 2915 00c4 18000000 		.4byte	.LFE22-.LFB22
 2916 00c8 00000000 		.4byte	.LFB23
 2917 00cc 40000000 		.4byte	.LFE23-.LFB23
 2918 00d0 00000000 		.4byte	0
 2919 00d4 00000000 		.4byte	0
 2920              		.section	.debug_ranges,"",%progbits
 2921              	.Ldebug_ranges0:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 74


 2922 0000 14000000 		.4byte	.LBB60
 2923 0004 16000000 		.4byte	.LBE60
 2924 0008 1A000000 		.4byte	.LBB63
 2925 000c 1C000000 		.4byte	.LBE63
 2926 0010 00000000 		.4byte	0
 2927 0014 00000000 		.4byte	0
 2928 0018 14000000 		.4byte	.LBB66
 2929 001c 16000000 		.4byte	.LBE66
 2930 0020 1A000000 		.4byte	.LBB69
 2931 0024 1C000000 		.4byte	.LBE69
 2932 0028 00000000 		.4byte	0
 2933 002c 00000000 		.4byte	0
 2934 0030 1C000000 		.4byte	.LBB90
 2935 0034 20000000 		.4byte	.LBE90
 2936 0038 22000000 		.4byte	.LBB93
 2937 003c 24000000 		.4byte	.LBE93
 2938 0040 00000000 		.4byte	0
 2939 0044 00000000 		.4byte	0
 2940 0048 00000000 		.4byte	.LFB1
 2941 004c 44000000 		.4byte	.LFE1
 2942 0050 00000000 		.4byte	.LFB3
 2943 0054 3C000000 		.4byte	.LFE3
 2944 0058 00000000 		.4byte	.LFB4
 2945 005c 0C000000 		.4byte	.LFE4
 2946 0060 00000000 		.4byte	.LFB5
 2947 0064 0C000000 		.4byte	.LFE5
 2948 0068 00000000 		.4byte	.LFB6
 2949 006c 0C000000 		.4byte	.LFE6
 2950 0070 00000000 		.4byte	.LFB7
 2951 0074 0C000000 		.4byte	.LFE7
 2952 0078 00000000 		.4byte	.LFB8
 2953 007c 0C000000 		.4byte	.LFE8
 2954 0080 00000000 		.4byte	.LFB9
 2955 0084 0C000000 		.4byte	.LFE9
 2956 0088 00000000 		.4byte	.LFB10
 2957 008c 30000000 		.4byte	.LFE10
 2958 0090 00000000 		.4byte	.LFB11
 2959 0094 30000000 		.4byte	.LFE11
 2960 0098 00000000 		.4byte	.LFB12
 2961 009c C4000000 		.4byte	.LFE12
 2962 00a0 00000000 		.4byte	.LFB13
 2963 00a4 5C000000 		.4byte	.LFE13
 2964 00a8 00000000 		.4byte	.LFB14
 2965 00ac 48000000 		.4byte	.LFE14
 2966 00b0 00000000 		.4byte	.LFB15
 2967 00b4 48000000 		.4byte	.LFE15
 2968 00b8 00000000 		.4byte	.LFB16
 2969 00bc 48000000 		.4byte	.LFE16
 2970 00c0 00000000 		.4byte	.LFB17
 2971 00c4 5C000000 		.4byte	.LFE17
 2972 00c8 00000000 		.4byte	.LFB18
 2973 00cc 18000000 		.4byte	.LFE18
 2974 00d0 00000000 		.4byte	.LFB19
 2975 00d4 3C000000 		.4byte	.LFE19
 2976 00d8 00000000 		.4byte	.LFB0
 2977 00dc 94000000 		.4byte	.LFE0
 2978 00e0 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 75


 2979 00e4 1C000000 		.4byte	.LFE2
 2980 00e8 00000000 		.4byte	.LFB20
 2981 00ec 10000000 		.4byte	.LFE20
 2982 00f0 00000000 		.4byte	.LFB21
 2983 00f4 10000000 		.4byte	.LFE21
 2984 00f8 00000000 		.4byte	.LFB22
 2985 00fc 18000000 		.4byte	.LFE22
 2986 0100 00000000 		.4byte	.LFB23
 2987 0104 40000000 		.4byte	.LFE23
 2988 0108 00000000 		.4byte	0
 2989 010c 00000000 		.4byte	0
 2990              		.section	.debug_line,"",%progbits
 2991              	.Ldebug_line0:
 2992 0000 37030000 		.section	.debug_str,"MS",%progbits,1
 2992      02006F00 
 2992      00000201 
 2992      FB0E0D00 
 2992      01010101 
 2993              	.LASF35:
 2994 0000 5350495F 		.ascii	"SPI_Altitude_ReadRxData\000"
 2994      416C7469 
 2994      74756465 
 2994      5F526561 
 2994      64527844 
 2995              	.LASF65:
 2996 0018 43794578 		.ascii	"CyExitCriticalSection\000"
 2996      69744372 
 2996      69746963 
 2996      616C5365 
 2996      6374696F 
 2997              	.LASF60:
 2998 002e 5350495F 		.ascii	"SPI_Altitude_rxBuffer\000"
 2998      416C7469 
 2998      74756465 
 2998      5F727842 
 2998      75666665 
 2999              	.LASF48:
 3000 0044 5350495F 		.ascii	"SPI_Altitude_Start\000"
 3000      416C7469 
 3000      74756465 
 3000      5F537461 
 3000      727400
 3001              	.LASF61:
 3002 0057 5350495F 		.ascii	"SPI_Altitude_rxBufferRead\000"
 3002      416C7469 
 3002      74756465 
 3002      5F727842 
 3002      75666665 
 3003              	.LASF62:
 3004 0071 5350495F 		.ascii	"SPI_Altitude_rxBufferWrite\000"
 3004      416C7469 
 3004      74756465 
 3004      5F727842 
 3004      75666665 
 3005              	.LASF7:
 3006 008c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3006      206C6F6E 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 76


 3006      6720756E 
 3006      7369676E 
 3006      65642069 
 3007              	.LASF54:
 3008 00a3 5350495F 		.ascii	"SPI_Altitude_swStatusTx\000"
 3008      416C7469 
 3008      74756465 
 3008      5F737753 
 3008      74617475 
 3009              	.LASF28:
 3010 00bb 746D7053 		.ascii	"tmpStatus\000"
 3010      74617475 
 3010      7300
 3011              	.LASF19:
 3012 00c5 5350495F 		.ascii	"SPI_Altitude_EnableTxInt\000"
 3012      416C7469 
 3012      74756465 
 3012      5F456E61 
 3012      626C6554 
 3013              	.LASF6:
 3014 00de 6C6F6E67 		.ascii	"long long int\000"
 3014      206C6F6E 
 3014      6720696E 
 3014      7400
 3015              	.LASF0:
 3016 00ec 7369676E 		.ascii	"signed char\000"
 3016      65642063 
 3016      68617200 
 3017              	.LASF70:
 3018 00f8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3018      43313120 
 3018      352E342E 
 3018      31203230 
 3018      31363036 
 3019 012b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3019      20726576 
 3019      6973696F 
 3019      6E203233 
 3019      37373135 
 3020 015e 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3020      66756E63 
 3020      74696F6E 
 3020      2D736563 
 3020      74696F6E 
 3021              	.LASF52:
 3022 0186 5350495F 		.ascii	"SPI_Altitude_ReadStatus\000"
 3022      416C7469 
 3022      74756465 
 3022      5F526561 
 3022      64537461 
 3023              	.LASF23:
 3024 019e 5350495F 		.ascii	"SPI_Altitude_Stop\000"
 3024      416C7469 
 3024      74756465 
 3024      5F53746F 
 3024      7000
 3025              	.LASF4:
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 77


 3026 01b0 6C6F6E67 		.ascii	"long int\000"
 3026      20696E74 
 3026      00
 3027              	.LASF34:
 3028 01b9 746D7054 		.ascii	"tmpTxBufferRead\000"
 3028      78427566 
 3028      66657252 
 3028      65616400 
 3029              	.LASF9:
 3030 01c9 75696E74 		.ascii	"uint8\000"
 3030      3800
 3031              	.LASF71:
 3032 01cf 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPI_Altitude.c\000"
 3032      72617465 
 3032      645F536F 
 3032      75726365 
 3032      5C50536F 
 3033              	.LASF12:
 3034 01f5 646F7562 		.ascii	"double\000"
 3034      6C6500
 3035              	.LASF29:
 3036 01fc 5350495F 		.ascii	"SPI_Altitude_ReadTxStatus\000"
 3036      416C7469 
 3036      74756465 
 3036      5F526561 
 3036      64547853 
 3037              	.LASF21:
 3038 0216 5350495F 		.ascii	"SPI_Altitude_DisableTxInt\000"
 3038      416C7469 
 3038      74756465 
 3038      5F446973 
 3038      61626C65 
 3039              	.LASF10:
 3040 0230 75696E74 		.ascii	"uint32\000"
 3040      333200
 3041              	.LASF66:
 3042 0237 5350495F 		.ascii	"SPI_Altitude_IntClock_Start\000"
 3042      416C7469 
 3042      74756465 
 3042      5F496E74 
 3042      436C6F63 
 3043              	.LASF8:
 3044 0253 756E7369 		.ascii	"unsigned int\000"
 3044      676E6564 
 3044      20696E74 
 3044      00
 3045              	.LASF50:
 3046 0260 5350495F 		.ascii	"SPI_Altitude_DisableInt\000"
 3046      416C7469 
 3046      74756465 
 3046      5F446973 
 3046      61626C65 
 3047              	.LASF5:
 3048 0278 6C6F6E67 		.ascii	"long unsigned int\000"
 3048      20756E73 
 3048      69676E65 
 3048      6420696E 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 78


 3048      7400
 3049              	.LASF64:
 3050 028a 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3050      74657243 
 3050      72697469 
 3050      63616C53 
 3050      65637469 
 3051              	.LASF38:
 3052 02a1 73697A65 		.ascii	"size\000"
 3052      00
 3053              	.LASF3:
 3054 02a6 73686F72 		.ascii	"short unsigned int\000"
 3054      7420756E 
 3054      7369676E 
 3054      65642069 
 3054      6E7400
 3055              	.LASF69:
 3056 02b9 4379496E 		.ascii	"CyIntSetVector\000"
 3056      74536574 
 3056      56656374 
 3056      6F7200
 3057              	.LASF67:
 3058 02c8 5350495F 		.ascii	"SPI_Altitude_IntClock_Stop\000"
 3058      416C7469 
 3058      74756465 
 3058      5F496E74 
 3058      436C6F63 
 3059              	.LASF45:
 3060 02e3 62756649 		.ascii	"bufIndex\000"
 3060      6E646578 
 3060      00
 3061              	.LASF56:
 3062 02ec 5350495F 		.ascii	"SPI_Altitude_txBuffer\000"
 3062      416C7469 
 3062      74756465 
 3062      5F747842 
 3062      75666665 
 3063              	.LASF27:
 3064 0302 696E7453 		.ascii	"intSrc\000"
 3064      726300
 3065              	.LASF63:
 3066 0309 5350495F 		.ascii	"SPI_Altitude_rxBufferFull\000"
 3066      416C7469 
 3066      74756465 
 3066      5F727842 
 3066      75666665 
 3067              	.LASF68:
 3068 0323 4379496E 		.ascii	"CyIntSetPriority\000"
 3068      74536574 
 3068      5072696F 
 3068      72697479 
 3068      00
 3069              	.LASF72:
 3070 0334 433A5C55 		.ascii	"C:\\Users\\Nathan\\Documents\\MyBuilds\\Flight Cont"
 3070      73657273 
 3070      5C4E6174 
 3070      68616E5C 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 79


 3070      446F6375 
 3071 0362 726F6C6C 		.ascii	"roller\\ServoControl.cydsn\000"
 3071      65725C53 
 3071      6572766F 
 3071      436F6E74 
 3071      726F6C2E 
 3072              	.LASF55:
 3073 037c 5350495F 		.ascii	"SPI_Altitude_swStatusRx\000"
 3073      416C7469 
 3073      74756465 
 3073      5F737753 
 3073      74617475 
 3074              	.LASF41:
 3075 0394 5350495F 		.ascii	"SPI_Altitude_ClearTxBuffer\000"
 3075      416C7469 
 3075      74756465 
 3075      5F436C65 
 3075      61725478 
 3076              	.LASF15:
 3077 03af 72656733 		.ascii	"reg32\000"
 3077      3200
 3078              	.LASF42:
 3079 03b5 5350495F 		.ascii	"SPI_Altitude_PutArray\000"
 3079      416C7469 
 3079      74756465 
 3079      5F507574 
 3079      41727261 
 3080              	.LASF17:
 3081 03cb 73697A65 		.ascii	"sizetype\000"
 3081      74797065 
 3081      00
 3082              	.LASF16:
 3083 03d4 6C6F6E67 		.ascii	"long double\000"
 3083      20646F75 
 3083      626C6500 
 3084              	.LASF30:
 3085 03e0 5350495F 		.ascii	"SPI_Altitude_ReadRxStatus\000"
 3085      416C7469 
 3085      74756465 
 3085      5F526561 
 3085      64527853 
 3086              	.LASF25:
 3087 03fa 5350495F 		.ascii	"SPI_Altitude_SetTxInterruptMode\000"
 3087      416C7469 
 3087      74756465 
 3087      5F536574 
 3087      5478496E 
 3088              	.LASF33:
 3089 041a 74656D70 		.ascii	"tempStatus\000"
 3089      53746174 
 3089      757300
 3090              	.LASF47:
 3091 0425 5350495F 		.ascii	"SPI_Altitude_Init\000"
 3091      416C7469 
 3091      74756465 
 3091      5F496E69 
 3091      7400
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 80


 3092              	.LASF39:
 3093 0437 5350495F 		.ascii	"SPI_Altitude_GetTxBufferSize\000"
 3093      416C7469 
 3093      74756465 
 3093      5F476574 
 3093      54784275 
 3094              	.LASF11:
 3095 0454 666C6F61 		.ascii	"float\000"
 3095      7400
 3096              	.LASF14:
 3097 045a 72656738 		.ascii	"reg8\000"
 3097      00
 3098              	.LASF1:
 3099 045f 756E7369 		.ascii	"unsigned char\000"
 3099      676E6564 
 3099      20636861 
 3099      7200
 3100              	.LASF31:
 3101 046d 5350495F 		.ascii	"SPI_Altitude_WriteTxData\000"
 3101      416C7469 
 3101      74756465 
 3101      5F577269 
 3101      74655478 
 3102              	.LASF2:
 3103 0486 73686F72 		.ascii	"short int\000"
 3103      7420696E 
 3103      7400
 3104              	.LASF44:
 3105 0490 62797465 		.ascii	"byteCount\000"
 3105      436F756E 
 3105      7400
 3106              	.LASF49:
 3107 049a 5350495F 		.ascii	"SPI_Altitude_EnableInt\000"
 3107      416C7469 
 3107      74756465 
 3107      5F456E61 
 3107      626C6549 
 3108              	.LASF36:
 3109 04b1 72784461 		.ascii	"rxData\000"
 3109      746100
 3110              	.LASF13:
 3111 04b8 63686172 		.ascii	"char\000"
 3111      00
 3112              	.LASF40:
 3113 04bd 5350495F 		.ascii	"SPI_Altitude_ClearRxBuffer\000"
 3113      416C7469 
 3113      74756465 
 3113      5F436C65 
 3113      61725278 
 3114              	.LASF43:
 3115 04d8 62756666 		.ascii	"buffer\000"
 3115      657200
 3116              	.LASF46:
 3117 04df 5350495F 		.ascii	"SPI_Altitude_ClearFIFO\000"
 3117      416C7469 
 3117      74756465 
 3117      5F436C65 
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 81


 3117      61724649 
 3118              	.LASF59:
 3119 04f6 5350495F 		.ascii	"SPI_Altitude_txBufferFull\000"
 3119      416C7469 
 3119      74756465 
 3119      5F747842 
 3119      75666665 
 3120              	.LASF53:
 3121 0510 5350495F 		.ascii	"SPI_Altitude_initVar\000"
 3121      416C7469 
 3121      74756465 
 3121      5F696E69 
 3121      74566172 
 3122              	.LASF37:
 3123 0525 5350495F 		.ascii	"SPI_Altitude_GetRxBufferSize\000"
 3123      416C7469 
 3123      74756465 
 3123      5F476574 
 3123      52784275 
 3124              	.LASF22:
 3125 0542 5350495F 		.ascii	"SPI_Altitude_Enable\000"
 3125      416C7469 
 3125      74756465 
 3125      5F456E61 
 3125      626C6500 
 3126              	.LASF24:
 3127 0556 656E6162 		.ascii	"enableInterrupts\000"
 3127      6C65496E 
 3127      74657272 
 3127      75707473 
 3127      00
 3128              	.LASF18:
 3129 0567 5350495F 		.ascii	"SPI_Altitude_EnableRxInt\000"
 3129      416C7469 
 3129      74756465 
 3129      5F456E61 
 3129      626C6552 
 3130              	.LASF58:
 3131 0580 5350495F 		.ascii	"SPI_Altitude_txBufferWrite\000"
 3131      416C7469 
 3131      74756465 
 3131      5F747842 
 3131      75666665 
 3132              	.LASF26:
 3133 059b 5350495F 		.ascii	"SPI_Altitude_SetRxInterruptMode\000"
 3133      416C7469 
 3133      74756465 
 3133      5F536574 
 3133      5278496E 
 3134              	.LASF57:
 3135 05bb 5350495F 		.ascii	"SPI_Altitude_txBufferRead\000"
 3135      416C7469 
 3135      74756465 
 3135      5F747842 
 3135      75666665 
 3136              	.LASF32:
 3137 05d5 74784461 		.ascii	"txData\000"
ARM GAS  C:\Users\Nathan\AppData\Local\Temp\ccxYnS06.s 			page 82


 3137      746100
 3138              	.LASF51:
 3139 05dc 5350495F 		.ascii	"SPI_Altitude_SetInterruptMode\000"
 3139      416C7469 
 3139      74756465 
 3139      5F536574 
 3139      496E7465 
 3140              	.LASF20:
 3141 05fa 5350495F 		.ascii	"SPI_Altitude_DisableRxInt\000"
 3141      416C7469 
 3141      74756465 
 3141      5F446973 
 3141      61626C65 
 3142              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
